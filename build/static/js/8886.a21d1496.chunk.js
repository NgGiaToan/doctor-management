"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[8886],{98886:function(e,r,n){n.r(r);var t=n(98655),o=n(61113),i=n(29466),s=n(46417);r.default=function(){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.Z,{variant:"h4",className:"mb-40 font-700",children:"FuseTheme"}),(0,s.jsxs)(o.Z,{className:"mb-16",component:"p",children:[(0,s.jsx)("code",{children:"FuseTheme"})," is the theming component of the Fuse React. It allows us to change predefined Material UI themes. It should wrap the ",(0,s.jsx)("code",{children:"FuseLayout"})," component."]}),(0,s.jsx)(o.Z,{className:"mb-16",component:"p",children:(0,s.jsx)("code",{children:"src/app/App.js"})}),(0,s.jsx)(t.Z,{component:"pre",className:"language-jsx",children:n(39025)}),(0,s.jsx)(o.Z,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Configuration"}),(0,s.jsxs)(o.Z,{className:"mb-16",component:"p",children:["Please checkout",(0,s.jsx)(i.rU,{className:"font-normal mx-4",to:"/documentation/theming/theme-schemes",children:"theming"}),"at documentation."]})]})}},39025:function(e,r,n){n.r(r),r.default="import '@mock-api';\r\nimport BrowserRouter from '@fuse/core/BrowserRouter';\r\nimport FuseLayout from '@fuse/core/FuseLayout';\r\nimport FuseTheme from '@fuse/core/FuseTheme';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { useSelector } from 'react-redux';\r\nimport rtlPlugin from 'stylis-plugin-rtl';\r\nimport createCache from '@emotion/cache';\r\nimport { CacheProvider } from '@emotion/react';\r\nimport { selectCurrentLanguageDirection } from 'app/store/i18nSlice';\r\nimport { selectUser } from 'app/store/userSlice';\r\nimport themeLayouts from 'app/theme-layouts/themeLayouts';\r\nimport { selectMainTheme } from 'app/store/fuse/settingsSlice';\r\nimport FuseAuthorization from '@fuse/core/FuseAuthorization';\r\nimport settingsConfig from 'app/configs/settingsConfig';\r\nimport withAppProviders from './withAppProviders';\r\nimport { AuthProvider } from './auth/AuthContext';\r\n\r\n// import axios from 'axios';\r\n/**\r\n * Axios HTTP Request defaults\r\n */\r\n// axios.defaults.baseURL = \"\";\r\n// axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n// axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\nconst emotionCacheOptions = {\r\n  rtl: {\r\n    key: 'muirtl',\r\n    stylisPlugins: [rtlPlugin],\r\n    insertionPoint: document.getElementById('emotion-insertion-point'),\r\n  },\r\n  ltr: {\r\n    key: 'muiltr',\r\n    stylisPlugins: [],\r\n    insertionPoint: document.getElementById('emotion-insertion-point'),\r\n  },\r\n};\r\n\r\nconst App = () => {\r\n  const user = useSelector(selectUser);\r\n  const langDirection = useSelector(selectCurrentLanguageDirection);\r\n  const mainTheme = useSelector(selectMainTheme);\r\n\r\n  return (\r\n    <CacheProvider value={createCache(emotionCacheOptions[langDirection])}>\r\n      <FuseTheme theme={mainTheme} direction={langDirection}>\r\n        <AuthProvider>\r\n          <BrowserRouter>\r\n            <FuseAuthorization\r\n              userRole={user.role}\r\n              loginRedirectUrl={settingsConfig.loginRedirectUrl}\r\n            >\r\n              <SnackbarProvider\r\n                maxSnack={5}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                classes={{\r\n                  containerRoot: 'bottom-0 right-0 mb-52 md:mb-68 mr-8 lg:mr-80 z-99',\r\n                }}\r\n              >\r\n                <FuseLayout layouts={themeLayouts} />\r\n              </SnackbarProvider>\r\n            </FuseAuthorization>\r\n          </BrowserRouter>\r\n        </AuthProvider>\r\n      </FuseTheme>\r\n    </CacheProvider>\r\n  );\r\n};\r\n\r\nexport default withAppProviders(App)();\r\n"}}]);