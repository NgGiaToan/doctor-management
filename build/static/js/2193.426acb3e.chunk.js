"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[2193],{44269:function(n,e,r){r.d(e,{Z:function(){return I}});var o=r(29439),t=r(98655),i=r(73428),a=r(65280),l=r(5297),s=r(83061),c=r(47313),m=r(17551),u=r(9506),d=r(1413),p=r(45987),h=r(1168),g=r(87327),f=r(20617),x=r(86173),C=r(259),b=r(19860),j=r(88564),v=r(70499),Z=r(46417),D=["children","name"];function y(n){var e=n.children,r=n.document,o=(0,b.Z)();c.useEffect((function(){r.body.dir=o.direction}),[r,o.direction]);var t=c.useMemo((function(){return(0,f.Z)({key:"iframe-demo-".concat(o.direction),prepend:!0,container:r.head,stylisPlugins:"rtl"===o.direction?[g.Z]:[]})}),[r,o.direction]),i=c.useCallback((function(){return r.defaultView}),[r]);return(0,Z.jsx)(C.StyleSheetManager,{target:r.head,stylisPlugins:"rtl"===o.direction?[g.Z]:[],children:(0,Z.jsxs)(x.C,{value:t,children:[(0,Z.jsx)(v.Z,{styles:function(){return{html:{fontSize:"62.5%"}}}}),c.cloneElement(e,{window:i})]})})}var T=(0,j.ZP)("iframe")((function(n){var e=n.theme;return{backgroundColor:e.palette.background.default,flexGrow:1,height:400,border:0,boxShadow:e.shadows[1]}}));function k(n){var e,r=n.children,t=n.name,i=(0,p.Z)(n,D),a="".concat(t," demo"),l=c.useRef(null),s=c.useReducer((function(){return!0}),!1),m=(0,o.Z)(s,2),u=m[0],g=m[1];c.useEffect((function(){var n=l.current.contentDocument;null==n||"complete"!==n.readyState||u||g()}),[u]);var f=null===(e=l.current)||void 0===e?void 0:e.contentDocument;return(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)(T,(0,d.Z)({onLoad:g,ref:l,title:a},i)),!1!==u?h.createPortal((0,Z.jsx)(y,{document:f,children:r}),f.body):null]})}var B=c.memo(k),w=r(56993);function S(n){var e=(0,c.useState)(n.currentTabIndex),r=(0,o.Z)(e,2),d=r[0],p=r[1],h=n.component,g=n.raw,f=n.iframe,x=n.className,C=n.name;return(0,Z.jsxs)(i.Z,{className:(0,s.default)(x,"shadow"),sx:{backgroundColor:function(n){return(0,m._j)(n.palette.background.paper,"light"===n.palette.mode?.01:.1)}},children:[(0,Z.jsx)(u.Z,{sx:{backgroundColor:function(n){return(0,m._j)(n.palette.background.paper,"light"===n.palette.mode?.02:.2)}},children:(0,Z.jsxs)(l.Z,{classes:{root:"border-b-1",flexContainer:"justify-end"},value:d,onChange:function(n,e){p(e)},textColor:"secondary",indicatorColor:"secondary",children:[h&&(0,Z.jsx)(a.Z,{classes:{root:"min-w-64"},icon:(0,Z.jsx)(w.Z,{children:"heroicons-outline:eye"})}),g&&(0,Z.jsx)(a.Z,{classes:{root:"min-w-64"},icon:(0,Z.jsx)(w.Z,{children:"heroicons-outline:code"})})]})}),(0,Z.jsxs)("div",{className:"flex justify-center max-w-full relative",children:[(0,Z.jsx)("div",{className:0===d?"flex flex-1 max-w-full":"hidden",children:h&&(f?(0,Z.jsx)(B,{name:C,children:(0,Z.jsx)(h,{})}):(0,Z.jsx)("div",{className:"p-24 flex flex-1 justify-center max-w-full",children:(0,Z.jsx)(h,{})}))}),(0,Z.jsx)("div",{className:1===d?"flex flex-1":"hidden",children:g&&(0,Z.jsx)("div",{className:"flex flex-1",children:(0,Z.jsx)(t.Z,{component:"pre",className:"language-javascript w-full",sx:{borderRadius:"0!important"},children:g.default})})})]})]})}S.defaultProps={name:"",currentTabIndex:0};var I=S},47221:function(n,e,r){r.d(e,{Z:function(){return d}});var o=r(29439),t=r(47313),i=r(24193),a=r(94469),l=r(4117),s=r(96467),c=r(97762),m=r(33604),u=r(46417);function d(){var n=t.useState(!1),e=(0,o.Z)(n,2),r=e[0],d=e[1],p=function(){d(!1)};return(0,u.jsxs)("div",{children:[(0,u.jsx)(i.Z,{variant:"outlined",onClick:function(){d(!0)},children:"Open alert dialog"}),(0,u.jsxs)(a.Z,{open:r,onClose:p,"aria-labelledby":"alert-dialog-title","aria-describedby":"alert-dialog-description",children:[(0,u.jsx)(m.Z,{id:"alert-dialog-title",children:"Use Google's location service?"}),(0,u.jsx)(s.Z,{children:(0,u.jsx)(c.Z,{id:"alert-dialog-description",children:"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."})}),(0,u.jsxs)(l.Z,{children:[(0,u.jsx)(i.Z,{onClick:p,children:"Disagree"}),(0,u.jsx)(i.Z,{onClick:p,autoFocus:!0,children:"Agree"})]})]})]})}},72520:function(n,e,r){r.d(e,{Z:function(){return g}});var o=r(29439),t=r(1413),i=r(47313),a=r(24193),l=r(94469),s=r(4117),c=r(96467),m=r(97762),u=r(33604),d=r(50301),p=r(46417),h=i.forwardRef((function(n,e){return(0,p.jsx)(d.Z,(0,t.Z)({direction:"up",ref:e},n))}));function g(){var n=i.useState(!1),e=(0,o.Z)(n,2),r=e[0],t=e[1],d=function(){t(!1)};return(0,p.jsxs)("div",{children:[(0,p.jsx)(a.Z,{variant:"outlined",onClick:function(){t(!0)},children:"Slide in alert dialog"}),(0,p.jsxs)(l.Z,{open:r,TransitionComponent:h,keepMounted:!0,onClose:d,"aria-describedby":"alert-dialog-slide-description",children:[(0,p.jsx)(u.Z,{children:"Use Google's location service?"}),(0,p.jsx)(c.Z,{children:(0,p.jsx)(m.Z,{id:"alert-dialog-slide-description",children:"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."})}),(0,p.jsxs)(s.Z,{children:[(0,p.jsx)(a.Z,{onClick:d,children:"Disagree"}),(0,p.jsx)(a.Z,{onClick:d,children:"Agree"})]})]})]})}},13331:function(n,e,r){r.d(e,{Z:function(){return D}});var o=r(1413),t=r(29439),i=r(45987),a=r(47313),l=r(9506),s=r(24193),c=r(48310),m=r(60194),u=r(83213),d=r(33604),p=r(96467),h=r(4117),g=r(94469),f=r(54299),x=r(31058),C=r(83929),b=r(46417),j=["onClose","value","open"],v=["None","Atria","Callisto","Dione","Ganymede","Hangouts Call","Luna","Oberon","Phobos","Pyxis","Sedna","Titania","Triton","Umbriel"];function Z(n){var e=n.onClose,r=n.value,l=n.open,c=(0,i.Z)(n,j),m=a.useState(r),u=(0,t.Z)(m,2),Z=u[0],D=u[1],y=a.useRef(null);a.useEffect((function(){l||D(r)}),[r,l]);return(0,b.jsxs)(g.Z,(0,o.Z)((0,o.Z)({sx:{"& .MuiDialog-paper":{width:"80%",maxHeight:435}},maxWidth:"xs",TransitionProps:{onEntering:function(){null!=y.current&&y.current.focus()}},open:l},c),{},{children:[(0,b.jsx)(d.Z,{children:"Phone Ringtone"}),(0,b.jsx)(p.Z,{dividers:!0,children:(0,b.jsx)(f.Z,{ref:y,"aria-label":"ringtone",name:"ringtone",value:Z,onChange:function(n){D(n.target.value)},children:v.map((function(n){return(0,b.jsx)(C.Z,{value:n,control:(0,b.jsx)(x.Z,{}),label:n},n)}))})}),(0,b.jsxs)(h.Z,{children:[(0,b.jsx)(s.Z,{autoFocus:!0,onClick:function(){e()},children:"Cancel"}),(0,b.jsx)(s.Z,{onClick:function(){e(Z)},children:"Ok"})]})]}))}function D(){var n=a.useState(!1),e=(0,t.Z)(n,2),r=e[0],o=e[1],i=a.useState("Dione"),s=(0,t.Z)(i,2),d=s[0],p=s[1];return(0,b.jsx)(l.Z,{sx:{width:"100%",maxWidth:360,bgcolor:"background.paper"},children:(0,b.jsxs)(c.Z,{component:"div",role:"group",children:[(0,b.jsx)(m.ZP,{button:!0,divider:!0,disabled:!0,children:(0,b.jsx)(u.Z,{primary:"Interruptions"})}),(0,b.jsx)(m.ZP,{button:!0,divider:!0,"aria-haspopup":"true","aria-controls":"ringtone-menu","aria-label":"phone ringtone",onClick:function(){o(!0)},children:(0,b.jsx)(u.Z,{primary:"Phone ringtone",secondary:d})}),(0,b.jsx)(m.ZP,{button:!0,divider:!0,disabled:!0,children:(0,b.jsx)(u.Z,{primary:"Default notification ringtone",secondary:"Tethys"})}),(0,b.jsx)(Z,{id:"ringtone-menu",keepMounted:!0,open:r,onClose:function(n){o(!1),n&&p(n)},value:d})]})})}},94386:function(n,e,r){r.d(e,{Z:function(){return j}});var o=r(29439),t=r(1413),i=r(45987),a=r(47313),l=r(24193),s=r(88564),c=r(94469),m=r(33604),u=r(96467),d=r(4117),p=r(47131),h=r(11198),g=r(61113),f=r(46417),x=["children","onClose"],C=(0,s.ZP)(c.Z)((function(n){var e=n.theme;return{"& .MuiDialogContent-root":{padding:e.spacing(2)},"& .MuiDialogActions-root":{padding:e.spacing(1)}}})),b=function(n){var e=n.children,r=n.onClose,o=(0,i.Z)(n,x);return(0,f.jsxs)(m.Z,(0,t.Z)((0,t.Z)({sx:{m:0,p:2}},o),{},{children:[e,r?(0,f.jsx)(p.Z,{"aria-label":"close",onClick:r,sx:{position:"absolute",right:8,top:8,color:function(n){return n.palette.grey[500]}},children:(0,f.jsx)(h.Z,{})}):null]}))};function j(){var n=a.useState(!1),e=(0,o.Z)(n,2),r=e[0],t=e[1],i=function(){t(!1)};return(0,f.jsxs)("div",{children:[(0,f.jsx)(l.Z,{variant:"outlined",onClick:function(){t(!0)},children:"Open dialog"}),(0,f.jsxs)(C,{onClose:i,"aria-labelledby":"customized-dialog-title",open:r,children:[(0,f.jsx)(b,{id:"customized-dialog-title",onClose:i,children:"Modal title"}),(0,f.jsxs)(u.Z,{dividers:!0,children:[(0,f.jsx)(g.Z,{gutterBottom:!0,children:"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros."}),(0,f.jsx)(g.Z,{gutterBottom:!0,children:"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor."}),(0,f.jsx)(g.Z,{gutterBottom:!0,children:"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla."})]}),(0,f.jsx)(d.Z,{children:(0,f.jsx)(l.Z,{autoFocus:!0,onClick:i,children:"Save changes"})})]})]})}},96357:function(n,e,r){r.d(e,{Z:function(){return x}});var o=r(29439),t=r(1413),i=r(47313),a=r(24193),l=r(94469),s=r(4117),c=r(96467),m=r(97762),u=r(33604),d=r(82295),p=r(49461),h=r.n(p),g=r(46417);function f(n){return(0,g.jsx)(h(),{handle:"#draggable-dialog-title",cancel:'[class*="MuiDialogContent-root"]',children:(0,g.jsx)(d.Z,(0,t.Z)({},n))})}function x(){var n=i.useState(!1),e=(0,o.Z)(n,2),r=e[0],t=e[1],d=function(){t(!1)};return(0,g.jsxs)("div",{children:[(0,g.jsx)(a.Z,{variant:"outlined",onClick:function(){t(!0)},children:"Open draggable dialog"}),(0,g.jsxs)(l.Z,{open:r,onClose:d,PaperComponent:f,"aria-labelledby":"draggable-dialog-title",children:[(0,g.jsx)(u.Z,{style:{cursor:"move"},id:"draggable-dialog-title",children:"Subscribe"}),(0,g.jsx)(c.Z,{children:(0,g.jsx)(m.Z,{children:"To subscribe to this website, please enter your email address here. We will send updates occasionally."})}),(0,g.jsxs)(s.Z,{children:[(0,g.jsx)(a.Z,{autoFocus:!0,onClick:d,children:"Cancel"}),(0,g.jsx)(a.Z,{onClick:d,children:"Subscribe"})]})]})]})}},57695:function(n,e,r){r.d(e,{Z:function(){return p}});var o=r(29439),t=r(47313),i=r(24193),a=r(24631),l=r(94469),s=r(4117),c=r(96467),m=r(97762),u=r(33604),d=r(46417);function p(){var n=t.useState(!1),e=(0,o.Z)(n,2),r=e[0],p=e[1],h=function(){p(!1)};return(0,d.jsxs)("div",{children:[(0,d.jsx)(i.Z,{variant:"outlined",onClick:function(){p(!0)},children:"Open form dialog"}),(0,d.jsxs)(l.Z,{open:r,onClose:h,children:[(0,d.jsx)(u.Z,{children:"Subscribe"}),(0,d.jsxs)(c.Z,{children:[(0,d.jsx)(m.Z,{children:"To subscribe to this website, please enter your email address here. We will send updates occasionally."}),(0,d.jsx)(a.Z,{autoFocus:!0,margin:"dense",id:"name",label:"Email Address",type:"email",fullWidth:!0,variant:"standard"})]}),(0,d.jsxs)(s.Z,{children:[(0,d.jsx)(i.Z,{onClick:h,children:"Cancel"}),(0,d.jsx)(i.Z,{onClick:h,children:"Subscribe"})]})]})]})}},62336:function(n,e,r){r.d(e,{Z:function(){return j}});var o=r(29439),t=r(1413),i=r(47313),a=r(24193),l=r(94469),s=r(83213),c=r(60194),m=r(48310),u=r(19536),d=r(75908),p=r(9289),h=r(47131),g=r(61113),f=r(11198),x=r(50301),C=r(46417),b=i.forwardRef((function(n,e){return(0,C.jsx)(x.Z,(0,t.Z)({direction:"up",ref:e},n))}));function j(){var n=i.useState(!1),e=(0,o.Z)(n,2),r=e[0],t=e[1],x=function(){t(!1)};return(0,C.jsxs)("div",{children:[(0,C.jsx)(a.Z,{variant:"outlined",onClick:function(){t(!0)},children:"Open full-screen dialog"}),(0,C.jsxs)(l.Z,{fullScreen:!0,open:r,onClose:x,TransitionComponent:b,children:[(0,C.jsx)(d.Z,{sx:{position:"relative"},children:(0,C.jsxs)(p.Z,{children:[(0,C.jsx)(h.Z,{edge:"start",color:"inherit",onClick:x,"aria-label":"close",children:(0,C.jsx)(f.Z,{})}),(0,C.jsx)(g.Z,{sx:{ml:2,flex:1},variant:"h6",component:"div",children:"Sound"}),(0,C.jsx)(a.Z,{autoFocus:!0,color:"inherit",onClick:x,children:"save"})]})}),(0,C.jsxs)(m.Z,{children:[(0,C.jsx)(c.ZP,{button:!0,children:(0,C.jsx)(s.Z,{primary:"Phone ringtone",secondary:"Titania"})}),(0,C.jsx)(u.Z,{}),(0,C.jsx)(c.ZP,{button:!0,children:(0,C.jsx)(s.Z,{primary:"Default notification ringtone",secondary:"Tethys"})})]})]})]})}},56593:function(n,e,r){r.d(e,{Z:function(){return b}});var o=r(29439),t=r(47313),i=r(9506),a=r(24193),l=r(94469),s=r(4117),c=r(96467),m=r(97762),u=r(33604),d=r(1550),p=r(83929),h=r(15103),g=r(51405),f=r(40454),x=r(67426),C=r(46417);function b(){var n=t.useState(!1),e=(0,o.Z)(n,2),r=e[0],b=e[1],j=t.useState(!0),v=(0,o.Z)(j,2),Z=v[0],D=v[1],y=t.useState("sm"),T=(0,o.Z)(y,2),k=T[0],B=T[1],w=function(){b(!1)};return(0,C.jsxs)(t.Fragment,{children:[(0,C.jsx)(a.Z,{variant:"outlined",onClick:function(){b(!0)},children:"Open max-width dialog"}),(0,C.jsxs)(l.Z,{fullWidth:Z,maxWidth:k,open:r,onClose:w,children:[(0,C.jsx)(u.Z,{children:"Optional sizes"}),(0,C.jsxs)(c.Z,{children:[(0,C.jsx)(m.Z,{children:"You can set my maximum width and whether to adapt or not."}),(0,C.jsxs)(i.Z,{noValidate:!0,component:"form",sx:{display:"flex",flexDirection:"column",m:"auto",width:"fit-content"},children:[(0,C.jsxs)(d.Z,{sx:{mt:2,minWidth:120},children:[(0,C.jsx)(h.Z,{htmlFor:"max-width",children:"maxWidth"}),(0,C.jsxs)(f.Z,{autoFocus:!0,value:k,onChange:function(n){B(n.target.value)},label:"maxWidth",inputProps:{name:"max-width",id:"max-width"},children:[(0,C.jsx)(g.Z,{value:!1,children:"false"}),(0,C.jsx)(g.Z,{value:"xs",children:"xs"}),(0,C.jsx)(g.Z,{value:"sm",children:"sm"}),(0,C.jsx)(g.Z,{value:"md",children:"md"}),(0,C.jsx)(g.Z,{value:"lg",children:"lg"}),(0,C.jsx)(g.Z,{value:"xl",children:"xl"})]})]}),(0,C.jsx)(p.Z,{sx:{mt:1},control:(0,C.jsx)(x.Z,{checked:Z,onChange:function(n){D(n.target.checked)}}),label:"Full width"})]})]}),(0,C.jsx)(s.Z,{children:(0,C.jsx)(a.Z,{onClick:w,children:"Close"})})]})]})}},31720:function(n,e,r){r.d(e,{Z:function(){return h}});var o=r(29439),t=r(47313),i=r(24193),a=r(94469),l=r(4117),s=r(96467),c=r(97762),m=r(33604),u=r(24813),d=r(19860),p=r(46417);function h(){var n=t.useState(!1),e=(0,o.Z)(n,2),r=e[0],h=e[1],g=(0,d.Z)(),f=(0,u.Z)(g.breakpoints.down("md")),x=function(){h(!1)};return(0,p.jsxs)("div",{children:[(0,p.jsx)(i.Z,{variant:"outlined",onClick:function(){h(!0)},children:"Open responsive dialog"}),(0,p.jsxs)(a.Z,{fullScreen:f,open:r,onClose:x,"aria-labelledby":"responsive-dialog-title",children:[(0,p.jsx)(m.Z,{id:"responsive-dialog-title",children:"Use Google's location service?"}),(0,p.jsx)(s.Z,{children:(0,p.jsx)(c.Z,{children:"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."})}),(0,p.jsxs)(l.Z,{children:[(0,p.jsx)(i.Z,{autoFocus:!0,onClick:x,children:"Disagree"}),(0,p.jsx)(i.Z,{onClick:x,autoFocus:!0,children:"Agree"})]})]})]})}},31002:function(n,e,r){r.d(e,{Z:function(){return p}});var o=r(93433),t=r(29439),i=r(47313),a=r(24193),l=r(94469),s=r(4117),c=r(96467),m=r(97762),u=r(33604),d=r(46417);function p(){var n=i.useState(!1),e=(0,t.Z)(n,2),r=e[0],p=e[1],h=i.useState("paper"),g=(0,t.Z)(h,2),f=g[0],x=g[1],C=function(n){return function(){p(!0),x(n)}},b=function(){p(!1)},j=i.useRef(null);return i.useEffect((function(){if(r){var n=j.current;null!==n&&n.focus()}}),[r]),(0,d.jsxs)("div",{children:[(0,d.jsx)(a.Z,{onClick:C("paper"),children:"scroll=paper"}),(0,d.jsx)(a.Z,{onClick:C("body"),children:"scroll=body"}),(0,d.jsxs)(l.Z,{open:r,onClose:b,scroll:f,"aria-labelledby":"scroll-dialog-title","aria-describedby":"scroll-dialog-description",children:[(0,d.jsx)(u.Z,{id:"scroll-dialog-title",children:"Subscribe"}),(0,d.jsx)(c.Z,{dividers:"paper"===f,children:(0,d.jsx)(m.Z,{id:"scroll-dialog-description",ref:j,tabIndex:-1,children:(0,o.Z)(new Array(50)).map((function(){return"Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et."})).join("\n")})}),(0,d.jsxs)(s.Z,{children:[(0,d.jsx)(a.Z,{onClick:b,children:"Cancel"}),(0,d.jsx)(a.Z,{onClick:b,children:"Subscribe"})]})]})]})}},38453:function(n,e,r){r.d(e,{Z:function(){return j}});var o=r(29439),t=r(47313),i=r(24193),a=r(63585),l=r(48310),s=r(60194),c=r(32600),m=r(83213),u=r(33604),d=r(94469),p=r(11163),h=r(5211),g=r(61113),f=r(89994),x=r(46417),C=["username@gmail.com","user02@gmail.com"];function b(n){var e=n.onClose,r=n.selectedValue,o=n.open,t=function(n){e(n)};return(0,x.jsxs)(d.Z,{onClose:function(){e(r)},open:o,children:[(0,x.jsx)(u.Z,{children:"Set backup account"}),(0,x.jsxs)(l.Z,{sx:{pt:0},children:[C.map((function(n){return(0,x.jsxs)(s.ZP,{button:!0,onClick:function(){return t(n)},children:[(0,x.jsx)(c.Z,{children:(0,x.jsx)(a.Z,{sx:{bgcolor:f.Z[100],color:f.Z[600]},children:(0,x.jsx)(p.Z,{})})}),(0,x.jsx)(m.Z,{primary:n})]},n)})),(0,x.jsxs)(s.ZP,{autoFocus:!0,button:!0,onClick:function(){return t("addAccount")},children:[(0,x.jsx)(c.Z,{children:(0,x.jsx)(a.Z,{children:(0,x.jsx)(h.Z,{})})}),(0,x.jsx)(m.Z,{primary:"Add account"})]})]})]})}function j(){var n=t.useState(!1),e=(0,o.Z)(n,2),r=e[0],a=e[1],l=t.useState(C[1]),s=(0,o.Z)(l,2),c=s[0],m=s[1];return(0,x.jsxs)("div",{children:[(0,x.jsxs)(g.Z,{variant:"subtitle1",component:"div",children:["Selected: ",c]}),(0,x.jsx)("br",{}),(0,x.jsx)(i.Z,{variant:"outlined",onClick:function(){a(!0)},children:"Open simple dialog"}),(0,x.jsx)(b,{selectedValue:c,open:r,onClose:function(n){a(!1),m(n)}})]})}},2193:function(n,e,r){r.r(e);var o=r(44269),t=r(98655),i=r(56993),a=r(24193),l=r(61113),s=r(46417);e.default=function(n){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{className:"flex flex-1 grow-0 items-center justify-end",children:(0,s.jsx)(a.Z,{className:"normal-case",variant:"contained",color:"secondary",component:"a",href:"https://mui.com/components/dialogs",target:"_blank",role:"button",startIcon:(0,s.jsx)(i.Z,{children:"heroicons-outline:external-link"}),children:"Reference"})}),(0,s.jsx)(l.Z,{className:"text-40 my-16 font-700",component:"h1",children:"Dialog"}),(0,s.jsx)(l.Z,{className:"description",children:"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks."}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["A Dialog is a type of ",(0,s.jsx)("a",{href:"/material-ui/react-modal/",children:"modal"})," window that appears in front of app content to provide critical information or ask for a decision. Dialogs disable all app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken."]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Dialogs are purposefully interruptive, so they should be used sparingly."}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Basic dialog"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Simple dialogs can provide additional details or actions about a list item. For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account)."}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Touch mechanics:"}),(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"Choosing an option immediately commits the option and closes the menu"}),(0,s.jsx)("li",{children:"Touching outside of the dialog, or pressing Back, cancels the action and closes the dialog"})]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"SimpleDialog.js",className:"my-24",iframe:!1,component:r(38453).Z,raw:r(86170)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Alerts"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation."}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Most alerts don't need titles. They summarize a decision in a sentence or two by either:"}),(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:'Asking a question (e.g. "Delete this conversation?")'}),(0,s.jsx)("li",{children:"Making a statement related to the action buttons"})]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Use title bar alerts only for high-risk situations, such as the potential loss of connectivity. Users should be able to understand the choices based on the title and button text alone."}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"If a title is required:"}),(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:'Use a clear question or statement with an explanation in the content area, such as "Erase USB storage?".'}),(0,s.jsx)("li",{children:'Avoid apologies, ambiguity, or questions, such as "Warning!" or "Are you sure?"'})]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"AlertDialog.js",className:"my-24",iframe:!1,component:r(47221).Z,raw:r(15498)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Transitions"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["You can also swap out the transition, the next example uses ",(0,s.jsx)("code",{children:"Slide"}),"."]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"AlertDialogSlide.js",className:"my-24",iframe:!1,component:r(72520).Z,raw:r(15506)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Form dialogs"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Form dialogs allow users to fill out form fields within a dialog. For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and touch 'Submit'."}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"FormDialog.js",className:"my-24",iframe:!1,component:r(57695).Z,raw:r(32135)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Customization"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["Here is an example of customizing the component. You can learn more about this in the"," ",(0,s.jsx)("a",{href:"/material-ui/customization/how-to-customize/",children:"overrides documentation page"}),"."]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"The dialog has a close button added to aid usability."}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"CustomizedDialogs.js",className:"my-24",iframe:!1,component:r(94386).Z,raw:r(27454)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Full-screen dialogs"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"FullScreenDialog.js",className:"my-24",iframe:!1,component:r(62336).Z,raw:r(48769)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Optional sizes"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["You can set a dialog maximum width by using the ",(0,s.jsx)("code",{children:"maxWidth"})," enumerable in combination with the ",(0,s.jsx)("code",{children:"fullWidth"})," boolean. When the ",(0,s.jsx)("code",{children:"fullWidth"})," prop is true, the dialog will adapt based on the ",(0,s.jsx)("code",{children:"maxWidth"})," value."]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"MaxWidthDialog.js",className:"my-24",iframe:!1,component:r(56593).Z,raw:r(52892)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Responsive full-screen"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["You may make a dialog responsively full screen using"," ",(0,s.jsx)("a",{href:"/material-ui/react-use-media-query/#usemediaquery",children:(0,s.jsx)("code",{children:"useMediaQuery"})}),"."]}),(0,s.jsx)(t.Z,{component:"pre",className:"language-jsx",children:" \nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nfunction MyComponent() {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  return <Dialog fullScreen={fullScreen} />;\n}\n"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"ResponsiveDialog.js",className:"my-24",iframe:!1,component:r(31720).Z,raw:r(80461)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Confirmation dialogs"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:'Confirmation dialogs require users to explicitly confirm their choice before an option is committed. For example, users can listen to multiple ringtones but only make a final selection upon touching "OK".'}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:'Touching "Cancel" in a confirmation dialog, or pressing Back, cancels the action, discards any changes, and closes the dialog.'}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"ConfirmationDialog.js",className:"my-24",iframe:!1,component:r(13331).Z,raw:r(24842)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Draggable dialog"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["You can create a draggable dialog by using"," ",(0,s.jsx)("a",{href:"https://github.com/react-grid-layout/react-draggable",children:"react-draggable"}),". To do so, you can pass the imported ",(0,s.jsx)("code",{children:"Draggable"})," component as the"," ",(0,s.jsx)("code",{children:"PaperComponent"})," of the ",(0,s.jsx)("code",{children:"Dialog"})," component. This will make the entire dialog draggable."]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"DraggableDialog.js",className:"my-24",iframe:!1,component:r(96357).Z,raw:r(71650)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Scrolling long content"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"When dialogs become too long for the user's viewport or device, they scroll."}),(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"scroll=paper"})," the content of the dialog scrolls within the paper element."]}),(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"scroll=body"})," the content of the dialog scrolls within the body element."]})]}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"Try the demo below to see what we mean:"}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:(0,s.jsx)(o.Z,{name:"ScrollDialog.js",className:"my-24",iframe:!1,component:r(31002).Z,raw:r(89546)})}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Performance"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["Follow the ",(0,s.jsx)("a",{href:"/material-ui/react-modal/#performance",children:"Modal performance section"}),"."]}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Limitations"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["Follow the ",(0,s.jsx)("a",{href:"/material-ui/react-modal/#limitations",children:"Modal limitations section"}),"."]}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Complementary projects"}),(0,s.jsx)(l.Z,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Material UI Confirm"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:[" ",'src="https://img.shields.io/github/stars/jonatanklosko/material-ui-confirm" alt="stars/> src="https://img.shields.io/npm/dm/material-ui-confirm.svg" alt="npm downloads/>']}),(0,s.jsx)(l.Z,{className:"mb-40",component:"div",children:"This package provides dialogs for confirming user actions without writing boilerplate code."}),(0,s.jsx)(l.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Accessibility"}),(0,s.jsxs)(l.Z,{className:"mb-40",component:"div",children:["Follow the ",(0,s.jsx)("a",{href:"/material-ui/react-modal/#accessibility",children:"Modal accessibility section"}),"."]})]})}},15498:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous\r\n            location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},15506:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous\r\n            location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleClose}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},24842:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 435 } }}\r\n      maxWidth=\"xs\"\r\n      TransitionProps={{ onEntering: handleEntering }}\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle>Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel\r\n              value={option}\r\n              key={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk}>Ok</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ConfirmationDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  const handleClickListItem = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (newValue) => {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n      <List component=\"div\" role=\"group\">\r\n        <ListItem button divider disabled>\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"phone ringtone\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n        <ListItem button divider disabled>\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n"},27454:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function CustomizedDialogs() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Modal title\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n            consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\r\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus\r\n            magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec\r\n            ullamcorper nulla non metus auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n}\r\n"},71650:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Paper from '@mui/material/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function DraggableDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open draggable dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          Subscribe\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We\r\n            will send updates occasionally.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},32135:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We\r\n            will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},48769:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Default notification ringtone\"\r\n              secondary=\"Tethys\"\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},52892:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nexport default function MaxWidthDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event) => {\r\n    setMaxWidth(\r\n      // @ts-expect-error autofill of arbitrary value is not handled.\r\n      event.target.value,\r\n    );\r\n  };\r\n\r\n  const handleFullWidthChange = (event) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <Box\r\n            noValidate\r\n            component=\"form\"\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              m: 'auto',\r\n              width: 'fit-content',\r\n            }}\r\n          >\r\n            <FormControl sx={{ mt: 2, minWidth: 120 }}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                label=\"maxWidth\"\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              sx={{ mt: 1 }}\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"},80461:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous\r\n            location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},89546:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function ScrollDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState('paper');\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\r\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"},86170:function(n,e,r){r.r(e),e.default="import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Typography from '@mui/material/Typography';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Set backup account</DialogTitle>\r\n      <List sx={{ pt: 0 }}>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\" component=\"div\">\r\n        Selected: {selectedValue}\r\n      </Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog\r\n        selectedValue={selectedValue}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}}]);