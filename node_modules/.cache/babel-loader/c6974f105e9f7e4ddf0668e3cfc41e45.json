{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateExample = exports.getSuggest = exports.validateDefinedAndNonEmpty = exports.fieldNonEmpty = exports.missingRequiredField = exports.matchesJsonSchemaType = exports.oasTypeOf = void 0;\n\nconst levenshtein = require(\"js-levenshtein\");\n\nconst ref_utils_1 = require(\"../ref-utils\");\n\nconst ajv_1 = require(\"./ajv\");\n\nfunction oasTypeOf(value) {\n  if (Array.isArray(value)) {\n    return 'array';\n  } else if (value === null) {\n    return 'null';\n  } else {\n    return typeof value;\n  }\n}\n\nexports.oasTypeOf = oasTypeOf;\n/**\n * Checks if value matches specified JSON schema type\n *\n * @param {*} value - value to check\n * @param {JSONSchemaType} type - JSON Schema type\n * @returns boolean\n */\n\nfunction matchesJsonSchemaType(value, type, nullable) {\n  if (nullable && value === null) {\n    return value === null;\n  }\n\n  switch (type) {\n    case 'array':\n      return Array.isArray(value);\n\n    case 'object':\n      return typeof value === 'object' && value !== null && !Array.isArray(value);\n\n    case 'null':\n      return value === null;\n\n    case 'integer':\n      return Number.isInteger(value);\n\n    default:\n      return typeof value === type;\n  }\n}\n\nexports.matchesJsonSchemaType = matchesJsonSchemaType;\n\nfunction missingRequiredField(type, field) {\n  return `${type} object should contain \\`${field}\\` field.`;\n}\n\nexports.missingRequiredField = missingRequiredField;\n\nfunction fieldNonEmpty(type, field) {\n  return `${type} object \\`${field}\\` must be non-empty string.`;\n}\n\nexports.fieldNonEmpty = fieldNonEmpty;\n\nfunction validateDefinedAndNonEmpty(fieldName, value, ctx) {\n  if (typeof value !== 'object') {\n    return;\n  }\n\n  if (value[fieldName] === undefined) {\n    ctx.report({\n      message: missingRequiredField(ctx.type.name, fieldName),\n      location: ctx.location.child([fieldName]).key()\n    });\n  } else if (!value[fieldName]) {\n    ctx.report({\n      message: fieldNonEmpty(ctx.type.name, fieldName),\n      location: ctx.location.child([fieldName]).key()\n    });\n  }\n}\n\nexports.validateDefinedAndNonEmpty = validateDefinedAndNonEmpty;\n\nfunction getSuggest(given, variants) {\n  if (typeof given !== 'string' || !variants.length) return [];\n  const distances = [];\n\n  for (let i = 0; i < variants.length; i++) {\n    const distance = levenshtein(given, variants[i]);\n\n    if (distance < 4) {\n      distances.push({\n        distance,\n        variant: variants[i]\n      });\n    }\n  }\n\n  distances.sort((a, b) => a.distance - b.distance); // if (bestMatch.distance <= 4) return bestMatch.string;\n\n  return distances.map(d => d.variant);\n}\n\nexports.getSuggest = getSuggest;\n\nfunction validateExample(example, schema, dataLoc, _ref, disallowAdditionalProperties) {\n  let {\n    resolve,\n    location,\n    report\n  } = _ref;\n\n  try {\n    const {\n      valid,\n      errors\n    } = ajv_1.validateJsonSchema(example, schema, location.child('schema'), dataLoc.pointer, resolve, disallowAdditionalProperties);\n\n    if (!valid) {\n      for (let error of errors) {\n        report({\n          message: `Example value must conform to the schema: ${error.message}.`,\n          location: Object.assign(Object.assign({}, new ref_utils_1.Location(dataLoc.source, error.instancePath)), {\n            reportOnKey: error.keyword === 'additionalProperties'\n          }),\n          from: location,\n          suggest: error.suggest\n        });\n      }\n    }\n  } catch (e) {\n    report({\n      message: `Example validation errored: ${e.message}.`,\n      location: location.child('schema'),\n      from: location\n    });\n  }\n}\n\nexports.validateExample = validateExample;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateExample","getSuggest","validateDefinedAndNonEmpty","fieldNonEmpty","missingRequiredField","matchesJsonSchemaType","oasTypeOf","levenshtein","require","ref_utils_1","ajv_1","Array","isArray","type","nullable","Number","isInteger","field","fieldName","ctx","undefined","report","message","name","location","child","key","given","variants","length","distances","i","distance","push","variant","sort","a","b","map","d","example","schema","dataLoc","disallowAdditionalProperties","resolve","valid","errors","validateJsonSchema","pointer","error","assign","Location","source","instancePath","reportOnKey","keyword","from","suggest","e"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateExample = exports.getSuggest = exports.validateDefinedAndNonEmpty = exports.fieldNonEmpty = exports.missingRequiredField = exports.matchesJsonSchemaType = exports.oasTypeOf = void 0;\nconst levenshtein = require(\"js-levenshtein\");\nconst ref_utils_1 = require(\"../ref-utils\");\nconst ajv_1 = require(\"./ajv\");\nfunction oasTypeOf(value) {\n    if (Array.isArray(value)) {\n        return 'array';\n    }\n    else if (value === null) {\n        return 'null';\n    }\n    else {\n        return typeof value;\n    }\n}\nexports.oasTypeOf = oasTypeOf;\n/**\n * Checks if value matches specified JSON schema type\n *\n * @param {*} value - value to check\n * @param {JSONSchemaType} type - JSON Schema type\n * @returns boolean\n */\nfunction matchesJsonSchemaType(value, type, nullable) {\n    if (nullable && value === null) {\n        return value === null;\n    }\n    switch (type) {\n        case 'array':\n            return Array.isArray(value);\n        case 'object':\n            return typeof value === 'object' && value !== null && !Array.isArray(value);\n        case 'null':\n            return value === null;\n        case 'integer':\n            return Number.isInteger(value);\n        default:\n            return typeof value === type;\n    }\n}\nexports.matchesJsonSchemaType = matchesJsonSchemaType;\nfunction missingRequiredField(type, field) {\n    return `${type} object should contain \\`${field}\\` field.`;\n}\nexports.missingRequiredField = missingRequiredField;\nfunction fieldNonEmpty(type, field) {\n    return `${type} object \\`${field}\\` must be non-empty string.`;\n}\nexports.fieldNonEmpty = fieldNonEmpty;\nfunction validateDefinedAndNonEmpty(fieldName, value, ctx) {\n    if (typeof value !== 'object') {\n        return;\n    }\n    if (value[fieldName] === undefined) {\n        ctx.report({\n            message: missingRequiredField(ctx.type.name, fieldName),\n            location: ctx.location.child([fieldName]).key(),\n        });\n    }\n    else if (!value[fieldName]) {\n        ctx.report({\n            message: fieldNonEmpty(ctx.type.name, fieldName),\n            location: ctx.location.child([fieldName]).key(),\n        });\n    }\n}\nexports.validateDefinedAndNonEmpty = validateDefinedAndNonEmpty;\nfunction getSuggest(given, variants) {\n    if (typeof given !== 'string' || !variants.length)\n        return [];\n    const distances = [];\n    for (let i = 0; i < variants.length; i++) {\n        const distance = levenshtein(given, variants[i]);\n        if (distance < 4) {\n            distances.push({ distance, variant: variants[i] });\n        }\n    }\n    distances.sort((a, b) => a.distance - b.distance);\n    // if (bestMatch.distance <= 4) return bestMatch.string;\n    return distances.map((d) => d.variant);\n}\nexports.getSuggest = getSuggest;\nfunction validateExample(example, schema, dataLoc, { resolve, location, report }, disallowAdditionalProperties) {\n    try {\n        const { valid, errors } = ajv_1.validateJsonSchema(example, schema, location.child('schema'), dataLoc.pointer, resolve, disallowAdditionalProperties);\n        if (!valid) {\n            for (let error of errors) {\n                report({\n                    message: `Example value must conform to the schema: ${error.message}.`,\n                    location: Object.assign(Object.assign({}, new ref_utils_1.Location(dataLoc.source, error.instancePath)), { reportOnKey: error.keyword === 'additionalProperties' }),\n                    from: location,\n                    suggest: error.suggest,\n                });\n            }\n        }\n    }\n    catch (e) {\n        report({\n            message: `Example validation errored: ${e.message}.`,\n            location: location.child('schema'),\n            from: location,\n        });\n    }\n}\nexports.validateExample = validateExample;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}