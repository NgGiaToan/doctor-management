{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoEnumTypeMismatch = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst NoEnumTypeMismatch = () => {\n  return {\n    Schema(schema, _ref) {\n      let {\n        report,\n        location\n      } = _ref;\n      if (schema.enum && !Array.isArray(schema.enum)) return;\n\n      if (schema.enum && schema.type && !Array.isArray(schema.type)) {\n        const typeMismatchedValues = schema.enum.filter(item => !utils_1.matchesJsonSchemaType(item, schema.type, schema.nullable));\n\n        for (const mismatchedValue of typeMismatchedValues) {\n          report({\n            message: `All values of \\`enum\\` field must be of the same type as the \\`type\\` field: expected \"${schema.type}\" but received \"${utils_1.oasTypeOf(mismatchedValue)}\".`,\n            location: location.child(['enum', schema.enum.indexOf(mismatchedValue)])\n          });\n        }\n      }\n\n      if (schema.enum && schema.type && Array.isArray(schema.type)) {\n        const mismatchedResults = {};\n\n        for (const enumValue of schema.enum) {\n          mismatchedResults[enumValue] = [];\n\n          for (const type of schema.type) {\n            const valid = utils_1.matchesJsonSchemaType(enumValue, type, schema.nullable);\n            if (!valid) mismatchedResults[enumValue].push(type);\n          }\n\n          if (mismatchedResults[enumValue].length !== schema.type.length) delete mismatchedResults[enumValue];\n        }\n\n        ;\n\n        for (const mismatchedKey of Object.keys(mismatchedResults)) {\n          report({\n            message: `Enum value \\`${mismatchedKey}\\` must be of one type. Allowed types: \\`${schema.type}\\`.`,\n            location: location.child(['enum', schema.enum.indexOf(mismatchedKey)])\n          });\n        }\n\n        ;\n      }\n    }\n\n  };\n};\n\nexports.NoEnumTypeMismatch = NoEnumTypeMismatch;","map":{"version":3,"names":["Object","defineProperty","exports","value","NoEnumTypeMismatch","utils_1","require","Schema","schema","report","location","enum","Array","isArray","type","typeMismatchedValues","filter","item","matchesJsonSchemaType","nullable","mismatchedValue","message","oasTypeOf","child","indexOf","mismatchedResults","enumValue","valid","push","length","mismatchedKey","keys"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/common/no-enum-type-mismatch.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoEnumTypeMismatch = void 0;\nconst utils_1 = require(\"../utils\");\nconst NoEnumTypeMismatch = () => {\n    return {\n        Schema(schema, { report, location }) {\n            if (schema.enum && !Array.isArray(schema.enum))\n                return;\n            if (schema.enum && schema.type && !Array.isArray(schema.type)) {\n                const typeMismatchedValues = schema.enum.filter((item) => !utils_1.matchesJsonSchemaType(item, schema.type, schema.nullable));\n                for (const mismatchedValue of typeMismatchedValues) {\n                    report({\n                        message: `All values of \\`enum\\` field must be of the same type as the \\`type\\` field: expected \"${schema.type}\" but received \"${utils_1.oasTypeOf(mismatchedValue)}\".`,\n                        location: location.child(['enum', schema.enum.indexOf(mismatchedValue)]),\n                    });\n                }\n            }\n            if (schema.enum && schema.type && Array.isArray(schema.type)) {\n                const mismatchedResults = {};\n                for (const enumValue of schema.enum) {\n                    mismatchedResults[enumValue] = [];\n                    for (const type of schema.type) {\n                        const valid = utils_1.matchesJsonSchemaType(enumValue, type, schema.nullable);\n                        if (!valid)\n                            mismatchedResults[enumValue].push(type);\n                    }\n                    if (mismatchedResults[enumValue].length !== schema.type.length)\n                        delete mismatchedResults[enumValue];\n                }\n                ;\n                for (const mismatchedKey of Object.keys(mismatchedResults)) {\n                    report({\n                        message: `Enum value \\`${mismatchedKey}\\` must be of one type. Allowed types: \\`${schema.type}\\`.`,\n                        location: location.child(['enum', schema.enum.indexOf(mismatchedKey)]),\n                    });\n                }\n                ;\n            }\n        },\n    };\n};\nexports.NoEnumTypeMismatch = NoEnumTypeMismatch;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMF,kBAAkB,GAAG,MAAM;EAC7B,OAAO;IACHG,MAAM,CAACC,MAAD,QAA+B;MAAA,IAAtB;QAAEC,MAAF;QAAUC;MAAV,CAAsB;MACjC,IAAIF,MAAM,CAACG,IAAP,IAAe,CAACC,KAAK,CAACC,OAAN,CAAcL,MAAM,CAACG,IAArB,CAApB,EACI;;MACJ,IAAIH,MAAM,CAACG,IAAP,IAAeH,MAAM,CAACM,IAAtB,IAA8B,CAACF,KAAK,CAACC,OAAN,CAAcL,MAAM,CAACM,IAArB,CAAnC,EAA+D;QAC3D,MAAMC,oBAAoB,GAAGP,MAAM,CAACG,IAAP,CAAYK,MAAZ,CAAoBC,IAAD,IAAU,CAACZ,OAAO,CAACa,qBAAR,CAA8BD,IAA9B,EAAoCT,MAAM,CAACM,IAA3C,EAAiDN,MAAM,CAACW,QAAxD,CAA9B,CAA7B;;QACA,KAAK,MAAMC,eAAX,IAA8BL,oBAA9B,EAAoD;UAChDN,MAAM,CAAC;YACHY,OAAO,EAAG,0FAAyFb,MAAM,CAACM,IAAK,mBAAkBT,OAAO,CAACiB,SAAR,CAAkBF,eAAlB,CAAmC,IADjK;YAEHV,QAAQ,EAAEA,QAAQ,CAACa,KAAT,CAAe,CAAC,MAAD,EAASf,MAAM,CAACG,IAAP,CAAYa,OAAZ,CAAoBJ,eAApB,CAAT,CAAf;UAFP,CAAD,CAAN;QAIH;MACJ;;MACD,IAAIZ,MAAM,CAACG,IAAP,IAAeH,MAAM,CAACM,IAAtB,IAA8BF,KAAK,CAACC,OAAN,CAAcL,MAAM,CAACM,IAArB,CAAlC,EAA8D;QAC1D,MAAMW,iBAAiB,GAAG,EAA1B;;QACA,KAAK,MAAMC,SAAX,IAAwBlB,MAAM,CAACG,IAA/B,EAAqC;UACjCc,iBAAiB,CAACC,SAAD,CAAjB,GAA+B,EAA/B;;UACA,KAAK,MAAMZ,IAAX,IAAmBN,MAAM,CAACM,IAA1B,EAAgC;YAC5B,MAAMa,KAAK,GAAGtB,OAAO,CAACa,qBAAR,CAA8BQ,SAA9B,EAAyCZ,IAAzC,EAA+CN,MAAM,CAACW,QAAtD,CAAd;YACA,IAAI,CAACQ,KAAL,EACIF,iBAAiB,CAACC,SAAD,CAAjB,CAA6BE,IAA7B,CAAkCd,IAAlC;UACP;;UACD,IAAIW,iBAAiB,CAACC,SAAD,CAAjB,CAA6BG,MAA7B,KAAwCrB,MAAM,CAACM,IAAP,CAAYe,MAAxD,EACI,OAAOJ,iBAAiB,CAACC,SAAD,CAAxB;QACP;;QACD;;QACA,KAAK,MAAMI,aAAX,IAA4B9B,MAAM,CAAC+B,IAAP,CAAYN,iBAAZ,CAA5B,EAA4D;UACxDhB,MAAM,CAAC;YACHY,OAAO,EAAG,gBAAeS,aAAc,4CAA2CtB,MAAM,CAACM,IAAK,KAD3F;YAEHJ,QAAQ,EAAEA,QAAQ,CAACa,KAAT,CAAe,CAAC,MAAD,EAASf,MAAM,CAACG,IAAP,CAAYa,OAAZ,CAAoBM,aAApB,CAAT,CAAf;UAFP,CAAD,CAAN;QAIH;;QACD;MACH;IACJ;;EAlCE,CAAP;AAoCH,CArCD;;AAsCA5B,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B"},"metadata":{},"sourceType":"script"}