{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoEmptyEnumServers = void 0;\nvar enumError;\n\n(function (enumError) {\n  enumError[\"empty\"] = \"empty\";\n  enumError[\"invalidDefaultValue\"] = \"invalidDefaultValue\";\n})(enumError || (enumError = {}));\n\nconst NoEmptyEnumServers = () => {\n  return {\n    DefinitionRoot(root, _ref) {\n      let {\n        report,\n        location\n      } = _ref;\n      if (!root.servers || root.servers.length === 0) return;\n      const invalidVariables = [];\n\n      if (Array.isArray(root.servers)) {\n        for (const server of root.servers) {\n          const enumErrors = checkEnumVariables(server);\n          if (!enumErrors) continue;\n          invalidVariables.push(...enumErrors);\n        }\n      } else {\n        const enumErrors = checkEnumVariables(root.servers);\n        if (!enumErrors) return;\n        invalidVariables.push(...enumErrors);\n      }\n\n      for (const invalidVariable of invalidVariables) {\n        if (invalidVariable === enumError.empty) {\n          report({\n            message: 'Server variable with `enum` must be a non-empty array.',\n            location: location.child(['servers']).key()\n          });\n        }\n\n        if (invalidVariable === enumError.invalidDefaultValue) {\n          report({\n            message: 'Server variable define `enum` and `default`. `enum` must include default value',\n            location: location.child(['servers']).key()\n          });\n        }\n      }\n    }\n\n  };\n};\n\nexports.NoEmptyEnumServers = NoEmptyEnumServers;\n\nfunction checkEnumVariables(server) {\n  var _a;\n\n  if (server.variables && Object.keys(server.variables).length === 0) return;\n  const errors = [];\n\n  for (var variable in server.variables) {\n    const serverVariable = server.variables[variable];\n    if (!serverVariable.enum) continue;\n    if (Array.isArray(serverVariable.enum) && ((_a = serverVariable.enum) === null || _a === void 0 ? void 0 : _a.length) === 0) errors.push(enumError.empty);\n    if (!serverVariable.default) continue;\n    const defaultValue = server.variables[variable].default;\n    if (serverVariable.enum && !serverVariable.enum.includes(defaultValue)) errors.push(enumError.invalidDefaultValue);\n  }\n\n  if (errors.length) return errors;\n  return;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","NoEmptyEnumServers","enumError","DefinitionRoot","root","report","location","servers","length","invalidVariables","Array","isArray","server","enumErrors","checkEnumVariables","push","invalidVariable","empty","message","child","key","invalidDefaultValue","_a","variables","keys","errors","variable","serverVariable","enum","default","defaultValue","includes"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/oas3/no-servers-empty-enum.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoEmptyEnumServers = void 0;\nvar enumError;\n(function (enumError) {\n    enumError[\"empty\"] = \"empty\";\n    enumError[\"invalidDefaultValue\"] = \"invalidDefaultValue\";\n})(enumError || (enumError = {}));\nconst NoEmptyEnumServers = () => {\n    return {\n        DefinitionRoot(root, { report, location }) {\n            if (!root.servers || root.servers.length === 0)\n                return;\n            const invalidVariables = [];\n            if (Array.isArray(root.servers)) {\n                for (const server of root.servers) {\n                    const enumErrors = checkEnumVariables(server);\n                    if (!enumErrors)\n                        continue;\n                    invalidVariables.push(...enumErrors);\n                }\n            }\n            else {\n                const enumErrors = checkEnumVariables(root.servers);\n                if (!enumErrors)\n                    return;\n                invalidVariables.push(...enumErrors);\n            }\n            for (const invalidVariable of invalidVariables) {\n                if (invalidVariable === enumError.empty) {\n                    report({\n                        message: 'Server variable with `enum` must be a non-empty array.',\n                        location: location.child(['servers']).key(),\n                    });\n                }\n                if (invalidVariable === enumError.invalidDefaultValue) {\n                    report({\n                        message: 'Server variable define `enum` and `default`. `enum` must include default value',\n                        location: location.child(['servers']).key(),\n                    });\n                }\n            }\n        },\n    };\n};\nexports.NoEmptyEnumServers = NoEmptyEnumServers;\nfunction checkEnumVariables(server) {\n    var _a;\n    if (server.variables && Object.keys(server.variables).length === 0)\n        return;\n    const errors = [];\n    for (var variable in server.variables) {\n        const serverVariable = server.variables[variable];\n        if (!serverVariable.enum)\n            continue;\n        if (Array.isArray(serverVariable.enum) && ((_a = serverVariable.enum) === null || _a === void 0 ? void 0 : _a.length) === 0)\n            errors.push(enumError.empty);\n        if (!serverVariable.default)\n            continue;\n        const defaultValue = server.variables[variable].default;\n        if (serverVariable.enum && !serverVariable.enum.includes(defaultValue))\n            errors.push(enumError.invalidDefaultValue);\n    }\n    if (errors.length)\n        return errors;\n    return;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}