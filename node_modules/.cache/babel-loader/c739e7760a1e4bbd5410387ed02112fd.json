{"ast":null,"code":"import _defineProperty from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import axios from'axios';import{showMessage}from'app/store/fuse/messageSlice';/**\r\n * Update Card\r\n */export var updateCard=createAsyncThunk('scrumboardApp/card/update',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(newData,_ref){var dispatch,getState,_getState$scrumboardA,board,card,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref.dispatch,getState=_ref.getState;_getState$scrumboardA=getState().scrumboardApp,board=_getState$scrumboardA.board,card=_getState$scrumboardA.card;_context.next=4;return axios.put(\"/api/scrumboard/boards/\".concat(board.id,\"/cards/\").concat(card.data.id),newData);case 4:response=_context.sent;_context.next=7;return response.data;case 7:data=_context.sent;dispatch(showMessage({message:'Card Saved',autoHideDuration:2000,anchorOrigin:{vertical:'top',horizontal:'right'}}));return _context.abrupt(\"return\",data);case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());/**\r\n * Remove Card\r\n */export var removeCard=createAsyncThunk('scrumboardApp/card/removeCard',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params,_ref3){var dispatch,getState,_getState$scrumboardA2,board,card,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref3.dispatch,getState=_ref3.getState;_getState$scrumboardA2=getState().scrumboardApp,board=_getState$scrumboardA2.board,card=_getState$scrumboardA2.card;_context2.next=4;return axios.delete(\"/api/scrumboard/boards/\".concat(board.id,\"/cards/\").concat(card.data.id));case 4:response=_context2.sent;_context2.next=7;return response.data;case 7:data=_context2.sent;dispatch(closeCardDialog());return _context2.abrupt(\"return\",data);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());var cardSlice=createSlice({name:'scrumboardApp/card',initialState:{dialogOpen:false,data:null},reducers:{openCardDialog:function openCardDialog(state,action){state.dialogOpen=true;state.data=action.payload;},closeCardDialog:function closeCardDialog(state,action){state.dialogOpen=false;state.data=null;}},extraReducers:_defineProperty({},updateCard.fulfilled,function(state,action){state.data=action.payload;})});var _cardSlice$actions=cardSlice.actions,openCardDialog=_cardSlice$actions.openCardDialog,closeCardDialog=_cardSlice$actions.closeCardDialog;export{openCardDialog,closeCardDialog};export var selectCardDialogOpen=function selectCardDialogOpen(_ref5){var scrumboardApp=_ref5.scrumboardApp;return scrumboardApp.card.dialogOpen;};export var selectCardData=function selectCardData(_ref6){var scrumboardApp=_ref6.scrumboardApp;return scrumboardApp.card.data;};export default cardSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}