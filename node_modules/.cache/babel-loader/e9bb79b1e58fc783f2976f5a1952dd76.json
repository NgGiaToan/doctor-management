{"ast":null,"code":"/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = /* #__PURE__ */new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      found = true;\n\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {\n    iScale,\n    vScale\n  } = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  static defaults = {};\n  static datasetElementType = null;\n  static dataElementType = null;\n\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active, mode);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  static id = 'bar';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = meta => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked,\n        index: datasetIndex\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nclass BubbleController extends DatasetController {\n  static id = 'bubble';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  static id = 'doughnut';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  static descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nclass LineController extends DatasetController {\n  static id = 'line';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nclass PolarAreaController extends DatasetController {\n  static id = 'polarArea';\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nclass PieController extends DoughnutController {\n  static id = 'pie';\n  static defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n}\n\nclass RadarController extends DatasetController {\n  static id = 'radar';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  static overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nclass ScatterController extends DatasetController {\n  static id = 'scatter';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  static overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nclass DateAdapterBase {\n  /**\n  * Override default date adapter methods.\n  * Accepts type parameter to define options type.\n  * @example\n  * Chart._adapters._date.override<{myAdapterOption: string}>({\n  *   init() {\n  *     console.log(this.options.myAdapterOption);\n  *   }\n  * })\n  */\n  static override(members) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  options;\n\n  constructor(options) {\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  init() {}\n\n  formats() {\n    return abstract();\n  }\n\n  parse() {\n    return abstract();\n  }\n\n  format() {\n    return abstract();\n  }\n\n  add() {\n    return abstract();\n  }\n\n  diff() {\n    return abstract();\n  }\n\n  startOf() {\n    return abstract();\n  }\n\n  endOf() {\n    return abstract();\n  }\n\n}\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  static defaults = {};\n  static defaultRoutes = undefined;\n  x;\n  y;\n  active = false;\n  options;\n  $animations;\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  getLabelItems() {\n    let chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    return items;\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  afterAutoSkip() {}\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position,\n      border\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += lineHeight / 2 * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n\n          case 'inner':\n            if (i === ilen - 1) {\n              left -= width;\n            } else if (i > 0) {\n              left -= width / 2;\n            }\n\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        border,\n        grid\n      }\n    } = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = /* #__PURE__ */new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins,\n    localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, _ref2, options, all) {\n  let {\n    plugins,\n    localIds\n  } = _ref2;\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, _ref3, opts, context) {\n  let {\n    plugin,\n    local\n  } = _ref3;\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n\n  for (var _len11 = arguments.length, scaleOptions = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    scaleOptions[_key11 - 1] = arguments[_key11];\n  }\n\n  for (const opts of scaleOptions) {\n    const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n\n    if (axis) {\n      return axis;\n    }\n  }\n\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis\n    };\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter(d => d.xAxisID === id || d.yAxisID === id);\n\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).some(key => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"4.4.6\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {\n    xScale,\n    yScale\n  } = meta;\n\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n\n  return chartArea;\n}\n\nclass Chart {\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register() {\n    registry.add(...arguments);\n    invalidatePlugins();\n  }\n\n  static unregister() {\n    registry.remove(...arguments);\n    invalidatePlugins();\n  }\n\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    const {\n      _active,\n      _lastEvent\n    } = this;\n\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resizeBeforeDraw = null;\n\n      this._resize(width, height);\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n    const isClick = _isClickEvent(e);\n\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n\n}\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, chart => chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference,\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle,\n    borderDash,\n    borderDashOffset\n  } = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nclass ArcElement extends Element {\n  static id = 'arc';\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n  static descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash'\n  };\n  circumference;\n  endAngle;\n  fullCircles;\n  innerRadius;\n  outerRadius;\n  pixelMargin;\n  startAngle;\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n    ctx.restore();\n  }\n\n}\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  static id = 'line';\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  static descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  static id = 'point';\n  parsed;\n  skip;\n  stop;\n  /**\n  * @type {any}\n  */\n\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  /**\n  * @type {any}\n  */\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  static id = 'bar';\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nconst BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nconst BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  return i;\n}\n\nfunction getColorizer(chart) {\n  let i = 0;\n  return (dataset, datasetIndex) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  let k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n\n  beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {\n        datasets\n      },\n      options: chartOptions\n    } = chart.config;\n    const {\n      elements\n    } = chartOptions;\n    const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref5 => {\n    let {\n      start,\n      end\n    } = _ref5;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n\n  const value = _getTargetValue(fill, scale, start);\n\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const {\n        itemWidth,\n        itemHeight\n      } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor;\n      ctx.fillStyle = legendItem.fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth,\n    itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color,\n            useBorderRadius,\n            borderRadius\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  beforeTitle: noop,\n\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    const value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nclass Tooltip extends Element {\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref6 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref6;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    const positionChanged = this._positionChanged(active, e);\n\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive.filter(i => this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n    }\n\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', { ...args,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nclass CategoryScale extends Scale {\n  static id = 'category';\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n\n    ticks.push({\n      value: tickValue\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref7) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref7;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  static id = 'linear';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nconst log10Floor = v => Math.floor(log10(v));\n\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, _ref8) {\n  let {\n    min,\n    max\n  } = _ref8;\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value,\n      major: isMajor(value),\n      significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  static id = 'logarithmic';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {\n    extra,\n    additionalAngle,\n    padding,\n    size\n  } = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y,\n    textAlign,\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n\n  const {\n    left,\n    top,\n    right,\n    bottom\n  } = item;\n\n  const apexesInArea = _isPointInArea({\n    x: left,\n    y: top\n  }, area) || _isPointInArea({\n    x: left,\n    y: bottom\n  }, area) || _isPointInArea({\n    x: right,\n    y: top\n  }, area) || _isPointInArea({\n    x: right,\n    y: bottom\n  }, area);\n\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {\n    centerPointLabels,\n    display\n  } = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {\n    left,\n    top,\n    right,\n    bottom\n  } = item;\n  const {\n    backdropColor\n  } = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n\n    if (!item.visible) {\n      continue;\n    }\n\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign\n    } = item;\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  static id = 'radialLinear';\n  static defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n\n      callback(label) {\n        return label;\n      },\n\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid,\n      border\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || index === 0 && this.min < 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && this.min >= 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  static id = 'time';\n  static defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      callback: false,\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  initOffsets() {\n    let timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return callback(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  static id = 'timeseries';\n  static defaults = TimeScale.defaults;\n\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","new","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","override","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.animator.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.animation.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.animations.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.datasetController.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.line.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.adapters.ts","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.interaction.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.layouts.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\platform\\platform.base.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\platform\\platform.basic.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\platform\\platform.dom.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\platform\\index.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.element.ts","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.scale.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.registry.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.plugins.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.config.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\core\\core.controller.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\elements\\element.arc.ts","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\elements\\element.line.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\elements\\element.point.ts","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\elements\\element.bar.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.category.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.linear.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.time.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","C:\\Users\\giato\\Downloads\\Workspace\\.Net\\ui\\doctor-management-fe\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module"}