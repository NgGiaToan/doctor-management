{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationDescriptionOverride = void 0;\n\nconst utils_1 = require(\"../../utils\");\n\nconst OperationDescriptionOverride = _ref => {\n  let {\n    operationIds\n  } = _ref;\n  return {\n    Operation: {\n      leave(operation, _ref2) {\n        let {\n          report,\n          location\n        } = _ref2;\n        if (!operation.operationId) return;\n        if (!operationIds) throw new Error(`Parameter \"operationIds\" is not provided for \"operation-description-override\" rule`);\n        const operationId = operation.operationId;\n\n        if (operationIds[operationId]) {\n          try {\n            operation.description = utils_1.readFileAsStringSync(operationIds[operationId]);\n          } catch (e) {\n            report({\n              message: `Failed to read markdown override file for operation \"${operationId}\".\\n${e.message}`,\n              location: location.child('operationId').key()\n            });\n          }\n        }\n      }\n\n    }\n  };\n};\n\nexports.OperationDescriptionOverride = OperationDescriptionOverride;","map":{"version":3,"names":["Object","defineProperty","exports","value","OperationDescriptionOverride","utils_1","require","operationIds","Operation","leave","operation","report","location","operationId","Error","description","readFileAsStringSync","e","message","child","key"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/decorators/common/operation-description-override.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperationDescriptionOverride = void 0;\nconst utils_1 = require(\"../../utils\");\nconst OperationDescriptionOverride = ({ operationIds }) => {\n    return {\n        Operation: {\n            leave(operation, { report, location }) {\n                if (!operation.operationId)\n                    return;\n                if (!operationIds)\n                    throw new Error(`Parameter \"operationIds\" is not provided for \"operation-description-override\" rule`);\n                const operationId = operation.operationId;\n                if (operationIds[operationId]) {\n                    try {\n                        operation.description = utils_1.readFileAsStringSync(operationIds[operationId]);\n                    }\n                    catch (e) {\n                        report({\n                            message: `Failed to read markdown override file for operation \"${operationId}\".\\n${e.message}`,\n                            location: location.child('operationId').key(),\n                        });\n                    }\n                }\n            },\n        },\n    };\n};\nexports.OperationDescriptionOverride = OperationDescriptionOverride;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuC,KAAK,CAA5C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMF,4BAA4B,GAAG,QAAsB;EAAA,IAArB;IAAEG;EAAF,CAAqB;EACvD,OAAO;IACHC,SAAS,EAAE;MACPC,KAAK,CAACC,SAAD,SAAkC;QAAA,IAAtB;UAAEC,MAAF;UAAUC;QAAV,CAAsB;QACnC,IAAI,CAACF,SAAS,CAACG,WAAf,EACI;QACJ,IAAI,CAACN,YAAL,EACI,MAAM,IAAIO,KAAJ,CAAW,oFAAX,CAAN;QACJ,MAAMD,WAAW,GAAGH,SAAS,CAACG,WAA9B;;QACA,IAAIN,YAAY,CAACM,WAAD,CAAhB,EAA+B;UAC3B,IAAI;YACAH,SAAS,CAACK,WAAV,GAAwBV,OAAO,CAACW,oBAAR,CAA6BT,YAAY,CAACM,WAAD,CAAzC,CAAxB;UACH,CAFD,CAGA,OAAOI,CAAP,EAAU;YACNN,MAAM,CAAC;cACHO,OAAO,EAAG,wDAAuDL,WAAY,OAAMI,CAAC,CAACC,OAAQ,EAD1F;cAEHN,QAAQ,EAAEA,QAAQ,CAACO,KAAT,CAAe,aAAf,EAA8BC,GAA9B;YAFP,CAAD,CAAN;UAIH;QACJ;MACJ;;IAlBM;EADR,CAAP;AAsBH,CAvBD;;AAwBAlB,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC"},"metadata":{},"sourceType":"script"}