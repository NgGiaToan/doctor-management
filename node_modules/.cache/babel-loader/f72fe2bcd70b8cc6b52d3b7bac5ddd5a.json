{"ast":null,"code":"import FuseExample from'@fuse/core/FuseExample';import FuseHighlight from'@fuse/core/FuseHighlight';import FuseSvgIcon from'@fuse/core/FuseSvgIcon';import Button from'@mui/material/Button';import Typography from'@mui/material/Typography';/* eslint import/no-webpack-loader-syntax: off */ /* eslint import/extensions: off */ /* eslint no-unused-vars: off */ /* eslint-disable jsx-a11y/accessible-emoji */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function GridDoc(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-1 grow-0 items-center justify-end\",children:/*#__PURE__*/_jsx(Button,{className:\"normal-case\",variant:\"contained\",color:\"secondary\",component:\"a\",href:\"https://mui.com/components/grid\",target:\"_blank\",role:\"button\",startIcon:/*#__PURE__*/_jsx(FuseSvgIcon,{children:\"heroicons-outline:external-link\"}),children:\"Reference\"})}),/*#__PURE__*/_jsx(Typography,{className:\"text-40 my-16 font-700\",component:\"h1\",children:\"Grid\"}),/*#__PURE__*/_jsx(Typography,{className:\"description\",children:\"The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The \",/*#__PURE__*/_jsx(\"a\",{href:\"https://material.io/design/layout/responsive-layout-grid.html\",children:\"grid\"}),\" creates visual consistency between layouts while allowing flexibility across a wide variety of designs. Material Design's responsive UI is based on a 12-column grid layout.\"]}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\":::warning \\u26A0\\uFE0F The \",/*#__PURE__*/_jsx(\"code\",{children:\"Grid\"}),\" component shouldn't be confused with a data grid; it is closer to a layout grid. For a data grid head to\",' ',/*#__PURE__*/_jsxs(\"a\",{href:\"/x/react-data-grid/\",children:[\"the \",/*#__PURE__*/_jsx(\"code\",{children:\"DataGrid\"}),\" component\"]}),\". :::\"]}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"How it works\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The grid system is implemented with the \",/*#__PURE__*/_jsx(\"code\",{children:\"Grid\"}),\" component:\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"It uses \",/*#__PURE__*/_jsx(\"a\",{href:\"https://www.w3.org/TR/css-flexbox-1/\",children:\"CSS's Flexible Box module\"}),' ',\"for high flexibility.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"There are two types of layout: \",/*#__PURE__*/_jsx(\"em\",{children:\"containers\"}),\" and \",/*#__PURE__*/_jsx(\"em\",{children:\"items\"}),\".\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Item widths are set in percentages, so they're always fluid and sized relative to their parent element.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Items have padding to create the spacing between individual items.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"There are five grid breakpoints: xs, sm, md, lg, and xl.\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/material-ui/customization/breakpoints/#default-breakpoints\",children:\"breakpoint constraints\"}),\".\"]})]}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"If you are \",/*#__PURE__*/_jsx(\"strong\",{children:\"new to or unfamiliar with flexbox\"}),\", we encourage you to read this\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\",children:\"CSS-Tricks flexbox\"}),' ',\"guide.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Fluid grids\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"Fluid grids use columns that scale and resize content. A fluid grid's layout can use breakpoints to determine if the layout needs to change dramatically.\"}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"Basic grid\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"Column widths are integer values between 1 and 12; they apply at any breakpoint and indicate how many columns are occupied by the component.\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, \",/*#__PURE__*/_jsx(\"code\",{children:\"xs={12}\"}),\" sizes a component to occupy the whole viewport width regardless of its size.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"BasicGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/BasicGrid.js').default,raw:require('!raw-loader!../components/grid/BasicGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"Grid with multiple breakpoints\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints.\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"For example, \",/*#__PURE__*/_jsx(\"code\",{children:\"xs={12} sm={6}\"}),\" sizes a component to occupy half of the viewport width (6 columns) when viewport width is\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/material-ui/customization/breakpoints/#default-breakpoints\",children:\"600 or more pixels\"}),\". For smaller viewports, the component fills all 12 available columns.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"FullWidthGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/FullWidthGrid.js').default,raw:require('!raw-loader!../components/grid/FullWidthGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Spacing\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"To control space between children, use the \",/*#__PURE__*/_jsx(\"code\",{children:\"spacing\"}),\" prop. The spacing value can be any positive number, including decimals and any string. The prop is converted into a CSS property using the\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/material-ui/customization/spacing/\",children:/*#__PURE__*/_jsx(\"code\",{children:\"theme.spacing()\"})}),' ',\"helper.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"SpacingGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/SpacingGrid.js').default,raw:require('!raw-loader!../components/grid/SpacingGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"Row & column spacing\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"rowSpacing\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"columnSpacing\"}),\" props allow for specifying the row and column gaps independently. It's similar to the \",/*#__PURE__*/_jsx(\"code\",{children:\"row-gap\"}),\" and\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"column-gap\"}),\" properties of\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/system/grid/#row-gap-amp-column-gap\",children:\"CSS Grid\"}),\".\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"RowAndColumnSpacing.js\",className:\"my-24\",iframe:false,component:require('../components/grid/RowAndColumnSpacing.js').default,raw:require('!raw-loader!../components/grid/RowAndColumnSpacing.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Responsive values\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"You can switch the props' value based on the active breakpoint. For instance, we can implement the\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://material.io/design/layout/responsive-layout-grid.html\",children:\"\\\"recommended\\\"\"}),' ',\"responsive layout grid of Material Design.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"ResponsiveGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/ResponsiveGrid.js').default,raw:require('!raw-loader!../components/grid/ResponsiveGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"Responsive values is supported by:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"columns\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"columnSpacing\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"direction\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"rowSpacing\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"spacing\"})}),/*#__PURE__*/_jsxs(\"li\",{children:[\"all the \",/*#__PURE__*/_jsx(\"a\",{href:\"#system-props\",children:\"other props\"}),\" of the system\"]})]}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\":::warning \\u26A0\\uFE0F When using a responsive \",/*#__PURE__*/_jsx(\"code\",{children:\"columns\"}),\" prop, each grid item needs its corresponding breakpoint. For instance, this is not working. The grid item misses the value for \",/*#__PURE__*/_jsx(\"code\",{children:\"md\"}),\":\"]}),/*#__PURE__*/_jsx(FuseHighlight,{component:\"pre\",className:\"language-jsx\",children:\" \\n<Grid container columns={{ xs: 4, md: 12 }}>\\n  <Grid item xs={2} />\\n</Grid>\\n\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\":::\"}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Interactive\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"Below is an interactive demo that lets you explore the visual results of the different settings:\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"InteractiveGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/InteractiveGrid.js').default,raw:require('!raw-loader!../components/grid/InteractiveGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Auto-layout\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The Auto-layout makes the \",/*#__PURE__*/_jsx(\"em\",{children:\"items\"}),\" equitably share the available space. That also means you can set the width of one \",/*#__PURE__*/_jsx(\"em\",{children:\"item\"}),\" and the others will automatically resize around it.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"AutoGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/AutoGrid.js').default,raw:require('!raw-loader!../components/grid/AutoGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"Variable width content\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"Set one of the size breakpoint props to \",/*#__PURE__*/_jsx(\"code\",{children:\"\\\"auto\\\"\"}),\" instead of \",/*#__PURE__*/_jsx(\"code\",{children:\"true\"}),' ',\"/ a \",/*#__PURE__*/_jsx(\"code\",{children:\"number\"}),\" to size a column based on the natural width of its content.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"VariableWidthGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/VariableWidthGrid.js').default,raw:require('!raw-loader!../components/grid/VariableWidthGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Complex Grid\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"The following demo doesn't follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"ComplexGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/ComplexGrid.js').default,raw:require('!raw-loader!../components/grid/ComplexGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Nested Grid\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"container\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"item\"}),\" props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.\"]}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\":::info A flex \",/*#__PURE__*/_jsx(\"strong\",{children:\"container\"}),\" is the box generated by an element with a computed display of \",/*#__PURE__*/_jsx(\"code\",{children:\"flex\"}),\" or \",/*#__PURE__*/_jsx(\"code\",{children:\"inline-flex\"}),\". In-flow children of a flex container are called flex \",/*#__PURE__*/_jsx(\"strong\",{children:\"items\"}),\" and are laid out using the flex layout model. :::\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.w3.org/TR/css-flexbox-1/#box-model\",children:\"https://www.w3.org/TR/css-flexbox-1/#box-model\"})}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"NestedGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/NestedGrid.js').default,raw:require('!raw-loader!../components/grid/NestedGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"\\u26A0\\uFE0F Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:\"}),/*#__PURE__*/_jsx(FuseHighlight,{component:\"pre\",className:\"language-jsx\",children:\" \\n<Grid spacing={1} container item xs={12}>\\n\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:\"If you need to do such, remove one of the props.\"}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Columns\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"You can change the default number of columns (12) with the \",/*#__PURE__*/_jsx(\"code\",{children:\"columns\"}),\" prop.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"ColumnsGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/ColumnsGrid.js').default,raw:require('!raw-loader!../components/grid/ColumnsGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"Limitations\"}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"Negative margin\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"display: flex;\"}),\" to the parent.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"white-space: nowrap\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The initial setting on flex items is \",/*#__PURE__*/_jsx(\"code\",{children:\"min-width: auto\"}),\". It's causing a positioning conflict when the children is using \",/*#__PURE__*/_jsx(\"code\",{children:\"white-space: nowrap;\"}),\". You can experience the issue with:\"]}),/*#__PURE__*/_jsx(FuseHighlight,{component:\"pre\",className:\"language-jsx\",children:\" \\n<Grid item xs>\\n  <Typography noWrap>\\n\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"In order for the item to stay within the container you need to set \",/*#__PURE__*/_jsx(\"code\",{children:\"min-width: 0\"}),\". In practice, you can set the \",/*#__PURE__*/_jsx(\"code\",{children:\"zeroMinWidth\"}),\" prop:\"]}),/*#__PURE__*/_jsx(FuseHighlight,{component:\"pre\",className:\"language-jsx\",children:\" \\n<Grid item xs zeroMinWidth>\\n  <Typography noWrap>\\n\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"AutoGridNoWrap.js\",className:\"my-24\",iframe:false,component:require('../components/grid/AutoGridNoWrap.js').default,raw:require('!raw-loader!../components/grid/AutoGridNoWrap.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",component:\"h3\",children:\"direction: column | column-reverse\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"xs\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"sm\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"md\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"lg\"}),\", and \",/*#__PURE__*/_jsx(\"code\",{children:\"xl\"}),' ',\"props are \",/*#__PURE__*/_jsx(\"strong\",{children:\"not supported\"}),\" within \",/*#__PURE__*/_jsx(\"code\",{children:\"direction=\\\"column\\\"\"}),\" and\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"direction=\\\"column-reverse\\\"\"}),\" containers.\"]}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"They define the number of grids the component will use for a given breakpoint. They are intended to control \",/*#__PURE__*/_jsx(\"strong\",{children:\"width\"}),\" using \",/*#__PURE__*/_jsx(\"code\",{children:\"flex-basis\"}),\" in \",/*#__PURE__*/_jsx(\"code\",{children:\"row\"}),' ',\"containers but they will impact height in \",/*#__PURE__*/_jsx(\"code\",{children:\"column\"}),\" containers. If used, these props may have undesirable effects on the height of the \",/*#__PURE__*/_jsx(\"code\",{children:\"Grid\"}),\" item elements.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"CSS Grid Layout\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"The \",/*#__PURE__*/_jsx(\"code\",{children:\"Grid\"}),\" component is using CSS flexbox internally. But as seen below, you can easily use \",/*#__PURE__*/_jsx(\"a\",{href:\"/system/grid/\",children:\"the system\"}),\" and CSS Grid to layout your pages.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"mb-40\",component:\"div\",children:/*#__PURE__*/_jsx(FuseExample,{name:\"CSSGrid.js\",className:\"my-24\",iframe:false,component:require('../components/grid/CSSGrid.js').default,raw:require('!raw-loader!../components/grid/CSSGrid.js')})}),/*#__PURE__*/_jsx(Typography,{className:\"text-32 mt-40 mb-10 font-700\",component:\"h2\",children:\"System props\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-40\",component:\"div\",children:[\"As a CSS utility component, the \",/*#__PURE__*/_jsx(\"code\",{children:\"Grid\"}),\" supports all\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"/system/properties/\",children:/*#__PURE__*/_jsx(\"code\",{children:\"system\"})}),' ',\"properties. You can use them as props directly on the component. For instance, a padding:\"]}),/*#__PURE__*/_jsx(FuseHighlight,{component:\"pre\",className:\"language-jsx\",children:\" \\n<Grid item p={2}>\\n\"})]});}export default GridDoc;","map":null,"metadata":{},"sourceType":"module"}