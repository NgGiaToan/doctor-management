{"ast":null,"code":"import _defineProperty from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import _regeneratorRuntime from\"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import axios from'axios';import history from'@history';import _ from'@lodash';import{showMessage}from'app/store/fuse/messageSlice';import reorder,{reorderQuoteMap}from'./reorder';import{removeCard}from'./cardSlice';import{newList,removeList}from'./listsSlice';import{newCard}from'./cardsSlice';/**\r\n * Get Board\r\n */export var getBoard=createAsyncThunk('scrumboardApp/board/get',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(boardId,_ref){var dispatch,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref.dispatch;_context.prev=1;_context.next=4;return axios.get(\"/api/scrumboard/boards/\".concat(boardId));case 4:response=_context.sent;_context.next=7;return response.data;case 7:data=_context.sent;return _context.abrupt(\"return\",data);case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);dispatch(showMessage({message:_context.t0.response.data,autoHideDuration:2000,anchorOrigin:{vertical:'top',horizontal:'right'}}));history.push({pathname:'/apps/scrumboard/boards'});return _context.abrupt(\"return\",null);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());/**\r\n * Update Board\r\n */export var updateBoard=createAsyncThunk('scrumboardApp/board/update',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newData,_ref3){var dispatch,getState,board,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref3.dispatch,getState=_ref3.getState;board=getState().scrumboardApp.board;_context2.next=4;return axios.put(\"/api/scrumboard/boards/\".concat(board.id),newData);case 4:response=_context2.sent;_context2.next=7;return response.data;case 7:data=_context2.sent;return _context2.abrupt(\"return\",data);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());/**\r\n * Reorder Board List\r\n */export var reorderList=createAsyncThunk('scrumboardApp/board/reorderList',/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(result,_ref5){var dispatch,getState,board,lists,ordered,response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch=_ref5.dispatch,getState=_ref5.getState;board=getState().scrumboardApp.board;lists=board.lists;ordered=reorder(_.merge([],lists),result.source.index,result.destination.index);_context3.next=6;return axios.put(\"/api/scrumboard/boards/\".concat(board.id),{lists:ordered});case 6:response=_context3.sent;_context3.next=9;return response.data;case 9:data=_context3.sent;dispatch(showMessage({message:'List Order Saved',autoHideDuration:2000,anchorOrigin:{vertical:'top',horizontal:'right'}}));return _context3.abrupt(\"return\",data);case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref6.apply(this,arguments);};}());/**\r\n * Reorder Board Card\r\n */export var reorderCard=createAsyncThunk('scrumboardApp/board/reorderCard',/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref7,_ref8){var source,destination,dispatch,getState,board,lists,ordered,response,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:source=_ref7.source,destination=_ref7.destination;dispatch=_ref8.dispatch,getState=_ref8.getState;board=getState().scrumboardApp.board;lists=board.lists;ordered=reorderQuoteMap(_.merge([],lists),source,destination);_context4.next=7;return axios.put(\"/api/scrumboard/boards/\".concat(board.id),{lists:ordered});case 7:response=_context4.sent;_context4.next=10;return response.data;case 10:data=_context4.sent;dispatch(showMessage({message:'Card Order Saved',autoHideDuration:2000,anchorOrigin:{vertical:'top',horizontal:'right'}}));return _context4.abrupt(\"return\",data);case 13:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref9.apply(this,arguments);};}());/**\r\n * Delete Board\r\n */export var deleteBoard=createAsyncThunk('scrumboardApp/board/delete',/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params,_ref10){var dispatch,getState,board,response,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch=_ref10.dispatch,getState=_ref10.getState;board=getState().scrumboardApp.board;_context5.next=4;return axios.delete(\"/api/scrumboard/boards/\".concat(board.id));case 4:response=_context5.sent;history.push({pathname:'/apps/scrumboard/boards'});_context5.next=8;return response.data;case 8:data=_context5.sent;return _context5.abrupt(\"return\",data);case 10:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x9,_x10){return _ref11.apply(this,arguments);};}());var boardsSlice=createSlice({name:'scrumboardApp/boards',initialState:null,reducers:{resetBoard:function resetBoard(state,action){return null;},addLabel:function addLabel(state,action){state.labels=[].concat(_toConsumableArray(state.labels),[action.payload]);}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getBoard.fulfilled,function(state,action){return action.payload;}),_defineProperty(_extraReducers,updateBoard.fulfilled,function(state,action){return action.payload;}),_defineProperty(_extraReducers,reorderList.fulfilled,function(state,action){return action.payload;}),_defineProperty(_extraReducers,reorderCard.fulfilled,function(state,action){return action.payload;}),_defineProperty(_extraReducers,deleteBoard.fulfilled,function(state,action){state={};}),_defineProperty(_extraReducers,removeCard.fulfilled,function(state,action){var cardId=action.payload;state.lists=state.lists.map(function(list){return _objectSpread(_objectSpread({},list),{},{cards:_.reject(list.cards,function(id){return id===cardId;})});});}),_defineProperty(_extraReducers,removeList.fulfilled,function(state,action){var listId=action.payload;state.lists=_.reject(state.lists,{id:listId});}),_defineProperty(_extraReducers,newList.fulfilled,function(state,action){state.lists=[].concat(_toConsumableArray(state.lists),[{id:action.payload.id,cards:[]}]);}),_defineProperty(_extraReducers,newCard.fulfilled,function(state,action){var cardData=action.payload;state.lists=state.lists.map(function(list){return list.id===cardData.listId?_objectSpread(_objectSpread({},list),{},{cards:[].concat(_toConsumableArray(list.cards),[cardData.id])}):list;});}),_extraReducers)});var _boardsSlice$actions=boardsSlice.actions,resetBoard=_boardsSlice$actions.resetBoard,addLabel=_boardsSlice$actions.addLabel;export{resetBoard,addLabel};export var selectBoard=function selectBoard(_ref12){var scrumboardApp=_ref12.scrumboardApp;return scrumboardApp.board;};export default boardsSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}