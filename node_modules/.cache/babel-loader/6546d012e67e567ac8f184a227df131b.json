{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport history from '@history';\nimport BoardModel from '../model/BoardModel';\n/**\r\n * Get Boards\r\n */\n\nexport const getBoards = createAsyncThunk('scrumboardApp/boards/getBoards', async () => {\n  const response = await axios.get('/api/scrumboard/boards');\n  const data = await response.data;\n  return data;\n});\n/**\r\n * Create New Board\r\n */\n\nexport const newBoard = createAsyncThunk('scrumboardApp/boards/newBoard', async (board, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  const response = await axios.post('/api/scrumboard/boards', BoardModel(board));\n  const data = await response.data;\n  history.push({\n    pathname: `/apps/scrumboard/boards/${data.id}`\n  });\n  return data;\n});\nconst boardsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectBoards,\n  selectById: selectBoardById\n} = boardsAdapter.getSelectors(state => state.scrumboardApp.boards);\nconst boardsSlice = createSlice({\n  name: 'scrumboardApp/boards',\n  initialState: boardsAdapter.getInitialState({}),\n  reducers: {\n    resetBoards: (state, action) => {}\n  },\n  extraReducers: {\n    [getBoards.fulfilled]: boardsAdapter.setAll\n  }\n});\nexport const {\n  resetBoards\n} = boardsSlice.actions;\nexport default boardsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSlice","axios","history","BoardModel","getBoards","response","get","data","newBoard","board","dispatch","post","push","pathname","id","boardsAdapter","selectAll","selectBoards","selectById","selectBoardById","getSelectors","state","scrumboardApp","boards","boardsSlice","name","initialState","getInitialState","reducers","resetBoards","action","extraReducers","fulfilled","setAll","actions","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/scrumboard/store/boardsSlice.js"],"sourcesContent":["import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport history from '@history';\r\nimport BoardModel from '../model/BoardModel';\r\n\r\n/**\r\n * Get Boards\r\n */\r\nexport const getBoards = createAsyncThunk('scrumboardApp/boards/getBoards', async () => {\r\n  const response = await axios.get('/api/scrumboard/boards');\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\n/**\r\n * Create New Board\r\n */\r\nexport const newBoard = createAsyncThunk(\r\n  'scrumboardApp/boards/newBoard',\r\n  async (board, { dispatch }) => {\r\n    const response = await axios.post('/api/scrumboard/boards', BoardModel(board));\r\n    const data = await response.data;\r\n\r\n    history.push({\r\n      pathname: `/apps/scrumboard/boards/${data.id}`,\r\n    });\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst boardsAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectBoards, selectById: selectBoardById } = boardsAdapter.getSelectors(\r\n  (state) => state.scrumboardApp.boards\r\n);\r\n\r\nconst boardsSlice = createSlice({\r\n  name: 'scrumboardApp/boards',\r\n  initialState: boardsAdapter.getInitialState({}),\r\n  reducers: {\r\n    resetBoards: (state, action) => {},\r\n  },\r\n  extraReducers: {\r\n    [getBoards.fulfilled]: boardsAdapter.setAll,\r\n  },\r\n});\r\n\r\nexport const { resetBoards } = boardsSlice.actions;\r\n\r\nexport default boardsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CAAC,gCAAD,EAAmC,YAAY;EACtF,MAAMO,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,wBAAV,CAAvB;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALwC,CAAlC;AAOP;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAGV,gBAAgB,CACtC,+BADsC,EAEtC,OAAOW,KAAP,WAA+B;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC7B,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACU,IAAN,CAAW,wBAAX,EAAqCR,UAAU,CAACM,KAAD,CAA/C,CAAvB;EACA,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEAL,OAAO,CAACU,IAAR,CAAa;IACXC,QAAQ,EAAG,2BAA0BN,IAAI,CAACO,EAAG;EADlC,CAAb;EAIA,OAAOP,IAAP;AACD,CAXqC,CAAjC;AAcP,MAAMQ,aAAa,GAAGhB,mBAAmB,CAAC,EAAD,CAAzC;AAEA,OAAO,MAAM;EAAEiB,SAAS,EAAEC,YAAb;EAA2BC,UAAU,EAAEC;AAAvC,IAA2DJ,aAAa,CAACK,YAAd,CACrEC,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,MADuC,CAAjE;AAIP,MAAMC,WAAW,GAAGxB,WAAW,CAAC;EAC9ByB,IAAI,EAAE,sBADwB;EAE9BC,YAAY,EAAEX,aAAa,CAACY,eAAd,CAA8B,EAA9B,CAFgB;EAG9BC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACR,KAAD,EAAQS,MAAR,KAAmB,CAAE;EAD1B,CAHoB;EAM9BC,aAAa,EAAE;IACb,CAAC3B,SAAS,CAAC4B,SAAX,GAAuBjB,aAAa,CAACkB;EADxB;AANe,CAAD,CAA/B;AAWA,OAAO,MAAM;EAAEJ;AAAF,IAAkBL,WAAW,CAACU,OAApC;AAEP,eAAeV,WAAW,CAACW,OAA3B"},"metadata":{},"sourceType":"module"}