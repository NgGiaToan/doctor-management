{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\apps\\\\scrumboard\\\\board\\\\dialogs\\\\card\\\\checklist\\\\CardAddChecklistItem.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Fab from '@mui/material/Fab';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport { Controller, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport _ from '@lodash';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport ChecklistItemModel from '../../../../model/ChecklistItemModel';\n/**\r\n * Form Validation Schema\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required('You must enter a title')\n});\n\nfunction CardAddChecklistItem(props) {\n  _s();\n\n  const {\n    control,\n    formState,\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      name: props.name\n    },\n    resolver: yupResolver(schema)\n  });\n  const {\n    isValid,\n    dirtyFields,\n    errors\n  } = formState;\n\n  function onSubmit(data) {\n    props.onListItemAdd(ChecklistItemModel(data));\n    reset({\n      name: props.name\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      className: \"px-0\",\n      dense: true,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"w-40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            className: \"flex flex-1 mx-8\",\n            name: \"name\",\n            variant: \"outlined\",\n            placeholder: \"Add an item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        className: \"mx-4\",\n        \"aria-label\": \"Add\",\n        size: \"small\",\n        color: \"secondary\",\n        type: \"submit\",\n        disabled: _.isEmpty(dirtyFields) || !isValid,\n        children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n          children: \"heroicons-outline:plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardAddChecklistItem, \"yxM/QkoXwQPWRltGwmdrBCDQ1/Q=\", false, function () {\n  return [useForm];\n});\n\n_c = CardAddChecklistItem;\nexport default CardAddChecklistItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardAddChecklistItem\");","map":{"version":3,"names":["yupResolver","Fab","ListItem","TextField","Controller","useForm","yup","_","FuseSvgIcon","ChecklistItemModel","schema","object","shape","name","string","required","CardAddChecklistItem","props","control","formState","handleSubmit","reset","mode","defaultValues","resolver","isValid","dirtyFields","errors","onSubmit","data","onListItemAdd","field","isEmpty"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/scrumboard/board/dialogs/card/checklist/CardAddChecklistItem.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport Fab from '@mui/material/Fab';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\n\r\nimport _ from '@lodash';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\nimport ChecklistItemModel from '../../../../model/ChecklistItemModel';\r\n\r\n/**\r\n * Form Validation Schema\r\n */\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required('You must enter a title'),\r\n});\r\n\r\nfunction CardAddChecklistItem(props) {\r\n  const { control, formState, handleSubmit, reset } = useForm({\r\n    mode: 'onChange',\r\n    defaultValues: {\r\n      name: props.name,\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { isValid, dirtyFields, errors } = formState;\r\n\r\n  function onSubmit(data) {\r\n    props.onListItemAdd(ChecklistItemModel(data));\r\n    reset({\r\n      name: props.name,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <ListItem className=\"px-0\" dense>\r\n        <span className=\"w-40\" />\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              className=\"flex flex-1 mx-8\"\r\n              name=\"name\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Add an item\"\r\n            />\r\n          )}\r\n        />\r\n        <Fab\r\n          className=\"mx-4\"\r\n          aria-label=\"Add\"\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n          disabled={_.isEmpty(dirtyFields) || !isValid}\r\n        >\r\n          <FuseSvgIcon>heroicons-outline:plus</FuseSvgIcon>\r\n        </Fab>\r\n      </ListItem>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CardAddChecklistItem;\r\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AAEA;AACA;AACA;;;AACA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;EAChCC,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAD0B,CAAnB,CAAf;;AAIA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;EAAA;;EACnC,MAAM;IAAEC,OAAF;IAAWC,SAAX;IAAsBC,YAAtB;IAAoCC;EAApC,IAA8ChB,OAAO,CAAC;IAC1DiB,IAAI,EAAE,UADoD;IAE1DC,aAAa,EAAE;MACbV,IAAI,EAAEI,KAAK,CAACJ;IADC,CAF2C;IAK1DW,QAAQ,EAAExB,WAAW,CAACU,MAAD;EALqC,CAAD,CAA3D;EAQA,MAAM;IAAEe,OAAF;IAAWC,WAAX;IAAwBC;EAAxB,IAAmCR,SAAzC;;EAEA,SAASS,QAAT,CAAkBC,IAAlB,EAAwB;IACtBZ,KAAK,CAACa,aAAN,CAAoBrB,kBAAkB,CAACoB,IAAD,CAAtC;IACAR,KAAK,CAAC;MACJR,IAAI,EAAEI,KAAK,CAACJ;IADR,CAAD,CAAL;EAGD;;EAED,oBACE;IAAM,QAAQ,EAAEO,YAAY,CAACQ,QAAD,CAA5B;IAAA,uBACE,QAAC,QAAD;MAAU,SAAS,EAAC,MAApB;MAA2B,KAAK,MAAhC;MAAA,wBACE;QAAM,SAAS,EAAC;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QACE,IAAI,EAAC,MADP;QAEE,OAAO,EAAEV,OAFX;QAGE,MAAM,EAAE;UAAA,IAAC;YAAEa;UAAF,CAAD;UAAA,oBACN,QAAC,SAAD,OACMA,KADN;YAEE,SAAS,EAAC,kBAFZ;YAGE,IAAI,EAAC,MAHP;YAIE,OAAO,EAAC,UAJV;YAKE,WAAW,EAAC;UALd;YAAA;YAAA;YAAA;UAAA,QADM;QAAA;MAHV;QAAA;QAAA;QAAA;MAAA,QAFF,eAeE,QAAC,GAAD;QACE,SAAS,EAAC,MADZ;QAEE,cAAW,KAFb;QAGE,IAAI,EAAC,OAHP;QAIE,KAAK,EAAC,WAJR;QAKE,IAAI,EAAC,QALP;QAME,QAAQ,EAAExB,CAAC,CAACyB,OAAF,CAAUN,WAAV,KAA0B,CAACD,OANvC;QAAA,uBAQE,QAAC,WAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MARF;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAhDQT,oB;UAC6CX,O;;;KAD7CW,oB;AAkDT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}