{"ast":null,"code":"import FuseHighlight from'@fuse/core/FuseHighlight';import Button from'@mui/material/Button';import DialogActions from'@mui/material/DialogActions';import DialogContent from'@mui/material/DialogContent';import DialogContentText from'@mui/material/DialogContentText';import DialogTitle from'@mui/material/DialogTitle';import Typography from'@mui/material/Typography';import{useDispatch}from'react-redux';import{closeDialog,openDialog}from'app/store/fuse/dialogSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function FuseDialogDoc(props){var dispatch=useDispatch();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:\"mb-40 font-700\",children:\"FuseDialog\"}),/*#__PURE__*/_jsxs(Typography,{className:\"mb-16\",component:\"p\",children:[/*#__PURE__*/_jsx(\"code\",{children:\"FuseDialog\"}),\" is a simple dialog trigger for easily showing dialog messages via redux action. It should be located in the theme layouts.\"]}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",variant:\"h5\",children:\"Usage\"}),/*#__PURE__*/_jsx(Typography,{className:\"mb-16\",component:\"p\",children:\"You can show dialog anywhere with dispatching the action openDialog, it is using Material-UI's dialog so you can pass the props in the object:\"}),/*#__PURE__*/_jsx(FuseHighlight,{component:\"pre\",className:\"language-jsx\",children:\"\\n                        <Button\\n                            onClick={()=> dispatch(openDialog({\\n                                children: (\\n                                    <React.Fragment>\\n                                        <DialogTitle id=\\\"alert-dialog-title\\\">Use Google's location service?</DialogTitle>\\n                                        <DialogContent>\\n                                            <DialogContentText id=\\\"alert-dialog-description\\\">\\n                                                Let Google help apps determine location. This means sending anonymous location data to\\n                                                Google, even when no apps are running.\\n                                            </DialogContentText>\\n                                        </DialogContent>\\n                                        <DialogActions>\\n                                            <Button onClick={()=> dispatch(closeDialog())} color=\\\"primary\\\">\\n                                                Disagree\\n                                            </Button>\\n                                            <Button onClick={()=> dispatch(closeDialog())} color=\\\"primary\\\" autoFocus>\\n                                                Agree\\n                                            </Button>\\n                                        </DialogActions>\\n                                    </React.Fragment>\\n                                     )\\n                                 }))}\\n                            variant=\\\"contained\\\"\\n                            color=\\\"secondary\\\"\\n                        >\\n                            Open Dialog\\n                        </Button>\\n                        \"}),/*#__PURE__*/_jsx(Typography,{className:\"text-20 mt-20 mb-10 font-700\",variant:\"h5\",children:\"Example\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return dispatch(openDialog({children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:\"Use Google's location service?\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-description\",children:\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return dispatch(closeDialog());},color:\"primary\",children:\"Disagree\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return dispatch(closeDialog());},color:\"primary\",autoFocus:true,children:\"Agree\"})]})]})}));},variant:\"contained\",color:\"secondary\",children:\"Open Dialog\"})]});}export default FuseDialogDoc;","map":null,"metadata":{},"sourceType":"module"}