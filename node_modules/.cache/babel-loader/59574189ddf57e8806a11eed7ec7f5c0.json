{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getNotes = createAsyncThunk('notesApp/notes/getNotes', async routeParams => {\n  const {\n    filter,\n    id\n  } = routeParams;\n  let url;\n\n  if (routeParams.filter === 'labels') {\n    url = `/api/notes/labels/${id}`;\n  }\n\n  if (routeParams.filter === 'archive') {\n    url = `/api/notes/archive`;\n  }\n\n  if (routeParams.filter === 'reminders') {\n    url = `/api/notes/reminders`;\n  }\n\n  if (!routeParams.filter) {\n    url = `/api/notes`;\n  }\n\n  const response = await axios.get(url);\n  const data = await response.data;\n  return data;\n});\nexport const createNote = createAsyncThunk('notesApp/notes/createNote', async note => {\n  const response = await axios.post('/api/notes', note);\n  const data = await response.data;\n  return data;\n});\nexport const updateNote = createAsyncThunk('notesApp/notes/updateNote', async note => {\n  const response = await axios.put(`/api/notes/${note.id}`, note);\n  const data = await response.data;\n  return data;\n});\nexport const removeNote = createAsyncThunk('notesApp/notes/removeNote', async (id, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  const response = await axios.delete(`/api/notes/${id}`);\n  const data = await response.data;\n  dispatch(closeNoteDialog());\n  return data;\n});\nconst notesAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectNotes,\n  selectEntities: selectNotesEntities,\n  selectById: selectNoteById\n} = notesAdapter.getSelectors(state => state.notesApp.notes);\nconst notesSlice = createSlice({\n  name: 'notesApp/notes',\n  initialState: notesAdapter.getInitialState({\n    searchText: '',\n    noteDialogId: null,\n    variateDescSize: true\n  }),\n  reducers: {\n    setNotesSearchText: {\n      reducer: (state, action) => {\n        state.searchText = action.payload;\n      },\n      prepare: event => ({\n        payload: event.target.value || ''\n      })\n    },\n    resetNotesSearchText: (state, action) => {\n      state.searchText = '';\n    },\n    toggleVariateDescSize: (state, action) => {\n      state.variateDescSize = !state.variateDescSize;\n    },\n    openNoteDialog: (state, action) => {\n      state.noteDialogId = action.payload;\n    },\n    closeNoteDialog: (state, action) => {\n      state.noteDialogId = action.null;\n    }\n  },\n  extraReducers: {\n    [getNotes.fulfilled]: notesAdapter.setAll,\n    [createNote.fulfilled]: notesAdapter.addOne,\n    [updateNote.fulfilled]: notesAdapter.upsertOne,\n    [removeNote.fulfilled]: notesAdapter.removeOne\n  }\n});\nexport const {\n  setNotesSearchText,\n  resetNotesSearchText,\n  toggleVariateDescSize,\n  openNoteDialog,\n  closeNoteDialog\n} = notesSlice.actions;\nexport const selectVariateDescSize = _ref2 => {\n  let {\n    notesApp\n  } = _ref2;\n  return notesApp.notes.variateDescSize;\n};\nexport const selectSearchText = _ref3 => {\n  let {\n    notesApp\n  } = _ref3;\n  return notesApp.notes.searchText;\n};\nexport const selectDialogNoteId = _ref4 => {\n  let {\n    notesApp\n  } = _ref4;\n  return notesApp.notes.noteDialogId;\n};\nexport const selectDialogNote = createSelector([selectDialogNoteId, selectNotesEntities], (noteId, notesEntities) => {\n  return notesEntities[noteId];\n});\nexport default notesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSelector","createSlice","axios","getNotes","routeParams","filter","id","url","response","get","data","createNote","note","post","updateNote","put","removeNote","dispatch","getState","delete","closeNoteDialog","notesAdapter","selectAll","selectNotes","selectEntities","selectNotesEntities","selectById","selectNoteById","getSelectors","state","notesApp","notes","notesSlice","name","initialState","getInitialState","searchText","noteDialogId","variateDescSize","reducers","setNotesSearchText","reducer","action","payload","prepare","event","target","value","resetNotesSearchText","toggleVariateDescSize","openNoteDialog","null","extraReducers","fulfilled","setAll","addOne","upsertOne","removeOne","actions","selectVariateDescSize","selectSearchText","selectDialogNoteId","selectDialogNote","noteId","notesEntities"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/notes/store/notesSlice.js"],"sourcesContent":["import {\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSelector,\r\n  createSlice,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getNotes = createAsyncThunk('notesApp/notes/getNotes', async (routeParams) => {\r\n  const { filter, id } = routeParams;\r\n\r\n  let url;\r\n\r\n  if (routeParams.filter === 'labels') {\r\n    url = `/api/notes/labels/${id}`;\r\n  }\r\n\r\n  if (routeParams.filter === 'archive') {\r\n    url = `/api/notes/archive`;\r\n  }\r\n\r\n  if (routeParams.filter === 'reminders') {\r\n    url = `/api/notes/reminders`;\r\n  }\r\n\r\n  if (!routeParams.filter) {\r\n    url = `/api/notes`;\r\n  }\r\n\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const createNote = createAsyncThunk('notesApp/notes/createNote', async (note) => {\r\n  const response = await axios.post('/api/notes', note);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const updateNote = createAsyncThunk('notesApp/notes/updateNote', async (note) => {\r\n  const response = await axios.put(`/api/notes/${note.id}`, note);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const removeNote = createAsyncThunk(\r\n  'notesApp/notes/removeNote',\r\n  async (id, { dispatch, getState }) => {\r\n    const response = await axios.delete(`/api/notes/${id}`);\r\n    const data = await response.data;\r\n\r\n    dispatch(closeNoteDialog());\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst notesAdapter = createEntityAdapter({});\r\n\r\nexport const {\r\n  selectAll: selectNotes,\r\n  selectEntities: selectNotesEntities,\r\n  selectById: selectNoteById,\r\n} = notesAdapter.getSelectors((state) => state.notesApp.notes);\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notesApp/notes',\r\n  initialState: notesAdapter.getInitialState({\r\n    searchText: '',\r\n    noteDialogId: null,\r\n    variateDescSize: true,\r\n  }),\r\n  reducers: {\r\n    setNotesSearchText: {\r\n      reducer: (state, action) => {\r\n        state.searchText = action.payload;\r\n      },\r\n      prepare: (event) => ({ payload: event.target.value || '' }),\r\n    },\r\n    resetNotesSearchText: (state, action) => {\r\n      state.searchText = '';\r\n    },\r\n    toggleVariateDescSize: (state, action) => {\r\n      state.variateDescSize = !state.variateDescSize;\r\n    },\r\n    openNoteDialog: (state, action) => {\r\n      state.noteDialogId = action.payload;\r\n    },\r\n    closeNoteDialog: (state, action) => {\r\n      state.noteDialogId = action.null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getNotes.fulfilled]: notesAdapter.setAll,\r\n    [createNote.fulfilled]: notesAdapter.addOne,\r\n    [updateNote.fulfilled]: notesAdapter.upsertOne,\r\n    [removeNote.fulfilled]: notesAdapter.removeOne,\r\n  },\r\n});\r\n\r\nexport const {\r\n  setNotesSearchText,\r\n  resetNotesSearchText,\r\n  toggleVariateDescSize,\r\n  openNoteDialog,\r\n  closeNoteDialog,\r\n} = notesSlice.actions;\r\n\r\nexport const selectVariateDescSize = ({ notesApp }) => notesApp.notes.variateDescSize;\r\n\r\nexport const selectSearchText = ({ notesApp }) => notesApp.notes.searchText;\r\n\r\nexport const selectDialogNoteId = ({ notesApp }) => notesApp.notes.noteDialogId;\r\n\r\nexport const selectDialogNote = createSelector(\r\n  [selectDialogNoteId, selectNotesEntities],\r\n  (noteId, notesEntities) => {\r\n    return notesEntities[noteId];\r\n  }\r\n);\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGL,gBAAgB,CAAC,yBAAD,EAA4B,MAAOM,WAAP,IAAuB;EACzF,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAiBF,WAAvB;EAEA,IAAIG,GAAJ;;EAEA,IAAIH,WAAW,CAACC,MAAZ,KAAuB,QAA3B,EAAqC;IACnCE,GAAG,GAAI,qBAAoBD,EAAG,EAA9B;EACD;;EAED,IAAIF,WAAW,CAACC,MAAZ,KAAuB,SAA3B,EAAsC;IACpCE,GAAG,GAAI,oBAAP;EACD;;EAED,IAAIH,WAAW,CAACC,MAAZ,KAAuB,WAA3B,EAAwC;IACtCE,GAAG,GAAI,sBAAP;EACD;;EAED,IAAI,CAACH,WAAW,CAACC,MAAjB,EAAyB;IACvBE,GAAG,GAAI,YAAP;EACD;;EAED,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,GAAV,CAAvB;EACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAzBuC,CAAjC;AA2BP,OAAO,MAAMC,UAAU,GAAGb,gBAAgB,CAAC,2BAAD,EAA8B,MAAOc,IAAP,IAAgB;EACtF,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAvB;EACA,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALyC,CAAnC;AAOP,OAAO,MAAMI,UAAU,GAAGhB,gBAAgB,CAAC,2BAAD,EAA8B,MAAOc,IAAP,IAAgB;EACtF,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACa,GAAN,CAAW,cAAaH,IAAI,CAACN,EAAG,EAAhC,EAAmCM,IAAnC,CAAvB;EACA,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALyC,CAAnC;AAOP,OAAO,MAAMM,UAAU,GAAGlB,gBAAgB,CACxC,2BADwC,EAExC,OAAOQ,EAAP,WAAsC;EAAA,IAA3B;IAAEW,QAAF;IAAYC;EAAZ,CAA2B;EACpC,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACiB,MAAN,CAAc,cAAab,EAAG,EAA9B,CAAvB;EACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEAO,QAAQ,CAACG,eAAe,EAAhB,CAAR;EAEA,OAAOV,IAAP;AACD,CATuC,CAAnC;AAYP,MAAMW,YAAY,GAAGtB,mBAAmB,CAAC,EAAD,CAAxC;AAEA,OAAO,MAAM;EACXuB,SAAS,EAAEC,WADA;EAEXC,cAAc,EAAEC,mBAFL;EAGXC,UAAU,EAAEC;AAHD,IAITN,YAAY,CAACO,YAAb,CAA2BC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,KAApD,CAJG;AAMP,MAAMC,UAAU,GAAG/B,WAAW,CAAC;EAC7BgC,IAAI,EAAE,gBADuB;EAE7BC,YAAY,EAAEb,YAAY,CAACc,eAAb,CAA6B;IACzCC,UAAU,EAAE,EAD6B;IAEzCC,YAAY,EAAE,IAF2B;IAGzCC,eAAe,EAAE;EAHwB,CAA7B,CAFe;EAO7BC,QAAQ,EAAE;IACRC,kBAAkB,EAAE;MAClBC,OAAO,EAAE,CAACZ,KAAD,EAAQa,MAAR,KAAmB;QAC1Bb,KAAK,CAACO,UAAN,GAAmBM,MAAM,CAACC,OAA1B;MACD,CAHiB;MAIlBC,OAAO,EAAGC,KAAD,KAAY;QAAEF,OAAO,EAAEE,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB;MAAjC,CAAZ;IAJS,CADZ;IAORC,oBAAoB,EAAE,CAACnB,KAAD,EAAQa,MAAR,KAAmB;MACvCb,KAAK,CAACO,UAAN,GAAmB,EAAnB;IACD,CATO;IAURa,qBAAqB,EAAE,CAACpB,KAAD,EAAQa,MAAR,KAAmB;MACxCb,KAAK,CAACS,eAAN,GAAwB,CAACT,KAAK,CAACS,eAA/B;IACD,CAZO;IAaRY,cAAc,EAAE,CAACrB,KAAD,EAAQa,MAAR,KAAmB;MACjCb,KAAK,CAACQ,YAAN,GAAqBK,MAAM,CAACC,OAA5B;IACD,CAfO;IAgBRvB,eAAe,EAAE,CAACS,KAAD,EAAQa,MAAR,KAAmB;MAClCb,KAAK,CAACQ,YAAN,GAAqBK,MAAM,CAACS,IAA5B;IACD;EAlBO,CAPmB;EA2B7BC,aAAa,EAAE;IACb,CAACjD,QAAQ,CAACkD,SAAV,GAAsBhC,YAAY,CAACiC,MADtB;IAEb,CAAC3C,UAAU,CAAC0C,SAAZ,GAAwBhC,YAAY,CAACkC,MAFxB;IAGb,CAACzC,UAAU,CAACuC,SAAZ,GAAwBhC,YAAY,CAACmC,SAHxB;IAIb,CAACxC,UAAU,CAACqC,SAAZ,GAAwBhC,YAAY,CAACoC;EAJxB;AA3Bc,CAAD,CAA9B;AAmCA,OAAO,MAAM;EACXjB,kBADW;EAEXQ,oBAFW;EAGXC,qBAHW;EAIXC,cAJW;EAKX9B;AALW,IAMTY,UAAU,CAAC0B,OANR;AAQP,OAAO,MAAMC,qBAAqB,GAAG;EAAA,IAAC;IAAE7B;EAAF,CAAD;EAAA,OAAkBA,QAAQ,CAACC,KAAT,CAAeO,eAAjC;AAAA,CAA9B;AAEP,OAAO,MAAMsB,gBAAgB,GAAG;EAAA,IAAC;IAAE9B;EAAF,CAAD;EAAA,OAAkBA,QAAQ,CAACC,KAAT,CAAeK,UAAjC;AAAA,CAAzB;AAEP,OAAO,MAAMyB,kBAAkB,GAAG;EAAA,IAAC;IAAE/B;EAAF,CAAD;EAAA,OAAkBA,QAAQ,CAACC,KAAT,CAAeM,YAAjC;AAAA,CAA3B;AAEP,OAAO,MAAMyB,gBAAgB,GAAG9D,cAAc,CAC5C,CAAC6D,kBAAD,EAAqBpC,mBAArB,CAD4C,EAE5C,CAACsC,MAAD,EAASC,aAAT,KAA2B;EACzB,OAAOA,aAAa,CAACD,MAAD,CAApB;AACD,CAJ2C,CAAvC;AAOP,eAAe/B,UAAU,CAACS,OAA1B"},"metadata":{},"sourceType":"module"}