{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathSegmentPlural = void 0;\n\nvar utils_1 = require(\"../../utils\");\n\nvar PathSegmentPlural = function PathSegmentPlural(opts) {\n  var ignoreLastPathSegment = opts.ignoreLastPathSegment,\n      exceptions = opts.exceptions;\n  return {\n    PathItem: {\n      leave: function leave(_path, _ref) {\n        var report = _ref.report,\n            key = _ref.key,\n            location = _ref.location;\n        var pathKey = key.toString();\n\n        if (pathKey.startsWith('/')) {\n          var pathSegments = pathKey.split('/');\n          pathSegments.shift();\n\n          if (ignoreLastPathSegment && pathSegments.length > 1) {\n            pathSegments.pop();\n          }\n\n          var _iterator = _createForOfIteratorHelper(pathSegments),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var pathSegment = _step.value;\n              if (exceptions && exceptions.includes(pathSegment)) continue;\n\n              if (!utils_1.isPathParameter(pathSegment) && utils_1.isSingular(pathSegment)) {\n                report({\n                  message: \"path segment `\".concat(pathSegment, \"` should be plural.\"),\n                  location: location.key()\n                });\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.PathSegmentPlural = PathSegmentPlural;","map":null,"metadata":{},"sourceType":"script"}