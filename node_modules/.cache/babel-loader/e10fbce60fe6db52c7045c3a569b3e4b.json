{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\auth\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FuseSplashScreen from '@fuse/core/FuseSplashScreen';\nimport { showMessage } from 'app/store/fuse/messageSlice';\nimport { logoutUser, setUser } from 'app/store/userSlice';\nimport jwtService from './services/jwtService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nfunction AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isAuthenticated, setIsAuthenticated] = useState(undefined);\n  const [waitAuthCheck, setWaitAuthCheck] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    jwtService.on('onAutoLogin', () => {\n      dispatch(showMessage({\n        message: 'Signing in with JWT'\n      }));\n      /**\r\n       * Sign in and retrieve user data with stored token\r\n       */\n\n      jwtService.signInWithToken().then(user => {\n        success(user, 'Signed in with JWT');\n      }).catch(error => {\n        pass(error.message);\n      });\n    });\n    jwtService.on('onLogin', user => {\n      success(user, 'Signed in');\n    });\n    jwtService.on('onLogout', () => {\n      pass('Signed out');\n      dispatch(logoutUser());\n    });\n    jwtService.on('onAutoLogout', message => {\n      pass(message);\n      dispatch(logoutUser());\n    });\n    jwtService.on('onNoAccessToken', () => {\n      pass();\n    });\n    jwtService.init();\n\n    function success(user, message) {\n      if (message) {\n        dispatch(showMessage({\n          message\n        }));\n      }\n\n      Promise.all([dispatch(setUser(user)) // You can receive data in here before app initialization\n      ]).then(values => {\n        setWaitAuthCheck(false);\n        setIsAuthenticated(true);\n      });\n    }\n\n    function pass(message) {\n      if (message) {\n        dispatch(showMessage({\n          message\n        }));\n      }\n\n      setWaitAuthCheck(false);\n      setIsAuthenticated(false);\n    }\n  }, [dispatch]);\n  return waitAuthCheck ? /*#__PURE__*/_jsxDEV(FuseSplashScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"GhwAFG5I+L58L/IAvlDU/BWw+Pc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AuthProvider;\n\nfunction useAuth() {\n  _s2();\n\n  const context = React.useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","FuseSplashScreen","showMessage","logoutUser","setUser","jwtService","AuthContext","createContext","AuthProvider","children","isAuthenticated","setIsAuthenticated","undefined","waitAuthCheck","setWaitAuthCheck","dispatch","on","message","signInWithToken","then","user","success","catch","error","pass","init","Promise","all","values","useAuth","context","useContext","Error"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/auth/AuthContext.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport FuseSplashScreen from '@fuse/core/FuseSplashScreen';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport { logoutUser, setUser } from 'app/store/userSlice';\r\nimport jwtService from './services/jwtService';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(undefined);\r\n  const [waitAuthCheck, setWaitAuthCheck] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    jwtService.on('onAutoLogin', () => {\r\n      dispatch(showMessage({ message: 'Signing in with JWT' }));\r\n\r\n      /**\r\n       * Sign in and retrieve user data with stored token\r\n       */\r\n      jwtService\r\n        .signInWithToken()\r\n        .then((user) => {\r\n          success(user, 'Signed in with JWT');\r\n        })\r\n        .catch((error) => {\r\n          pass(error.message);\r\n        });\r\n    });\r\n\r\n    jwtService.on('onLogin', (user) => {\r\n      success(user, 'Signed in');\r\n    });\r\n\r\n    jwtService.on('onLogout', () => {\r\n      pass('Signed out');\r\n\r\n      dispatch(logoutUser());\r\n    });\r\n\r\n    jwtService.on('onAutoLogout', (message) => {\r\n      pass(message);\r\n\r\n      dispatch(logoutUser());\r\n    });\r\n\r\n    jwtService.on('onNoAccessToken', () => {\r\n      pass();\r\n    });\r\n\r\n    jwtService.init();\r\n\r\n    function success(user, message) {\r\n      if (message) {\r\n        dispatch(showMessage({ message }));\r\n      }\r\n\r\n      Promise.all([\r\n        dispatch(setUser(user)),\r\n        // You can receive data in here before app initialization\r\n      ]).then((values) => {\r\n        setWaitAuthCheck(false);\r\n        setIsAuthenticated(true);\r\n      });\r\n    }\r\n\r\n    function pass(message) {\r\n      if (message) {\r\n        dispatch(showMessage({ message }));\r\n      }\r\n\r\n      setWaitAuthCheck(false);\r\n      setIsAuthenticated(false);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return waitAuthCheck ? (\r\n    <FuseSplashScreen />\r\n  ) : (\r\n    <AuthContext.Provider value={{ isAuthenticated }}>{children}</AuthContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useAuth() {\r\n  const context = React.useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within a AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { AuthProvider, useAuth };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}