{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\theme-layouts\\\\shared-components\\\\FullScreenToggle.js\",\n    _s = $RefreshSig$();\n\nimport Tooltip from '@mui/material/Tooltip';\nimport clsx from 'clsx';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useEnhancedEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst HeaderFullScreenToggle = props => {\n  _s();\n\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  useEnhancedEffect(() => {\n    document.onfullscreenchange = () => setIsFullScreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => {\n      document.onfullscreenchange = undefined;\n    };\n  });\n\n  function getBrowserFullscreenElementProp() {\n    if (typeof document.fullscreenElement !== 'undefined') {\n      return 'fullscreenElement';\n    }\n\n    if (typeof document.mozFullScreenElement !== 'undefined') {\n      return 'mozFullScreenElement';\n    }\n\n    if (typeof document.msFullscreenElement !== 'undefined') {\n      return 'msFullscreenElement';\n    }\n\n    if (typeof document.webkitFullscreenElement !== 'undefined') {\n      return 'webkitFullscreenElement';\n    }\n\n    throw new Error('fullscreenElement is not supported by this browser');\n  }\n  /* View in fullscreen */\n\n\n  function openFullscreen() {\n    const elem = document.documentElement;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  }\n  /* Close fullscreen */\n\n\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }\n\n  function toggleFullScreen() {\n    if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Fullscreen toggle\",\n    placement: \"bottom\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleFullScreen,\n      className: clsx('w-40 h-40', props.className),\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n        children: \"heroicons-outline:arrows-expand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderFullScreenToggle, \"/rZLklDPd6T5DB4ioYMrQNT7VNQ=\", false, function () {\n  return [useEnhancedEffect];\n});\n\n_c = HeaderFullScreenToggle;\nexport default HeaderFullScreenToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderFullScreenToggle\");","map":{"version":3,"names":["Tooltip","clsx","useEffect","useLayoutEffect","useState","IconButton","FuseSvgIcon","useEnhancedEffect","window","HeaderFullScreenToggle","props","isFullScreen","setIsFullScreen","document","onfullscreenchange","getBrowserFullscreenElementProp","undefined","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error","openFullscreen","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","closeFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullScreen","className"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/theme-layouts/shared-components/FullScreenToggle.js"],"sourcesContent":["import Tooltip from '@mui/material/Tooltip';\r\nimport clsx from 'clsx';\r\nimport { useEffect, useLayoutEffect, useState } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\n\r\nconst useEnhancedEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\r\n\r\nconst HeaderFullScreenToggle = (props) => {\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  useEnhancedEffect(() => {\r\n    document.onfullscreenchange = () =>\r\n      setIsFullScreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n    return () => {\r\n      document.onfullscreenchange = undefined;\r\n    };\r\n  });\r\n\r\n  function getBrowserFullscreenElementProp() {\r\n    if (typeof document.fullscreenElement !== 'undefined') {\r\n      return 'fullscreenElement';\r\n    }\r\n    if (typeof document.mozFullScreenElement !== 'undefined') {\r\n      return 'mozFullScreenElement';\r\n    }\r\n    if (typeof document.msFullscreenElement !== 'undefined') {\r\n      return 'msFullscreenElement';\r\n    }\r\n    if (typeof document.webkitFullscreenElement !== 'undefined') {\r\n      return 'webkitFullscreenElement';\r\n    }\r\n    throw new Error('fullscreenElement is not supported by this browser');\r\n  }\r\n\r\n  /* View in fullscreen */\r\n  function openFullscreen() {\r\n    const elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      /* Chrome, Safari and Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  /* Close fullscreen */\r\n  function closeFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      /* Firefox */\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      /* Chrome, Safari and Opera */\r\n      document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      /* IE/Edge */\r\n      document.msExitFullscreen();\r\n    }\r\n  }\r\n\r\n  function toggleFullScreen() {\r\n    if (\r\n      document.fullscreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.mozFullScreenElement\r\n    ) {\r\n      closeFullscreen();\r\n    } else {\r\n      openFullscreen();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tooltip title=\"Fullscreen toggle\" placement=\"bottom\">\r\n      <IconButton\r\n        onClick={toggleFullScreen}\r\n        className={clsx('w-40 h-40', props.className)}\r\n        size=\"large\"\r\n      >\r\n        <FuseSvgIcon>heroicons-outline:arrows-expand</FuseSvgIcon>\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default HeaderFullScreenToggle;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}