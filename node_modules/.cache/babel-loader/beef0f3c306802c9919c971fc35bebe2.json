{"ast":null,"code":"import _wrapRegExp from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js\";import _objectSpread from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _ from'@lodash';import FuseUtils from'@fuse/utils';import mockApi from'../mock-api.json';import mock from'../mock';var contactsDB=mockApi.components.examples.contacts.value;var tagsDB=mockApi.components.examples.contacts_tags.value;mock.onGet('/api/contacts').reply(function(config){return[200,contactsDB];});mock.onPost('/api/contacts').reply(function(_ref){var data=_ref.data;var newContact=_objectSpread({id:FuseUtils.generateGUID()},JSON.parse(data));contactsDB.push(newContact);return[200,newContact];});mock.onGet(/\\/api\\/contacts\\/(?!tags)[^/]+/).reply(function(config){var id=config.url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/contacts\\/([^/]+)/,{id:1})).groups.id;var contact=_.find(contactsDB,{id:id});if(contact){return[200,contact];}return[404,'Requested task do not exist.'];});mock.onPut(/\\/api\\/contacts\\/[^/]+/).reply(function(_ref2){var url=_ref2.url,data=_ref2.data;var id=url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/contacts\\/([^/]+)/,{id:1})).groups.id;_.assign(_.find(contactsDB,{id:id}),JSON.parse(data));return[200,_.find(contactsDB,{id:id})];});mock.onDelete(/\\/api\\/contacts\\/[^/]+/).reply(function(config){var id=config.url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/contacts\\/([^/]+)/,{id:1})).groups.id;_.remove(contactsDB,{id:id});return[200,id];});mock.onGet('/api/contacts/tags').reply(function(config){return[200,tagsDB];});","map":null,"metadata":{},"sourceType":"module"}