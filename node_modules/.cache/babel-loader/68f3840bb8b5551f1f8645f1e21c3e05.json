{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport _ from '@lodash';\nimport { removeList } from './listsSlice';\nimport { removeCard, updateCard } from './cardSlice';\nimport CardModel from '../model/CardModel';\nexport const getCards = createAsyncThunk('scrumboardApp/cards/getCards', async boardId => {\n  const response = await axios.get(`/api/scrumboard/boards/${boardId}/cards`);\n  const data = await response.data;\n  return data;\n});\nexport const newCard = createAsyncThunk('scrumboardApp/cards/newCard', async (_ref, _ref2) => {\n  let {\n    listId,\n    newData\n  } = _ref;\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  const {\n    board\n  } = getState().scrumboardApp;\n  const response = await axios.post(`/api/scrumboard/boards/${board.id}/lists/${listId}/cards`, CardModel(newData));\n  const data = await response.data;\n  return data;\n});\nconst cardsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectCards,\n  selectById: selectCardById\n} = cardsAdapter.getSelectors(state => state.scrumboardApp.cards);\nconst cardsSlice = createSlice({\n  name: 'scrumboardApp/cards',\n  initialState: cardsAdapter.getInitialState({}),\n  reducers: {\n    resetCards: (state, action) => {}\n  },\n  extraReducers: {\n    [getCards.fulfilled]: cardsAdapter.setAll,\n    [removeList.fulfilled]: (state, action) => {\n      const listId = action.payload;\n      const {\n        selectAll\n      } = cardsAdapter.getSelectors();\n      const cards = selectAll(state);\n\n      const removedCardIds = _.map(_.filter(cards, {\n        listId\n      }), 'id');\n\n      return cardsAdapter.removeMany(state, removedCardIds);\n    },\n    [newCard.fulfilled]: cardsAdapter.addOne,\n    [updateCard.fulfilled]: cardsAdapter.setOne,\n    [removeCard.fulfilled]: cardsAdapter.removeOne\n  }\n});\nexport const {\n  resetCards\n} = cardsSlice.actions;\nexport default cardsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSlice","axios","_","removeList","removeCard","updateCard","CardModel","getCards","boardId","response","get","data","newCard","listId","newData","dispatch","getState","board","scrumboardApp","post","id","cardsAdapter","selectAll","selectCards","selectById","selectCardById","getSelectors","state","cards","cardsSlice","name","initialState","getInitialState","reducers","resetCards","action","extraReducers","fulfilled","setAll","payload","removedCardIds","map","filter","removeMany","addOne","setOne","removeOne","actions","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/scrumboard/store/cardsSlice.js"],"sourcesContent":["import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport _ from '@lodash';\r\nimport { removeList } from './listsSlice';\r\nimport { removeCard, updateCard } from './cardSlice';\r\nimport CardModel from '../model/CardModel';\r\n\r\nexport const getCards = createAsyncThunk('scrumboardApp/cards/getCards', async (boardId) => {\r\n  const response = await axios.get(`/api/scrumboard/boards/${boardId}/cards`);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const newCard = createAsyncThunk(\r\n  'scrumboardApp/cards/newCard',\r\n  async ({ listId, newData }, { dispatch, getState }) => {\r\n    const { board } = getState().scrumboardApp;\r\n\r\n    const response = await axios.post(\r\n      `/api/scrumboard/boards/${board.id}/lists/${listId}/cards`,\r\n      CardModel(newData)\r\n    );\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst cardsAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectCards, selectById: selectCardById } = cardsAdapter.getSelectors(\r\n  (state) => state.scrumboardApp.cards\r\n);\r\n\r\nconst cardsSlice = createSlice({\r\n  name: 'scrumboardApp/cards',\r\n  initialState: cardsAdapter.getInitialState({}),\r\n  reducers: {\r\n    resetCards: (state, action) => {},\r\n  },\r\n  extraReducers: {\r\n    [getCards.fulfilled]: cardsAdapter.setAll,\r\n    [removeList.fulfilled]: (state, action) => {\r\n      const listId = action.payload;\r\n      const { selectAll } = cardsAdapter.getSelectors();\r\n      const cards = selectAll(state);\r\n      const removedCardIds = _.map(_.filter(cards, { listId }), 'id');\r\n      return cardsAdapter.removeMany(state, removedCardIds);\r\n    },\r\n    [newCard.fulfilled]: cardsAdapter.addOne,\r\n    [updateCard.fulfilled]: cardsAdapter.setOne,\r\n    [removeCard.fulfilled]: cardsAdapter.removeOne,\r\n  },\r\n});\r\n\r\nexport const { resetCards } = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,MAAMC,QAAQ,GAAGT,gBAAgB,CAAC,8BAAD,EAAiC,MAAOU,OAAP,IAAmB;EAC1F,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,0BAAyBF,OAAQ,QAA5C,CAAvB;EACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALuC,CAAjC;AAOP,OAAO,MAAMC,OAAO,GAAGd,gBAAgB,CACrC,6BADqC,EAErC,uBAAuD;EAAA,IAAhD;IAAEe,MAAF;IAAUC;EAAV,CAAgD;EAAA,IAA3B;IAAEC,QAAF;IAAYC;EAAZ,CAA2B;EACrD,MAAM;IAAEC;EAAF,IAAYD,QAAQ,GAAGE,aAA7B;EAEA,MAAMT,QAAQ,GAAG,MAAMR,KAAK,CAACkB,IAAN,CACpB,0BAAyBF,KAAK,CAACG,EAAG,UAASP,MAAO,QAD9B,EAErBP,SAAS,CAACQ,OAAD,CAFY,CAAvB;EAIA,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAZoC,CAAhC;AAeP,MAAMU,YAAY,GAAGtB,mBAAmB,CAAC,EAAD,CAAxC;AAEA,OAAO,MAAM;EAAEuB,SAAS,EAAEC,WAAb;EAA0BC,UAAU,EAAEC;AAAtC,IAAyDJ,YAAY,CAACK,YAAb,CACnEC,KAAD,IAAWA,KAAK,CAACT,aAAN,CAAoBU,KADqC,CAA/D;AAIP,MAAMC,UAAU,GAAG7B,WAAW,CAAC;EAC7B8B,IAAI,EAAE,qBADuB;EAE7BC,YAAY,EAAEV,YAAY,CAACW,eAAb,CAA6B,EAA7B,CAFe;EAG7BC,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACP,KAAD,EAAQQ,MAAR,KAAmB,CAAE;EADzB,CAHmB;EAM7BC,aAAa,EAAE;IACb,CAAC7B,QAAQ,CAAC8B,SAAV,GAAsBhB,YAAY,CAACiB,MADtB;IAEb,CAACnC,UAAU,CAACkC,SAAZ,GAAwB,CAACV,KAAD,EAAQQ,MAAR,KAAmB;MACzC,MAAMtB,MAAM,GAAGsB,MAAM,CAACI,OAAtB;MACA,MAAM;QAAEjB;MAAF,IAAgBD,YAAY,CAACK,YAAb,EAAtB;MACA,MAAME,KAAK,GAAGN,SAAS,CAACK,KAAD,CAAvB;;MACA,MAAMa,cAAc,GAAGtC,CAAC,CAACuC,GAAF,CAAMvC,CAAC,CAACwC,MAAF,CAASd,KAAT,EAAgB;QAAEf;MAAF,CAAhB,CAAN,EAAmC,IAAnC,CAAvB;;MACA,OAAOQ,YAAY,CAACsB,UAAb,CAAwBhB,KAAxB,EAA+Ba,cAA/B,CAAP;IACD,CARY;IASb,CAAC5B,OAAO,CAACyB,SAAT,GAAqBhB,YAAY,CAACuB,MATrB;IAUb,CAACvC,UAAU,CAACgC,SAAZ,GAAwBhB,YAAY,CAACwB,MAVxB;IAWb,CAACzC,UAAU,CAACiC,SAAZ,GAAwBhB,YAAY,CAACyB;EAXxB;AANc,CAAD,CAA9B;AAqBA,OAAO,MAAM;EAAEZ;AAAF,IAAiBL,UAAU,CAACkB,OAAlC;AAEP,eAAelB,UAAU,CAACmB,OAA1B"},"metadata":{},"sourceType":"module"}