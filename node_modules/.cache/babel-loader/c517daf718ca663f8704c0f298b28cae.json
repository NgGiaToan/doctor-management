{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\toggle-button\\\\ToggleButtonSizes.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport Box from '@mui/material/Box';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButtonSizes() {\n  _s();\n\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const children = [/*#__PURE__*/_jsxDEV(ToggleButton, {\n    value: \"left\",\n    children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, \"left\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n    value: \"center\",\n    children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, \"center\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n    value: \"right\",\n    children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, \"right\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n    value: \"justify\",\n    children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, \"justify\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)];\n  const control = {\n    value: alignment,\n    onChange: handleChange,\n    exclusive: true\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      // TODO Replace with Stack\n      '& > :not(style) + :not(style)': {\n        mt: 2\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      size: \"small\",\n      ...control,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, { ...control,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      size: \"large\",\n      ...control,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleButtonSizes, \"m4nEWrI40BpDk/1hzAomhAKLBEg=\");\n\n_c = ToggleButtonSizes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtonSizes\");","map":{"version":3,"names":["React","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","Box","ToggleButton","ToggleButtonGroup","ToggleButtonSizes","alignment","setAlignment","useState","handleChange","event","newAlignment","children","control","value","onChange","exclusive","display","flexDirection","alignItems","mt"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/toggle-button/ToggleButtonSizes.js"],"sourcesContent":["import * as React from 'react';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport Box from '@mui/material/Box';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonSizes() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const children = [\r\n    <ToggleButton value=\"left\" key=\"left\">\r\n      <FormatAlignLeftIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton value=\"center\" key=\"center\">\r\n      <FormatAlignCenterIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton value=\"right\" key=\"right\">\r\n      <FormatAlignRightIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton value=\"justify\" key=\"justify\">\r\n      <FormatAlignJustifyIcon />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  const control = {\r\n    value: alignment,\r\n    onChange: handleChange,\r\n    exclusive: true,\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        // TODO Replace with Stack\r\n        '& > :not(style) + :not(style)': { mt: 2 },\r\n      }}\r\n    >\r\n      <ToggleButtonGroup size=\"small\" {...control}>\r\n        {children}\r\n      </ToggleButtonGroup>\r\n      <ToggleButtonGroup {...control}>{children}</ToggleButtonGroup>\r\n      <ToggleButtonGroup size=\"large\" {...control}>\r\n        {children}\r\n      </ToggleButtonGroup>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAEA,eAAe,SAASC,iBAAT,GAA6B;EAAA;;EAC1C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACW,QAAN,CAAe,MAAf,CAAlC;;EAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;IAC5CJ,YAAY,CAACI,YAAD,CAAZ;EACD,CAFD;;EAIA,MAAMC,QAAQ,GAAG,cACf,QAAC,YAAD;IAAc,KAAK,EAAC,MAApB;IAAA,uBACE,QAAC,mBAAD;MAAA;MAAA;MAAA;IAAA;EADF,GAA+B,MAA/B;IAAA;IAAA;IAAA;EAAA,QADe,eAIf,QAAC,YAAD;IAAc,KAAK,EAAC,QAApB;IAAA,uBACE,QAAC,qBAAD;MAAA;MAAA;MAAA;IAAA;EADF,GAAiC,QAAjC;IAAA;IAAA;IAAA;EAAA,QAJe,eAOf,QAAC,YAAD;IAAc,KAAK,EAAC,OAApB;IAAA,uBACE,QAAC,oBAAD;MAAA;MAAA;MAAA;IAAA;EADF,GAAgC,OAAhC;IAAA;IAAA;IAAA;EAAA,QAPe,eAUf,QAAC,YAAD;IAAc,KAAK,EAAC,SAApB;IAAA,uBACE,QAAC,sBAAD;MAAA;MAAA;MAAA;IAAA;EADF,GAAkC,SAAlC;IAAA;IAAA;IAAA;EAAA,QAVe,CAAjB;EAeA,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAER,SADO;IAEdS,QAAQ,EAAEN,YAFI;IAGdO,SAAS,EAAE;EAHG,CAAhB;EAMA,oBACE,QAAC,GAAD;IACE,EAAE,EAAE;MACFC,OAAO,EAAE,MADP;MAEFC,aAAa,EAAE,QAFb;MAGFC,UAAU,EAAE,QAHV;MAIF;MACA,iCAAiC;QAAEC,EAAE,EAAE;MAAN;IAL/B,CADN;IAAA,wBASE,QAAC,iBAAD;MAAmB,IAAI,EAAC,OAAxB;MAAA,GAAoCP,OAApC;MAAA,UACGD;IADH;MAAA;MAAA;MAAA;IAAA,QATF,eAYE,QAAC,iBAAD,OAAuBC,OAAvB;MAAA,UAAiCD;IAAjC;MAAA;MAAA;MAAA;IAAA,QAZF,eAaE,QAAC,iBAAD;MAAmB,IAAI,EAAC,OAAxB;MAAA,GAAoCC,OAApC;MAAA,UACGD;IADH;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GA/CuBP,iB;;KAAAA,iB"},"metadata":{},"sourceType":"module"}