{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\toggle-button\\\\ToggleButtonNotEmpty.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport LaptopIcon from '@mui/icons-material/Laptop';\nimport TvIcon from '@mui/icons-material/Tv';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport Stack from '@mui/material/Stack';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButtonNotEmpty() {\n  _s();\n\n  const [alignment, setAlignment] = React.useState('left');\n  const [devices, setDevices] = React.useState(() => ['phone']);\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  const handleDevices = (event, newDevices) => {\n    if (newDevices.length) {\n      setDevices(newDevices);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 4,\n    children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: alignment,\n      exclusive: true,\n      onChange: handleAlignment,\n      \"aria-label\": \"text alignment\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"left\",\n        \"aria-label\": \"left aligned\",\n        children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"center\",\n        \"aria-label\": \"centered\",\n        children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"right\",\n        \"aria-label\": \"right aligned\",\n        children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: devices,\n      onChange: handleDevices,\n      \"aria-label\": \"device\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"laptop\",\n        \"aria-label\": \"laptop\",\n        children: /*#__PURE__*/_jsxDEV(LaptopIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"tv\",\n        \"aria-label\": \"tv\",\n        children: /*#__PURE__*/_jsxDEV(TvIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"phone\",\n        \"aria-label\": \"phone\",\n        children: /*#__PURE__*/_jsxDEV(PhoneAndroidIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleButtonNotEmpty, \"aLj87Rh7WdEUSUrcJ5VnoKYRi5o=\");\n\n_c = ToggleButtonNotEmpty;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtonNotEmpty\");","map":{"version":3,"names":["React","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","LaptopIcon","TvIcon","PhoneAndroidIcon","Stack","ToggleButton","ToggleButtonGroup","ToggleButtonNotEmpty","alignment","setAlignment","useState","devices","setDevices","handleAlignment","event","newAlignment","handleDevices","newDevices","length"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/toggle-button/ToggleButtonNotEmpty.js"],"sourcesContent":["import * as React from 'react';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport LaptopIcon from '@mui/icons-material/Laptop';\r\nimport TvIcon from '@mui/icons-material/Tv';\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\r\nimport Stack from '@mui/material/Stack';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonNotEmpty() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [devices, setDevices] = React.useState(() => ['phone']);\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    if (newAlignment !== null) {\r\n      setAlignment(newAlignment);\r\n    }\r\n  };\r\n\r\n  const handleDevices = (event, newDevices) => {\r\n    if (newDevices.length) {\r\n      setDevices(newDevices);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={4}>\r\n      <ToggleButtonGroup\r\n        value={alignment}\r\n        exclusive\r\n        onChange={handleAlignment}\r\n        aria-label=\"text alignment\"\r\n      >\r\n        <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n          <FormatAlignLeftIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value=\"center\" aria-label=\"centered\">\r\n          <FormatAlignCenterIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n          <FormatAlignRightIcon />\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n      <ToggleButtonGroup\r\n        value={devices}\r\n        onChange={handleDevices}\r\n        aria-label=\"device\"\r\n      >\r\n        <ToggleButton value=\"laptop\" aria-label=\"laptop\">\r\n          <LaptopIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value=\"tv\" aria-label=\"tv\">\r\n          <TvIcon />\r\n        </ToggleButton>\r\n        <ToggleButton value=\"phone\" aria-label=\"phone\">\r\n          <PhoneAndroidIcon />\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </Stack>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAEA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAC7C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACa,QAAN,CAAe,MAAf,CAAlC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACa,QAAN,CAAe,MAAM,CAAC,OAAD,CAArB,CAA9B;;EAEA,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;IAC/C,IAAIA,YAAY,KAAK,IAArB,EAA2B;MACzBN,YAAY,CAACM,YAAD,CAAZ;IACD;EACF,CAJD;;EAMA,MAAMC,aAAa,GAAG,CAACF,KAAD,EAAQG,UAAR,KAAuB;IAC3C,IAAIA,UAAU,CAACC,MAAf,EAAuB;MACrBN,UAAU,CAACK,UAAD,CAAV;IACD;EACF,CAJD;;EAMA,oBACE,QAAC,KAAD;IAAO,SAAS,EAAC,KAAjB;IAAuB,OAAO,EAAE,CAAhC;IAAA,wBACE,QAAC,iBAAD;MACE,KAAK,EAAET,SADT;MAEE,SAAS,MAFX;MAGE,QAAQ,EAAEK,eAHZ;MAIE,cAAW,gBAJb;MAAA,wBAME,QAAC,YAAD;QAAc,KAAK,EAAC,MAApB;QAA2B,cAAW,cAAtC;QAAA,uBACE,QAAC,mBAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF,eASE,QAAC,YAAD;QAAc,KAAK,EAAC,QAApB;QAA6B,cAAW,UAAxC;QAAA,uBACE,QAAC,qBAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF,eAYE,QAAC,YAAD;QAAc,KAAK,EAAC,OAApB;QAA4B,cAAW,eAAvC;QAAA,uBACE,QAAC,oBAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAkBE,QAAC,iBAAD;MACE,KAAK,EAAEF,OADT;MAEE,QAAQ,EAAEK,aAFZ;MAGE,cAAW,QAHb;MAAA,wBAKE,QAAC,YAAD;QAAc,KAAK,EAAC,QAApB;QAA6B,cAAW,QAAxC;QAAA,uBACE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF,eAQE,QAAC,YAAD;QAAc,KAAK,EAAC,IAApB;QAAyB,cAAW,IAApC;QAAA,uBACE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF,eAWE,QAAC,YAAD;QAAc,KAAK,EAAC,OAApB;QAA4B,cAAW,OAAvC;QAAA,uBACE,QAAC,gBAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GApDuBT,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}