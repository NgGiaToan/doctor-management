{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport _ from '@lodash';\nimport { selectFolders } from './foldersSlice';\nimport { selectLabels } from './labelsSlice';\nimport { selectFilters } from './filtersSlice';\nexport const getMails = createAsyncThunk('mailboxApp/mails/getMails', async (routeParams, _ref) => {\n  let {\n    getState\n  } = _ref;\n  routeParams = routeParams || getState().mailboxApp.mails.routeParams;\n  let url = '/api/mailbox/mails/';\n\n  if (routeParams.folderHandle) {\n    url += routeParams.folderHandle;\n  }\n\n  if (routeParams.labelHandle) {\n    url += `labels/${routeParams.labelHandle}`;\n  }\n\n  if (routeParams.filterHandle) {\n    url += `filters/${routeParams.filterHandle}`;\n  }\n\n  const response = await axios.get(url);\n  const data = await response.data;\n  return {\n    data,\n    routeParams\n  };\n});\nexport const setActionToMails = createAsyncThunk('mailboxApp/mails/setActionToMails', async (_ref2, _ref3) => {\n  let {\n    type,\n    value,\n    ids\n  } = _ref2;\n  let {\n    dispatch,\n    getState\n  } = _ref3;\n  const {\n    mails\n  } = getState().mailboxApp;\n  const {\n    selectedMailIds\n  } = mails;\n  const response = await axios.post('/api/mailbox/actions', {\n    type,\n    value,\n    ids\n  });\n  const data = await response.data;\n  dispatch(getMails());\n  return data;\n});\nconst mailsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectMails,\n  selectById: selectMailById\n} = mailsAdapter.getSelectors(state => state.mailboxApp.mails);\nconst mailsSlice = createSlice({\n  name: 'mailboxApp/mails',\n  initialState: mailsAdapter.getInitialState({\n    searchText: '',\n    routeParams: {},\n    selectedMailIds: []\n  }),\n  reducers: {\n    setMailsSearchText: {\n      reducer: (state, action) => {\n        state.searchText = action.payload;\n      },\n      prepare: event => ({\n        payload: event.target.value || ''\n      })\n    },\n    selectAllMails: (state, action) => {\n      state.selectedMailIds = state.ids;\n    },\n    deselectAllMails: (state, action) => {\n      state.selectedMailIds = [];\n    },\n    selectMailsByParameter: (state, action) => {\n      const [parameter, value] = action.payload;\n      state.selectedMailIds = state.ids.filter(id => state.entities[id][parameter] === value);\n    },\n    toggleInSelectedMails: (state, action) => {\n      const mailId = action.payload;\n      state.selectedMailIds = state.selectedMailIds.includes(mailId) ? state.selectedMailIds.filter(id => id !== mailId) : [...state.selectedMailIds, mailId];\n    }\n  },\n  extraReducers: {\n    [getMails.fulfilled]: (state, action) => {\n      const {\n        data,\n        routeParams\n      } = action.payload;\n      mailsAdapter.setAll(state, data);\n      state.routeParams = routeParams;\n      state.selectedMailIds = [];\n    }\n  }\n});\nexport const {\n  setMailsSearchText,\n  selectAllMails,\n  deselectAllMails,\n  selectMailsByParameter,\n  toggleInSelectedMails\n} = mailsSlice.actions;\nexport const selectMailsTitle = routeParams => createSelector([selectFolders, selectLabels, selectFilters], (folders, labels, filters) => {\n  let title;\n\n  if (routeParams.folderHandle) {\n    var _$find;\n\n    title = (_$find = _.find(folders, {\n      slug: routeParams.folderHandle\n    })) === null || _$find === void 0 ? void 0 : _$find.title;\n  }\n\n  if (routeParams.labelHandle) {\n    var _$find2;\n\n    title = (_$find2 = _.find(labels, {\n      slug: routeParams.labelHandle\n    })) === null || _$find2 === void 0 ? void 0 : _$find2.title;\n  }\n\n  if (routeParams.filterHandle) {\n    var _$find3;\n\n    title = (_$find3 = _.find(filters, {\n      slug: routeParams.filterHandle\n    })) === null || _$find3 === void 0 ? void 0 : _$find3.title;\n  }\n\n  return title;\n});\nexport const selectSearchText = _ref4 => {\n  let {\n    mailboxApp\n  } = _ref4;\n  return mailboxApp.mails.searchText;\n};\nexport const selectSelectedMailIds = _ref5 => {\n  let {\n    mailboxApp\n  } = _ref5;\n  return mailboxApp.mails.selectedMailIds;\n};\nexport default mailsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSelector","createSlice","axios","_","selectFolders","selectLabels","selectFilters","getMails","routeParams","getState","mailboxApp","mails","url","folderHandle","labelHandle","filterHandle","response","get","data","setActionToMails","type","value","ids","dispatch","selectedMailIds","post","mailsAdapter","selectAll","selectMails","selectById","selectMailById","getSelectors","state","mailsSlice","name","initialState","getInitialState","searchText","reducers","setMailsSearchText","reducer","action","payload","prepare","event","target","selectAllMails","deselectAllMails","selectMailsByParameter","parameter","filter","id","entities","toggleInSelectedMails","mailId","includes","extraReducers","fulfilled","setAll","actions","selectMailsTitle","folders","labels","filters","title","find","slug","selectSearchText","selectSelectedMailIds"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/mailbox/store/mailsSlice.js"],"sourcesContent":["import {\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSelector,\r\n  createSlice,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport _ from '@lodash';\r\nimport { selectFolders } from './foldersSlice';\r\nimport { selectLabels } from './labelsSlice';\r\nimport { selectFilters } from './filtersSlice';\r\n\r\nexport const getMails = createAsyncThunk(\r\n  'mailboxApp/mails/getMails',\r\n  async (routeParams, { getState }) => {\r\n    routeParams = routeParams || getState().mailboxApp.mails.routeParams;\r\n\r\n    let url = '/api/mailbox/mails/';\r\n    if (routeParams.folderHandle) {\r\n      url += routeParams.folderHandle;\r\n    }\r\n\r\n    if (routeParams.labelHandle) {\r\n      url += `labels/${routeParams.labelHandle}`;\r\n    }\r\n\r\n    if (routeParams.filterHandle) {\r\n      url += `filters/${routeParams.filterHandle}`;\r\n    }\r\n    const response = await axios.get(url);\r\n    const data = await response.data;\r\n\r\n    return { data, routeParams };\r\n  }\r\n);\r\n\r\nexport const setActionToMails = createAsyncThunk(\r\n  'mailboxApp/mails/setActionToMails',\r\n  async ({ type, value, ids }, { dispatch, getState }) => {\r\n    const { mails } = getState().mailboxApp;\r\n    const { selectedMailIds } = mails;\r\n\r\n    const response = await axios.post('/api/mailbox/actions', {\r\n      type,\r\n      value,\r\n      ids,\r\n    });\r\n\r\n    const data = await response.data;\r\n\r\n    dispatch(getMails());\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst mailsAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectMails, selectById: selectMailById } = mailsAdapter.getSelectors(\r\n  (state) => state.mailboxApp.mails\r\n);\r\n\r\nconst mailsSlice = createSlice({\r\n  name: 'mailboxApp/mails',\r\n  initialState: mailsAdapter.getInitialState({\r\n    searchText: '',\r\n    routeParams: {},\r\n    selectedMailIds: [],\r\n  }),\r\n  reducers: {\r\n    setMailsSearchText: {\r\n      reducer: (state, action) => {\r\n        state.searchText = action.payload;\r\n      },\r\n      prepare: (event) => ({ payload: event.target.value || '' }),\r\n    },\r\n    selectAllMails: (state, action) => {\r\n      state.selectedMailIds = state.ids;\r\n    },\r\n    deselectAllMails: (state, action) => {\r\n      state.selectedMailIds = [];\r\n    },\r\n    selectMailsByParameter: (state, action) => {\r\n      const [parameter, value] = action.payload;\r\n      state.selectedMailIds = state.ids.filter((id) => state.entities[id][parameter] === value);\r\n    },\r\n    toggleInSelectedMails: (state, action) => {\r\n      const mailId = action.payload;\r\n      state.selectedMailIds = state.selectedMailIds.includes(mailId)\r\n        ? state.selectedMailIds.filter((id) => id !== mailId)\r\n        : [...state.selectedMailIds, mailId];\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getMails.fulfilled]: (state, action) => {\r\n      const { data, routeParams } = action.payload;\r\n      mailsAdapter.setAll(state, data);\r\n      state.routeParams = routeParams;\r\n      state.selectedMailIds = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMailsSearchText,\r\n  selectAllMails,\r\n  deselectAllMails,\r\n  selectMailsByParameter,\r\n  toggleInSelectedMails,\r\n} = mailsSlice.actions;\r\n\r\nexport const selectMailsTitle = (routeParams) =>\r\n  createSelector([selectFolders, selectLabels, selectFilters], (folders, labels, filters) => {\r\n    let title;\r\n    if (routeParams.folderHandle) {\r\n      title = _.find(folders, { slug: routeParams.folderHandle })?.title;\r\n    }\r\n\r\n    if (routeParams.labelHandle) {\r\n      title = _.find(labels, { slug: routeParams.labelHandle })?.title;\r\n    }\r\n\r\n    if (routeParams.filterHandle) {\r\n      title = _.find(filters, { slug: routeParams.filterHandle })?.title;\r\n    }\r\n    return title;\r\n  });\r\n\r\nexport const selectSearchText = ({ mailboxApp }) => mailboxApp.mails.searchText;\r\n\r\nexport const selectSelectedMailIds = ({ mailboxApp }) => mailboxApp.mails.selectedMailIds;\r\n\r\nexport default mailsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}