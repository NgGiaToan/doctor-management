{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getLabels = createAsyncThunk('scrumboardApp/labels/getLabels', async boardId => {\n  const response = await axios.get(`/api/scrumboard/boards/${boardId}/labels`);\n  const data = await response.data;\n  return data;\n});\nconst labelsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectLabels,\n  selectById: selectLabelById\n} = labelsAdapter.getSelectors(state => state.scrumboardApp.labels);\nconst labelsSlice = createSlice({\n  name: 'scrumboardApp/labels',\n  initialState: labelsAdapter.getInitialState({}),\n  reducers: {\n    resetLabels: (state, action) => {}\n  },\n  extraReducers: {\n    [getLabels.fulfilled]: labelsAdapter.setAll\n  }\n});\nexport const {\n  resetLabels\n} = labelsSlice.actions;\nexport default labelsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSlice","axios","getLabels","boardId","response","get","data","labelsAdapter","selectAll","selectLabels","selectById","selectLabelById","getSelectors","state","scrumboardApp","labels","labelsSlice","name","initialState","getInitialState","reducers","resetLabels","action","extraReducers","fulfilled","setAll","actions","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/scrumboard/store/labelsSlice.js"],"sourcesContent":["import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getLabels = createAsyncThunk('scrumboardApp/labels/getLabels', async (boardId) => {\r\n  const response = await axios.get(`/api/scrumboard/boards/${boardId}/labels`);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nconst labelsAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectLabels, selectById: selectLabelById } = labelsAdapter.getSelectors(\r\n  (state) => state.scrumboardApp.labels\r\n);\r\n\r\nconst labelsSlice = createSlice({\r\n  name: 'scrumboardApp/labels',\r\n  initialState: labelsAdapter.getInitialState({}),\r\n  reducers: {\r\n    resetLabels: (state, action) => {},\r\n  },\r\n  extraReducers: {\r\n    [getLabels.fulfilled]: labelsAdapter.setAll,\r\n  },\r\n});\r\n\r\nexport const { resetLabels } = labelsSlice.actions;\r\n\r\nexport default labelsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,gCAAD,EAAmC,MAAOK,OAAP,IAAmB;EAC7F,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,0BAAyBF,OAAQ,SAA5C,CAAvB;EACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALwC,CAAlC;AAOP,MAAMC,aAAa,GAAGR,mBAAmB,CAAC,EAAD,CAAzC;AAEA,OAAO,MAAM;EAAES,SAAS,EAAEC,YAAb;EAA2BC,UAAU,EAAEC;AAAvC,IAA2DJ,aAAa,CAACK,YAAd,CACrEC,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,MADuC,CAAjE;AAIP,MAAMC,WAAW,GAAGhB,WAAW,CAAC;EAC9BiB,IAAI,EAAE,sBADwB;EAE9BC,YAAY,EAAEX,aAAa,CAACY,eAAd,CAA8B,EAA9B,CAFgB;EAG9BC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACR,KAAD,EAAQS,MAAR,KAAmB,CAAE;EAD1B,CAHoB;EAM9BC,aAAa,EAAE;IACb,CAACrB,SAAS,CAACsB,SAAX,GAAuBjB,aAAa,CAACkB;EADxB;AANe,CAAD,CAA/B;AAWA,OAAO,MAAM;EAAEJ;AAAF,IAAkBL,WAAW,CAACU,OAApC;AAEP,eAAeV,WAAW,CAACW,OAA3B"},"metadata":{},"sourceType":"module"}