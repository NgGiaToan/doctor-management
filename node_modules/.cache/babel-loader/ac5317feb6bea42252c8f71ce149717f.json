{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport fuse from './fuse';\nimport i18n from './i18nSlice';\nimport user from './userSlice';\n\nconst createReducer = asyncReducers => (state, action) => {\n  const combinedReducer = combineReducers({\n    fuse,\n    i18n,\n    user,\n    ...asyncReducers\n  });\n  /*\r\n  Reset the redux store when user logged out\r\n  */\n\n  if (action.type === 'user/userLoggedOut') {// state = undefined;\n  }\n\n  return combinedReducer(state, action);\n};\n\nexport default createReducer;","map":{"version":3,"names":["combineReducers","fuse","i18n","user","createReducer","asyncReducers","state","action","combinedReducer","type"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/ui/doctor-management-fe/src/app/store/rootReducer.js"],"sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\r\nimport fuse from './fuse';\r\nimport i18n from './i18nSlice';\r\nimport user from './userSlice';\r\n\r\nconst createReducer = (asyncReducers) => (state, action) => {\r\n  const combinedReducer = combineReducers({\r\n    fuse,\r\n    i18n,\r\n    user,\r\n    ...asyncReducers,\r\n  });\r\n\r\n  /*\r\n\tReset the redux store when user logged out\r\n\t */\r\n  if (action.type === 'user/userLoggedOut') {\r\n    // state = undefined;\r\n  }\r\n\r\n  return combinedReducer(state, action);\r\n};\r\n\r\nexport default createReducer;\r\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,aAAa,GAAIC,aAAD,IAAmB,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC1D,MAAMC,eAAe,GAAGR,eAAe,CAAC;IACtCC,IADsC;IAEtCC,IAFsC;IAGtCC,IAHsC;IAItC,GAAGE;EAJmC,CAAD,CAAvC;EAOA;AACF;AACA;;EACE,IAAIE,MAAM,CAACE,IAAP,KAAgB,oBAApB,EAA0C,CACxC;EACD;;EAED,OAAOD,eAAe,CAACF,KAAD,EAAQC,MAAR,CAAtB;AACD,CAhBD;;AAkBA,eAAeH,aAAf"},"metadata":{},"sourceType":"module"}