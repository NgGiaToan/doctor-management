{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\selects\\\\MultipleSelectNative.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nexport default function MultipleSelectNative() {\n  _s();\n\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChangeMultiple = event => {\n    const {\n      options\n    } = event.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        minWidth: 120,\n        maxWidth: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        shrink: true,\n        htmlFor: \"select-multiple-native\",\n        children: \"Native\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        native: true,\n        value: personName // @ts-ignore Typings are not considering `native`\n        ,\n        onChange: handleChangeMultiple,\n        label: \"Native\",\n        inputProps: {\n          id: 'select-multiple-native'\n        },\n        children: names.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelectNative, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n\n_c = MultipleSelectNative;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelectNative\");","map":{"version":3,"names":["React","InputLabel","FormControl","Select","names","MultipleSelectNative","personName","setPersonName","useState","handleChangeMultiple","event","options","target","value","i","l","length","selected","push","m","minWidth","maxWidth","id","map","name"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/selects/MultipleSelectNative.js"],"sourcesContent":["import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nexport default function MultipleSelectNative() {\r\n  const [personName, setPersonName] = React.useState([]);\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, minWidth: 120, maxWidth: 300 }}>\r\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          // @ts-ignore Typings are not considering `native`\r\n          onChange={handleChangeMultiple}\r\n          label=\"Native\"\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}\r\n        >\r\n          {names.map((name) => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,eANY,EAOZ,eAPY,EAQZ,mBARY,EASZ,kBATY,EAUZ,cAVY,CAAd;AAaA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAC7C,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAApC;;EACA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;IACtC,MAAM;MAAEC;IAAF,IAAcD,KAAK,CAACE,MAA1B;IACA,MAAMC,KAAK,GAAG,EAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmD;MACjD,IAAIH,OAAO,CAACG,CAAD,CAAP,CAAWG,QAAf,EAAyB;QACvBJ,KAAK,CAACK,IAAN,CAAWP,OAAO,CAACG,CAAD,CAAP,CAAWD,KAAtB;MACD;IACF;;IACDN,aAAa,CAACM,KAAD,CAAb;EACD,CATD;;EAWA,oBACE;IAAA,uBACE,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEM,CAAC,EAAE,CAAL;QAAQC,QAAQ,EAAE,GAAlB;QAAuBC,QAAQ,EAAE;MAAjC,CAAjB;MAAA,wBACE,QAAC,UAAD;QAAY,MAAM,MAAlB;QAAmB,OAAO,EAAC,wBAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,MAAD;QACE,QAAQ,MADV;QAEE,MAAM,MAFR;QAGE,KAAK,EAAEf,UAHT,CAIE;QAJF;QAKE,QAAQ,EAAEG,oBALZ;QAME,KAAK,EAAC,QANR;QAOE,UAAU,EAAE;UACVa,EAAE,EAAE;QADM,CAPd;QAAA,UAWGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBACT;UAAmB,KAAK,EAAEA,IAA1B;UAAA,UACGA;QADH,GAAaA,IAAb;UAAA;UAAA;UAAA;QAAA,QADD;MAXH;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GAvCuBnB,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}