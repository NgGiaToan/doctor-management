{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport history from '@history';\nimport SectionModel from '../model/SectionModel';\nimport TaskModel from '../model/TaskModel';\nexport const getTask = createAsyncThunk('tasksApp/task/getTask', async (id, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n\n  try {\n    const response = await axios.get(`/api/tasks/${id}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    history.push({\n      pathname: `/apps/tasks`\n    });\n    return null;\n  }\n});\nexport const addTask = createAsyncThunk('tasksApp/tasks/addTask', async (task, _ref2) => {\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  const response = await axios.post('/api/tasks', task);\n  const data = await response.data;\n  return data;\n});\nexport const updateTask = createAsyncThunk('tasksApp/tasks/updateTask', async (task, _ref3) => {\n  let {\n    dispatch,\n    getState\n  } = _ref3;\n  const response = await axios.put(`/api/tasks/${task.id}`, task);\n  const data = await response.data;\n  return data;\n});\nexport const removeTask = createAsyncThunk('tasksApp/tasks/removeTask', async (id, _ref4) => {\n  let {\n    dispatch,\n    getState\n  } = _ref4;\n  const response = await axios.delete(`/api/tasks/${id}`);\n  await response.data;\n  return id;\n});\nexport const selectTask = _ref5 => {\n  let {\n    tasksApp\n  } = _ref5;\n  return tasksApp.task;\n};\nconst taskSlice = createSlice({\n  name: 'tasksApp/task',\n  initialState: null,\n  reducers: {\n    newTask: (state, action) => {\n      const type = action.payload;\n\n      if (type === 'section') {\n        return SectionModel();\n      }\n\n      if (type === 'task') {\n        return TaskModel();\n      }\n\n      return null;\n    },\n    resetTask: () => null\n  },\n  extraReducers: {\n    [getTask.pending]: (state, action) => null,\n    [getTask.fulfilled]: (state, action) => action.payload,\n    [updateTask.fulfilled]: (state, action) => action.payload,\n    [removeTask.fulfilled]: (state, action) => null\n  }\n});\nexport const {\n  resetTask,\n  newTask\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","history","SectionModel","TaskModel","getTask","id","dispatch","getState","response","get","data","error","push","pathname","addTask","task","post","updateTask","put","removeTask","delete","selectTask","tasksApp","taskSlice","name","initialState","reducers","newTask","state","action","type","payload","resetTask","extraReducers","pending","fulfilled","actions","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/tasks/store/taskSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport history from '@history';\r\nimport SectionModel from '../model/SectionModel';\r\nimport TaskModel from '../model/TaskModel';\r\n\r\nexport const getTask = createAsyncThunk(\r\n  'tasksApp/task/getTask',\r\n  async (id, { dispatch, getState }) => {\r\n    try {\r\n      const response = await axios.get(`/api/tasks/${id}`);\r\n\r\n      const data = await response.data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      history.push({ pathname: `/apps/tasks` });\r\n\r\n      return null;\r\n    }\r\n  }\r\n);\r\n\r\nexport const addTask = createAsyncThunk(\r\n  'tasksApp/tasks/addTask',\r\n  async (task, { dispatch, getState }) => {\r\n    const response = await axios.post('/api/tasks', task);\r\n\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const updateTask = createAsyncThunk(\r\n  'tasksApp/tasks/updateTask',\r\n  async (task, { dispatch, getState }) => {\r\n    const response = await axios.put(`/api/tasks/${task.id}`, task);\r\n\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const removeTask = createAsyncThunk(\r\n  'tasksApp/tasks/removeTask',\r\n  async (id, { dispatch, getState }) => {\r\n    const response = await axios.delete(`/api/tasks/${id}`);\r\n\r\n    await response.data;\r\n\r\n    return id;\r\n  }\r\n);\r\n\r\nexport const selectTask = ({ tasksApp }) => tasksApp.task;\r\n\r\nconst taskSlice = createSlice({\r\n  name: 'tasksApp/task',\r\n  initialState: null,\r\n  reducers: {\r\n    newTask: (state, action) => {\r\n      const type = action.payload;\r\n      if (type === 'section') {\r\n        return SectionModel();\r\n      }\r\n      if (type === 'task') {\r\n        return TaskModel();\r\n      }\r\n      return null;\r\n    },\r\n    resetTask: () => null,\r\n  },\r\n  extraReducers: {\r\n    [getTask.pending]: (state, action) => null,\r\n    [getTask.fulfilled]: (state, action) => action.payload,\r\n    [updateTask.fulfilled]: (state, action) => action.payload,\r\n    [removeTask.fulfilled]: (state, action) => null,\r\n  },\r\n});\r\n\r\nexport const { resetTask, newTask } = taskSlice.actions;\r\n\r\nexport default taskSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}