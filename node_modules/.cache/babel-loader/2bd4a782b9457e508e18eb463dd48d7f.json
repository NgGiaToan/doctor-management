{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject;import*as Prism from'prismjs';import{memo,useCallback,useEffect,useRef,useState}from'react';import'./prism-languages';import{styled}from'@mui/material/styles';import clsx from'clsx';import{jsx as _jsx}from\"react/jsx-runtime\";function FuseHighlight(props){var highlight=useCallback(function(){Prism.highlightElement(domNode.current,props.async);},[props.async]);var trimCode=useCallback(function(){var sourceString=props.children;if(typeof sourceString==='object'&&sourceString.default){sourceString=sourceString.default;}// Split the source into lines\nvar sourceLines=sourceString.split('\\n');// Remove the first and the last line of the source\n// code if they are blank lines. This way, the html\n// can be formatted properly while using fuse-highlight\n// component\nif(!sourceLines[0].trim()){sourceLines.shift();}if(!sourceLines[sourceLines.length-1].trim()){sourceLines.pop();}// Find the first non-whitespace char index in\n// the first line of the source code\nvar indexOfFirstChar=sourceLines[0].search(/\\S|$/);// Generate the trimmed source\nvar sourceRaw='';// Iterate through all the lines\nsourceLines.forEach(function(line,index){// Trim the beginning white space depending on the index\n// and concat the source code\nsourceRaw+=line.substr(indexOfFirstChar,line.length);// If it's not the last line...\nif(index!==sourceLines.length-1){// Add a line break at the end\nsourceRaw=\"\".concat(sourceRaw,\"\\n\");}});return sourceRaw;},[props.children]);var domNode=useRef(null);var _useState=useState(trimCode()),_useState2=_slicedToArray(_useState,2),source=_useState2[0],setSource=_useState2[1];useEffect(function(){setSource(trimCode());},[trimCode]);useEffect(function(){highlight();},[highlight,source]);var className=props.className,Wrapper=props.component;return/*#__PURE__*/_jsx(Wrapper,{ref:domNode,className:clsx('border',className),children:source});}FuseHighlight.defaultProps={component:'code'};export default/*#__PURE__*/memo(styled(FuseHighlight)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\"]))));","map":null,"metadata":{},"sourceType":"module"}