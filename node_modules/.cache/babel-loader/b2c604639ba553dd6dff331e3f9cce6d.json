{"ast":null,"code":"import _ from '@lodash';\nimport mockApi from '../mock-api.json';\nimport mock from '../mock';\nconst faqsDB = mockApi.components.examples.help_center_faqs.value;\nconst faqCategoriesDB = mockApi.components.examples.help_center_faq_categories.value;\nconst guidesDB = mockApi.components.examples.help_center_guides.value;\nconst guideCategoriesDB = mockApi.components.examples.help_center_guide_categories.value;\nconst guideContent = mockApi.components.examples.help_center_guide_content.value;\nmock.onGet('/api/help-center/faqs').reply(config => {\n  return [200, faqsDB];\n});\nmock.onGet(/\\/api\\/help-center\\/faqs\\/[^]+/).reply(_ref => {\n  let {\n    url,\n    data\n  } = _ref;\n  const {\n    categorySlug\n  } = url.match(/\\/api\\/help-center\\/faqs\\/(?<categorySlug>[^/]+)/).groups;\n\n  const category = _.find(faqCategoriesDB, {\n    slug: categorySlug\n  });\n\n  return [200, _.filter(faqsDB, {\n    categoryId: category.id\n  })];\n});\nmock.onGet('/api/help-center/faqs/categories').reply(config => {\n  return [200, faqCategoriesDB];\n});\nmock.onGet('/api/help-center/guides').reply(config => {\n  return [200, guidesDB];\n});\nmock.onGet(/\\/api\\/help-center\\/guides\\/[^/]+(?!.)/).reply(_ref2 => {\n  let {\n    url,\n    data\n  } = _ref2;\n  const {\n    categorySlug\n  } = url.match(/\\/api\\/help-center\\/guides\\/(?<categorySlug>[^/]+)/).groups;\n\n  const category = _.find(guideCategoriesDB, {\n    slug: categorySlug\n  });\n\n  return [200, _.filter(guidesDB, {\n    categoryId: category.id\n  })];\n});\nmock.onGet(/\\/api\\/help-center\\/guides\\/[^/]+\\/[^/]+/).reply(_ref3 => {\n  let {\n    url,\n    data\n  } = _ref3;\n  const {\n    categorySlug,\n    guideSlug\n  } = url.match(/\\/api\\/help-center\\/guides\\/(?<categorySlug>[^/]+)\\/(?<guideSlug>[^/]+)/).groups;\n  return [200, { ..._.find(guidesDB, {\n      slug: guideSlug\n    }),\n    content: guideContent\n  }];\n});\nmock.onGet('/api/help-center/guides/categories').reply(config => {\n  return [200, guideCategoriesDB];\n});","map":{"version":3,"names":["_","mockApi","mock","faqsDB","components","examples","help_center_faqs","value","faqCategoriesDB","help_center_faq_categories","guidesDB","help_center_guides","guideCategoriesDB","help_center_guide_categories","guideContent","help_center_guide_content","onGet","reply","config","url","data","categorySlug","match","groups","category","find","slug","filter","categoryId","id","guideSlug","content"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/help-center-api.js"],"sourcesContent":["import _ from '@lodash';\r\nimport mockApi from '../mock-api.json';\r\nimport mock from '../mock';\r\n\r\nconst faqsDB = mockApi.components.examples.help_center_faqs.value;\r\nconst faqCategoriesDB = mockApi.components.examples.help_center_faq_categories.value;\r\n\r\nconst guidesDB = mockApi.components.examples.help_center_guides.value;\r\nconst guideCategoriesDB = mockApi.components.examples.help_center_guide_categories.value;\r\nconst guideContent = mockApi.components.examples.help_center_guide_content.value;\r\n\r\nmock.onGet('/api/help-center/faqs').reply((config) => {\r\n  return [200, faqsDB];\r\n});\r\nmock.onGet(/\\/api\\/help-center\\/faqs\\/[^]+/).reply(({ url, data }) => {\r\n  const { categorySlug } = url.match(/\\/api\\/help-center\\/faqs\\/(?<categorySlug>[^/]+)/).groups;\r\n  const category = _.find(faqCategoriesDB, { slug: categorySlug });\r\n\r\n  return [200, _.filter(faqsDB, { categoryId: category.id })];\r\n});\r\n\r\nmock.onGet('/api/help-center/faqs/categories').reply((config) => {\r\n  return [200, faqCategoriesDB];\r\n});\r\n\r\nmock.onGet('/api/help-center/guides').reply((config) => {\r\n  return [200, guidesDB];\r\n});\r\n\r\nmock.onGet(/\\/api\\/help-center\\/guides\\/[^/]+(?!.)/).reply(({ url, data }) => {\r\n  const { categorySlug } = url.match(/\\/api\\/help-center\\/guides\\/(?<categorySlug>[^/]+)/).groups;\r\n  const category = _.find(guideCategoriesDB, { slug: categorySlug });\r\n\r\n  return [200, _.filter(guidesDB, { categoryId: category.id })];\r\n});\r\n\r\nmock.onGet(/\\/api\\/help-center\\/guides\\/[^/]+\\/[^/]+/).reply(({ url, data }) => {\r\n  const { categorySlug, guideSlug } = url.match(\r\n    /\\/api\\/help-center\\/guides\\/(?<categorySlug>[^/]+)\\/(?<guideSlug>[^/]+)/\r\n  ).groups;\r\n\r\n  return [200, { ..._.find(guidesDB, { slug: guideSlug }), content: guideContent }];\r\n});\r\n\r\nmock.onGet('/api/help-center/guides/categories').reply((config) => {\r\n  return [200, guideCategoriesDB];\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}