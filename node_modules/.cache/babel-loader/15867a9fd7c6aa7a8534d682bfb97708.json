{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\theme-layouts\\\\shared-components\\\\notificationPanel\\\\NotificationPanel.js\",\n    _s = $RefreshSig$();\n\nimport FuseScrollbars from '@fuse/core/FuseScrollbars';\nimport { styled } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Typography from '@mui/material/Typography';\nimport withReducer from 'app/store/withReducer';\nimport { useSnackbar } from 'notistack';\nimport { memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport Button from '@mui/material/Button';\nimport NotificationTemplate from 'app/theme-layouts/shared-components/notificationPanel/NotificationTemplate';\nimport NotificationModel from './model/NotificationModel';\nimport NotificationCard from './NotificationCard';\nimport { addNotification, dismissAll, dismissItem, getNotifications, selectNotifications } from './store/dataSlice';\nimport reducer from './store';\nimport { closeNotificationPanel, selectNotificationPanelState, toggleNotificationPanel } from './store/stateSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& .MuiDrawer-paper': {\n      backgroundColor: theme.palette.background.default,\n      width: 320\n    }\n  };\n});\n_c = StyledSwipeableDrawer;\n\nfunction NotificationPanel(props) {\n  _s();\n\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const state = useSelector(selectNotificationPanelState);\n  const notifications = useSelector(selectNotifications);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    /*\r\n    Get Notifications from db\r\n    */\n    dispatch(getNotifications());\n  }, [dispatch]);\n  useEffect(() => {\n    if (state) {\n      dispatch(closeNotificationPanel());\n    } // eslint-disable-next-line\n\n  }, [location, dispatch]);\n\n  function handleClose() {\n    dispatch(closeNotificationPanel());\n  }\n\n  function handleDismiss(id) {\n    dispatch(dismissItem(id));\n  }\n\n  function handleDismissAll() {\n    dispatch(dismissAll());\n  }\n\n  function demoNotification() {\n    const item = NotificationModel({\n      title: 'Great Job! this is awesome.'\n    });\n    enqueueSnackbar(item.title, {\n      key: item.id,\n      // autoHideDuration: 3000,\n      content: () => /*#__PURE__*/_jsxDEV(NotificationTemplate, {\n        item: item,\n        onClose: () => {\n          closeSnackbar(item.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    });\n    dispatch(addNotification(item));\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledSwipeableDrawer, {\n    open: state,\n    anchor: \"right\",\n    onOpen: ev => {},\n    onClose: ev => dispatch(toggleNotificationPanel()),\n    disableSwipeToOpen: true,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"m-4 absolute top-0 right-0 z-999\",\n      onClick: handleClose,\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n        color: \"action\",\n        children: \"heroicons-outline:x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(FuseScrollbars, {\n      className: \"p-16\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-end pt-136 mb-36\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: \"text-28 font-semibold leading-none\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"text-12 underline cursor-pointer\",\n            color: \"secondary\",\n            onClick: handleDismissAll,\n            children: \"dismiss all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), notifications.map(item => /*#__PURE__*/_jsxDEV(NotificationCard, {\n          className: \"mb-16\",\n          item: item,\n          onClose: handleDismiss\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 items-center justify-center p-16\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"text-24 text-center\",\n        color: \"text.secondary\",\n        children: \"There are no notifications for now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-16\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: demoNotification,\n        children: \"Create a notification example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotificationPanel, \"8obN1hvTuOuay0sFdZDdW8HCTOo=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useSelector, useSnackbar];\n});\n\n_c2 = NotificationPanel;\nexport default withReducer('notificationPanel', reducer)( /*#__PURE__*/memo(NotificationPanel));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSwipeableDrawer\");\n$RefreshReg$(_c2, \"NotificationPanel\");","map":{"version":3,"names":["FuseScrollbars","styled","IconButton","SwipeableDrawer","Typography","withReducer","useSnackbar","memo","useEffect","useDispatch","useSelector","useLocation","FuseSvgIcon","Button","NotificationTemplate","NotificationModel","NotificationCard","addNotification","dismissAll","dismissItem","getNotifications","selectNotifications","reducer","closeNotificationPanel","selectNotificationPanelState","toggleNotificationPanel","StyledSwipeableDrawer","theme","backgroundColor","palette","background","default","width","NotificationPanel","props","location","dispatch","state","notifications","enqueueSnackbar","closeSnackbar","handleClose","handleDismiss","id","handleDismissAll","demoNotification","item","title","key","content","ev","length","map"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/theme-layouts/shared-components/notificationPanel/NotificationPanel.js"],"sourcesContent":["import FuseScrollbars from '@fuse/core/FuseScrollbars';\r\nimport { styled } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Typography from '@mui/material/Typography';\r\nimport withReducer from 'app/store/withReducer';\r\nimport { useSnackbar } from 'notistack';\r\nimport { memo, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\nimport Button from '@mui/material/Button';\r\nimport NotificationTemplate from 'app/theme-layouts/shared-components/notificationPanel/NotificationTemplate';\r\nimport NotificationModel from './model/NotificationModel';\r\nimport NotificationCard from './NotificationCard';\r\nimport {\r\n  addNotification,\r\n  dismissAll,\r\n  dismissItem,\r\n  getNotifications,\r\n  selectNotifications,\r\n} from './store/dataSlice';\r\nimport reducer from './store';\r\nimport {\r\n  closeNotificationPanel,\r\n  selectNotificationPanelState,\r\n  toggleNotificationPanel,\r\n} from './store/stateSlice';\r\n\r\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)(({ theme }) => ({\r\n  '& .MuiDrawer-paper': {\r\n    backgroundColor: theme.palette.background.default,\r\n    width: 320,\r\n  },\r\n}));\r\n\r\nfunction NotificationPanel(props) {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(selectNotificationPanelState);\r\n  const notifications = useSelector(selectNotifications);\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    /*\r\n\t\tGet Notifications from db\r\n\t\t */\r\n    dispatch(getNotifications());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (state) {\r\n      dispatch(closeNotificationPanel());\r\n    }\r\n    // eslint-disable-next-line\r\n\t}, [location, dispatch]);\r\n\r\n  function handleClose() {\r\n    dispatch(closeNotificationPanel());\r\n  }\r\n\r\n  function handleDismiss(id) {\r\n    dispatch(dismissItem(id));\r\n  }\r\n  function handleDismissAll() {\r\n    dispatch(dismissAll());\r\n  }\r\n\r\n  function demoNotification() {\r\n    const item = NotificationModel({ title: 'Great Job! this is awesome.' });\r\n\r\n    enqueueSnackbar(item.title, {\r\n      key: item.id,\r\n      // autoHideDuration: 3000,\r\n      content: () => (\r\n        <NotificationTemplate\r\n          item={item}\r\n          onClose={() => {\r\n            closeSnackbar(item.id);\r\n          }}\r\n        />\r\n      ),\r\n    });\r\n\r\n    dispatch(addNotification(item));\r\n  }\r\n\r\n  return (\r\n    <StyledSwipeableDrawer\r\n      open={state}\r\n      anchor=\"right\"\r\n      onOpen={(ev) => {}}\r\n      onClose={(ev) => dispatch(toggleNotificationPanel())}\r\n      disableSwipeToOpen\r\n    >\r\n      <IconButton className=\"m-4 absolute top-0 right-0 z-999\" onClick={handleClose} size=\"large\">\r\n        <FuseSvgIcon color=\"action\">heroicons-outline:x</FuseSvgIcon>\r\n      </IconButton>\r\n      {notifications.length > 0 ? (\r\n        <FuseScrollbars className=\"p-16\">\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"flex justify-between items-end pt-136 mb-36\">\r\n              <Typography className=\"text-28 font-semibold leading-none\">Notifications</Typography>\r\n              <Typography\r\n                className=\"text-12 underline cursor-pointer\"\r\n                color=\"secondary\"\r\n                onClick={handleDismissAll}\r\n              >\r\n                dismiss all\r\n              </Typography>\r\n            </div>\r\n            {notifications.map((item) => (\r\n              <NotificationCard\r\n                key={item.id}\r\n                className=\"mb-16\"\r\n                item={item}\r\n                onClose={handleDismiss}\r\n              />\r\n            ))}\r\n          </div>\r\n        </FuseScrollbars>\r\n      ) : (\r\n        <div className=\"flex flex-1 items-center justify-center p-16\">\r\n          <Typography className=\"text-24 text-center\" color=\"text.secondary\">\r\n            There are no notifications for now.\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      <div className=\"flex items-center justify-center py-16\">\r\n        <Button size=\"small\" variant=\"outlined\" onClick={demoNotification}>\r\n          Create a notification example\r\n        </Button>\r\n      </div>\r\n    </StyledSwipeableDrawer>\r\n  );\r\n}\r\n\r\nexport default withReducer('notificationPanel', reducer)(memo(NotificationPanel));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}