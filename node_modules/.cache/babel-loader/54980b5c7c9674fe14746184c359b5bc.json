{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\apps\\\\scrumboard\\\\board\\\\dialogs\\\\card\\\\checklist\\\\CardChecklistName.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport * as yup from 'yup';\nimport _ from '@lodash';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\n/**\r\n * Form Validation Schema\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required('You must enter a title')\n});\n\nconst CardChecklistName = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(function CardChecklistName(props, ref) {\n  _s();\n\n  const [formOpen, setFormOpen] = useState(false);\n  const {\n    control,\n    formState,\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      name: props.name\n    },\n    resolver: yupResolver(schema)\n  });\n  const {\n    isValid,\n    dirtyFields,\n    errors\n  } = formState;\n  useEffect(() => {\n    if (!formOpen) {\n      reset({\n        name: props.name\n      });\n    }\n  }, [formOpen, reset, props.name]);\n  useImperativeHandle(ref, () => {\n    return {\n      openForm: handleOpenForm\n    };\n  });\n\n  function handleOpenForm(ev) {\n    ev.stopPropagation();\n    setFormOpen(true);\n  }\n\n  function handleCloseForm() {\n    setFormOpen(false);\n  }\n\n  function onSubmit(data) {\n    props.onNameChange(data.name);\n    handleCloseForm();\n  }\n\n  return formOpen ? /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleCloseForm,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            variant: \"outlined\",\n            margin: \"dense\",\n            autoFocus: true,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  type: \"submit\",\n                  disabled: _.isEmpty(dirtyFields) || !isValid,\n                  size: \"large\",\n                  children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n                    children: \"heroicons-outline:check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n    className: \"text-16 font-semibold cursor-pointer mx-8\",\n    onClick: handleOpenForm,\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}, \"njQvw8i1b0gXrJnYe6TSmABIXvY=\", false, function () {\n  return [useForm];\n})), \"njQvw8i1b0gXrJnYe6TSmABIXvY=\", false, function () {\n  return [useForm];\n});\n\n_c2 = CardChecklistName;\nexport default CardChecklistName;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardChecklistName$forwardRef\");\n$RefreshReg$(_c2, \"CardChecklistName\");","map":{"version":3,"names":["yupResolver","forwardRef","useEffect","useImperativeHandle","useState","Controller","useForm","ClickAwayListener","IconButton","InputAdornment","TextField","Typography","yup","_","FuseSvgIcon","schema","object","shape","name","string","required","CardChecklistName","props","ref","formOpen","setFormOpen","control","formState","handleSubmit","reset","mode","defaultValues","resolver","isValid","dirtyFields","errors","openForm","handleOpenForm","ev","stopPropagation","handleCloseForm","onSubmit","data","onNameChange","field","endAdornment","isEmpty"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/scrumboard/board/dialogs/card/checklist/CardChecklistName.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport * as yup from 'yup';\r\nimport _ from '@lodash';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\n\r\n/**\r\n * Form Validation Schema\r\n */\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required('You must enter a title'),\r\n});\r\n\r\nconst CardChecklistName = forwardRef(function CardChecklistName(props, ref) {\r\n  const [formOpen, setFormOpen] = useState(false);\r\n  const { control, formState, handleSubmit, reset } = useForm({\r\n    mode: 'onChange',\r\n    defaultValues: {\r\n      name: props.name,\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { isValid, dirtyFields, errors } = formState;\r\n\r\n  useEffect(() => {\r\n    if (!formOpen) {\r\n      reset({\r\n        name: props.name,\r\n      });\r\n    }\r\n  }, [formOpen, reset, props.name]);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      openForm: handleOpenForm,\r\n    };\r\n  });\r\n\r\n  function handleOpenForm(ev) {\r\n    ev.stopPropagation();\r\n    setFormOpen(true);\r\n  }\r\n\r\n  function handleCloseForm() {\r\n    setFormOpen(false);\r\n  }\r\n\r\n  function onSubmit(data) {\r\n    props.onNameChange(data.name);\r\n    handleCloseForm();\r\n  }\r\n\r\n  return formOpen ? (\r\n    <ClickAwayListener onClickAway={handleCloseForm}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              autoFocus\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      type=\"submit\"\r\n                      disabled={_.isEmpty(dirtyFields) || !isValid}\r\n                      size=\"large\"\r\n                    >\r\n                      <FuseSvgIcon>heroicons-outline:check</FuseSvgIcon>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </form>\r\n    </ClickAwayListener>\r\n  ) : (\r\n    <Typography className=\"text-16 font-semibold cursor-pointer mx-8\" onClick={handleOpenForm}>\r\n      {props.name}\r\n    </Typography>\r\n  );\r\n});\r\n\r\nexport default CardChecklistName;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}