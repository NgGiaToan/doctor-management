{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\toggle-button\\\\ToggleButtons.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButtons() {\n  _s();\n\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n    value: alignment,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"left\",\n      \"aria-label\": \"left aligned\",\n      children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"center\",\n      \"aria-label\": \"centered\",\n      children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"right\",\n      \"aria-label\": \"right aligned\",\n      children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"justify\",\n      \"aria-label\": \"justified\",\n      disabled: true,\n      children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleButtons, \"m4nEWrI40BpDk/1hzAomhAKLBEg=\");\n\n_c = ToggleButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtons\");","map":{"version":3,"names":["React","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","ToggleButton","ToggleButtonGroup","ToggleButtons","alignment","setAlignment","useState","handleAlignment","event","newAlignment"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/toggle-button/ToggleButtons.js"],"sourcesContent":["import * as React from 'react';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtons() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={alignment}\r\n      exclusive\r\n      onChange={handleAlignment}\r\n      aria-label=\"text alignment\"\r\n    >\r\n      <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n        <FormatAlignLeftIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"center\" aria-label=\"centered\">\r\n        <FormatAlignCenterIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n        <FormatAlignRightIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n        <FormatAlignJustifyIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAEA,eAAe,SAASC,aAAT,GAAyB;EAAA;;EACtC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAAe,MAAf,CAAlC;;EAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;IAC/CJ,YAAY,CAACI,YAAD,CAAZ;EACD,CAFD;;EAIA,oBACE,QAAC,iBAAD;IACE,KAAK,EAAEL,SADT;IAEE,SAAS,MAFX;IAGE,QAAQ,EAAEG,eAHZ;IAIE,cAAW,gBAJb;IAAA,wBAME,QAAC,YAAD;MAAc,KAAK,EAAC,MAApB;MAA2B,cAAW,cAAtC;MAAA,uBACE,QAAC,mBAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF,eASE,QAAC,YAAD;MAAc,KAAK,EAAC,QAApB;MAA6B,cAAW,UAAxC;MAAA,uBACE,QAAC,qBAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF,eAYE,QAAC,YAAD;MAAc,KAAK,EAAC,OAApB;MAA4B,cAAW,eAAvC;MAAA,uBACE,QAAC,oBAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF,eAeE,QAAC,YAAD;MAAc,KAAK,EAAC,SAApB;MAA8B,cAAW,WAAzC;MAAqD,QAAQ,MAA7D;MAAA,uBACE,QAAC,sBAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GA5BuBJ,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}