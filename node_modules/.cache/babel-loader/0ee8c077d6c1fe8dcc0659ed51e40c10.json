{"ast":null,"code":"import _objectSpread from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _defineProperty from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createEntityAdapter,createSelector,createSlice}from'@reduxjs/toolkit';import axios from'axios';import _ from'@lodash';import{selectGuideCategories}from'./guideCategoriesSlice';export var getGuides=createAsyncThunk('helpCenterApp/guides/getGuides',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(categorySlug){var url,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=categorySlug?\"/api/help-center/guides/\".concat(categorySlug):'/api/help-center/guides';_context.next=3;return axios.get(url);case 3:response=_context.sent;_context.next=6;return response.data;case 6:data=_context.sent;return _context.abrupt(\"return\",data);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());var guidesAdapter=createEntityAdapter({});var _guidesAdapter$getSel=guidesAdapter.getSelectors(function(state){return state.helpCenterApp.guides;}),selectGuides=_guidesAdapter$getSel.selectAll,selectGuideById=_guidesAdapter$getSel.selectById;export{selectGuides,selectGuideById};var guidesSlice=createSlice({name:'helpCenterApp/guides',initialState:guidesAdapter.getInitialState({}),reducers:{},extraReducers:_defineProperty({},getGuides.fulfilled,guidesAdapter.setAll)});export var selectGroupedGuides=createSelector([selectGuides,selectGuideCategories],function(guides,categories){return categories.map(function(category){return _objectSpread(_objectSpread({},category),{},{guides:_.filter(guides,{categoryId:category.id})});});});export default guidesSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}