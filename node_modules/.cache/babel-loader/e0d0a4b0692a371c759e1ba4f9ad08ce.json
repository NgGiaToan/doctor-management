{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathExcludesPatterns = void 0;\n\nvar PathExcludesPatterns = function PathExcludesPatterns(_ref) {\n  var patterns = _ref.patterns;\n  return {\n    PathItem: function PathItem(_path, _ref2) {\n      var report = _ref2.report,\n          key = _ref2.key,\n          location = _ref2.location;\n      if (!patterns) throw new Error(\"Parameter \\\"patterns\\\" is not provided for \\\"path-excludes-patterns\\\" rule\");\n      var pathKey = key.toString();\n\n      if (pathKey.startsWith('/')) {\n        var matches = patterns.filter(function (pattern) {\n          return pathKey.match(pattern);\n        });\n\n        var _iterator = _createForOfIteratorHelper(matches),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var match = _step.value;\n            report({\n              message: \"path `\".concat(pathKey, \"` should not match regex pattern: `\").concat(match, \"`\"),\n              location: location.key()\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  };\n};\n\nexports.PathExcludesPatterns = PathExcludesPatterns;","map":null,"metadata":{},"sourceType":"script"}