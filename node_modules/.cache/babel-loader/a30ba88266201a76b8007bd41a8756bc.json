{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegistryApi = void 0;\n\nconst node_fetch_1 = require(\"node-fetch\");\n\nconst config_1 = require(\"../config/config\");\n\nconst utils_1 = require(\"../utils\");\n\nconst version = require('../../package.json').version;\n\nclass RegistryApi {\n  constructor(accessTokens, region) {\n    this.accessTokens = accessTokens;\n    this.region = region;\n  }\n\n  get accessToken() {\n    return utils_1.isNotEmptyObject(this.accessTokens) && this.accessTokens[this.region];\n  }\n\n  getBaseUrl() {\n    let region = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config_1.DEFAULT_REGION;\n    return `https://api.${config_1.DOMAINS[region]}/registry`;\n  }\n\n  setAccessTokens(accessTokens) {\n    this.accessTokens = accessTokens;\n    return this;\n  }\n\n  request() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let region = arguments.length > 2 ? arguments[2] : undefined;\n    return __awaiter(this, void 0, void 0, function* () {\n      const headers = Object.assign({}, options.headers || {}, {\n        'x-redocly-cli-version': version\n      });\n\n      if (!headers.hasOwnProperty('authorization')) {\n        throw new Error('Unauthorized');\n      }\n\n      const response = yield node_fetch_1.default(`${this.getBaseUrl(region)}${path}`, Object.assign({}, options, {\n        headers\n      }));\n\n      if (response.status === 401) {\n        throw new Error('Unauthorized');\n      }\n\n      if (response.status === 404) {\n        const body = yield response.json();\n        throw new Error(body.code);\n      }\n\n      return response;\n    });\n  }\n\n  authStatus(accessToken, region) {\n    let verbose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const response = yield this.request('', {\n          headers: {\n            authorization: accessToken\n          }\n        }, region);\n        return yield response.json();\n      } catch (error) {\n        if (verbose) {\n          console.log(error);\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  prepareFileUpload(_ref) {\n    let {\n      organizationId,\n      name,\n      version,\n      filesHash,\n      filename,\n      isUpsert\n    } = _ref;\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield this.request(`/${organizationId}/${name}/${version}/prepare-file-upload`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          authorization: this.accessToken\n        },\n        body: JSON.stringify({\n          filesHash,\n          filename,\n          isUpsert\n        })\n      }, this.region);\n\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error('Could not prepare file upload');\n    });\n  }\n\n  pushApi(_ref2) {\n    let {\n      organizationId,\n      name,\n      version,\n      rootFilePath,\n      filePaths,\n      branch,\n      isUpsert,\n      isPublic\n    } = _ref2;\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield this.request(`/${organizationId}/${name}/${version}`, {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json',\n          authorization: this.accessToken\n        },\n        body: JSON.stringify({\n          rootFilePath,\n          filePaths,\n          branch,\n          isUpsert,\n          isPublic\n        })\n      }, this.region);\n\n      if (response.ok) {\n        return;\n      }\n\n      throw new Error('Could not push api');\n    });\n  }\n\n}\n\nexports.RegistryApi = RegistryApi;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","RegistryApi","node_fetch_1","require","config_1","utils_1","version","constructor","accessTokens","region","accessToken","isNotEmptyObject","getBaseUrl","DEFAULT_REGION","DOMAINS","setAccessTokens","request","path","options","headers","assign","hasOwnProperty","Error","response","default","status","body","json","code","authStatus","verbose","authorization","error","console","log","prepareFileUpload","organizationId","name","filesHash","filename","isUpsert","method","JSON","stringify","ok","pushApi","rootFilePath","filePaths","branch","isPublic"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/redocly/registry-api.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegistryApi = void 0;\nconst node_fetch_1 = require(\"node-fetch\");\nconst config_1 = require(\"../config/config\");\nconst utils_1 = require(\"../utils\");\nconst version = require('../../package.json').version;\nclass RegistryApi {\n    constructor(accessTokens, region) {\n        this.accessTokens = accessTokens;\n        this.region = region;\n    }\n    get accessToken() {\n        return utils_1.isNotEmptyObject(this.accessTokens) && this.accessTokens[this.region];\n    }\n    getBaseUrl(region = config_1.DEFAULT_REGION) {\n        return `https://api.${config_1.DOMAINS[region]}/registry`;\n    }\n    setAccessTokens(accessTokens) {\n        this.accessTokens = accessTokens;\n        return this;\n    }\n    request(path = '', options = {}, region) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const headers = Object.assign({}, options.headers || {}, { 'x-redocly-cli-version': version });\n            if (!headers.hasOwnProperty('authorization')) {\n                throw new Error('Unauthorized');\n            }\n            const response = yield node_fetch_1.default(`${this.getBaseUrl(region)}${path}`, Object.assign({}, options, { headers }));\n            if (response.status === 401) {\n                throw new Error('Unauthorized');\n            }\n            if (response.status === 404) {\n                const body = yield response.json();\n                throw new Error(body.code);\n            }\n            return response;\n        });\n    }\n    authStatus(accessToken, region, verbose = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield this.request('', { headers: { authorization: accessToken } }, region);\n                return yield response.json();\n            }\n            catch (error) {\n                if (verbose) {\n                    console.log(error);\n                }\n                throw error;\n            }\n        });\n    }\n    prepareFileUpload({ organizationId, name, version, filesHash, filename, isUpsert, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.request(`/${organizationId}/${name}/${version}/prepare-file-upload`, {\n                method: 'POST',\n                headers: {\n                    'content-type': 'application/json',\n                    authorization: this.accessToken,\n                },\n                body: JSON.stringify({\n                    filesHash,\n                    filename,\n                    isUpsert,\n                }),\n            }, this.region);\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Could not prepare file upload');\n        });\n    }\n    pushApi({ organizationId, name, version, rootFilePath, filePaths, branch, isUpsert, isPublic, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.request(`/${organizationId}/${name}/${version}`, {\n                method: 'PUT',\n                headers: {\n                    'content-type': 'application/json',\n                    authorization: this.accessToken,\n                },\n                body: JSON.stringify({\n                    rootFilePath,\n                    filePaths,\n                    branch,\n                    isUpsert,\n                    isPublic,\n                }),\n            }, this.region);\n            if (response.ok) {\n                return;\n            }\n            throw new Error('Could not push api');\n        });\n    }\n}\nexports.RegistryApi = RegistryApi;\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IAAE,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAAEA,OAAO,CAACD,KAAD,CAAP;IAAiB,CAA5C,CAApC;EAAoF;;EAC5G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACvD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MAA8B,CAApC,CAAqC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC3F,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MAAkC,CAAxC,CAAyC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC9F,SAASF,IAAT,CAAcI,MAAd,EAAsB;MAAEA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IAAsF;;IAC9GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACH,CALM,CAAP;AAMH,CARD;;AASAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEf,KAAK,EAAE;AAAT,CAA7C;AACAe,OAAO,CAACC,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,YAAD,CAA5B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,oBAAD,CAAP,CAA8BG,OAA9C;;AACA,MAAML,WAAN,CAAkB;EACdM,WAAW,CAACC,YAAD,EAAeC,MAAf,EAAuB;IAC9B,KAAKD,YAAL,GAAoBA,YAApB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACc,IAAXC,WAAW,GAAG;IACd,OAAOL,OAAO,CAACM,gBAAR,CAAyB,KAAKH,YAA9B,KAA+C,KAAKA,YAAL,CAAkB,KAAKC,MAAvB,CAAtD;EACH;;EACDG,UAAU,GAAmC;IAAA,IAAlCH,MAAkC,uEAAzBL,QAAQ,CAACS,cAAgB;IACzC,OAAQ,eAAcT,QAAQ,CAACU,OAAT,CAAiBL,MAAjB,CAAyB,WAA/C;EACH;;EACDM,eAAe,CAACP,YAAD,EAAe;IAC1B,KAAKA,YAAL,GAAoBA,YAApB;IACA,OAAO,IAAP;EACH;;EACDQ,OAAO,GAAkC;IAAA,IAAjCC,IAAiC,uEAA1B,EAA0B;IAAA,IAAtBC,OAAsB,uEAAZ,EAAY;IAAA,IAART,MAAQ;IACrC,OAAO9B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,MAAMwC,OAAO,GAAGrB,MAAM,CAACsB,MAAP,CAAc,EAAd,EAAkBF,OAAO,CAACC,OAAR,IAAmB,EAArC,EAAyC;QAAE,yBAAyBb;MAA3B,CAAzC,CAAhB;;MACA,IAAI,CAACa,OAAO,CAACE,cAAR,CAAuB,eAAvB,CAAL,EAA8C;QAC1C,MAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;MACH;;MACD,MAAMC,QAAQ,GAAG,MAAMrB,YAAY,CAACsB,OAAb,CAAsB,GAAE,KAAKZ,UAAL,CAAgBH,MAAhB,CAAwB,GAAEQ,IAAK,EAAvD,EAA0DnB,MAAM,CAACsB,MAAP,CAAc,EAAd,EAAkBF,OAAlB,EAA2B;QAAEC;MAAF,CAA3B,CAA1D,CAAvB;;MACA,IAAII,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;QACzB,MAAM,IAAIH,KAAJ,CAAU,cAAV,CAAN;MACH;;MACD,IAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;QACzB,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;QACA,MAAM,IAAIL,KAAJ,CAAUI,IAAI,CAACE,IAAf,CAAN;MACH;;MACD,OAAOL,QAAP;IACH,CAde,CAAhB;EAeH;;EACDM,UAAU,CAACnB,WAAD,EAAcD,MAAd,EAAuC;IAAA,IAAjBqB,OAAiB,uEAAP,KAAO;IAC7C,OAAOnD,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAI;QACA,MAAM4C,QAAQ,GAAG,MAAM,KAAKP,OAAL,CAAa,EAAb,EAAiB;UAAEG,OAAO,EAAE;YAAEY,aAAa,EAAErB;UAAjB;QAAX,CAAjB,EAA8DD,MAA9D,CAAvB;QACA,OAAO,MAAMc,QAAQ,CAACI,IAAT,EAAb;MACH,CAHD,CAIA,OAAOK,KAAP,EAAc;QACV,IAAIF,OAAJ,EAAa;UACTG,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACH;;QACD,MAAMA,KAAN;MACH;IACJ,CAXe,CAAhB;EAYH;;EACDG,iBAAiB,OAAoE;IAAA,IAAnE;MAAEC,cAAF;MAAkBC,IAAlB;MAAwB/B,OAAxB;MAAiCgC,SAAjC;MAA4CC,QAA5C;MAAsDC;IAAtD,CAAmE;IACjF,OAAO7D,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,MAAM4C,QAAQ,GAAG,MAAM,KAAKP,OAAL,CAAc,IAAGoB,cAAe,IAAGC,IAAK,IAAG/B,OAAQ,sBAAnD,EAA0E;QAC7FmC,MAAM,EAAE,MADqF;QAE7FtB,OAAO,EAAE;UACL,gBAAgB,kBADX;UAELY,aAAa,EAAE,KAAKrB;QAFf,CAFoF;QAM7FgB,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAe;UACjBL,SADiB;UAEjBC,QAFiB;UAGjBC;QAHiB,CAAf;MANuF,CAA1E,EAWpB,KAAK/B,MAXe,CAAvB;;MAYA,IAAIc,QAAQ,CAACqB,EAAb,EAAiB;QACb,OAAOrB,QAAQ,CAACI,IAAT,EAAP;MACH;;MACD,MAAM,IAAIL,KAAJ,CAAU,+BAAV,CAAN;IACH,CAjBe,CAAhB;EAkBH;;EACDuB,OAAO,QAA0F;IAAA,IAAzF;MAAET,cAAF;MAAkBC,IAAlB;MAAwB/B,OAAxB;MAAiCwC,YAAjC;MAA+CC,SAA/C;MAA0DC,MAA1D;MAAkER,QAAlE;MAA4ES;IAA5E,CAAyF;IAC7F,OAAOtE,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,MAAM4C,QAAQ,GAAG,MAAM,KAAKP,OAAL,CAAc,IAAGoB,cAAe,IAAGC,IAAK,IAAG/B,OAAQ,EAAnD,EAAsD;QACzEmC,MAAM,EAAE,KADiE;QAEzEtB,OAAO,EAAE;UACL,gBAAgB,kBADX;UAELY,aAAa,EAAE,KAAKrB;QAFf,CAFgE;QAMzEgB,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAe;UACjBG,YADiB;UAEjBC,SAFiB;UAGjBC,MAHiB;UAIjBR,QAJiB;UAKjBS;QALiB,CAAf;MANmE,CAAtD,EAapB,KAAKxC,MAbe,CAAvB;;MAcA,IAAIc,QAAQ,CAACqB,EAAb,EAAiB;QACb;MACH;;MACD,MAAM,IAAItB,KAAJ,CAAU,oBAAV,CAAN;IACH,CAnBe,CAAhB;EAoBH;;AAvFa;;AAyFlBtB,OAAO,CAACC,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}