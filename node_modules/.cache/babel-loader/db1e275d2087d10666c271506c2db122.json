{"ast":null,"code":"import FuseUtils from '@fuse/utils';\nimport AppContext from 'app/AppContext';\nimport { Component } from 'react';\nimport { matchRoutes } from 'react-router-dom';\nimport withRouter from '@fuse/core/withRouter';\nimport history from '@history';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet loginRedirectUrl = null;\n\nclass FuseAuthorization extends Component {\n  constructor(props, context) {\n    super(props);\n    const {\n      routes\n    } = context;\n    this.state = {\n      accessGranted: true,\n      routes\n    };\n    this.defaultLoginRedirectUrl = props.loginRedirectUrl || '/';\n  }\n\n  componentDidMount() {\n    if (!this.state.accessGranted) {\n      this.redirectRoute();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.accessGranted !== this.state.accessGranted;\n  }\n\n  componentDidUpdate() {\n    if (!this.state.accessGranted) {\n      this.redirectRoute();\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      location,\n      userRole\n    } = props;\n    const {\n      pathname\n    } = location;\n    const matchedRoutes = matchRoutes(state.routes, pathname);\n    const matched = matchedRoutes ? matchedRoutes[0] : false;\n    return {\n      accessGranted: matched ? FuseUtils.hasPermission(matched.route.auth, userRole) : true\n    };\n  }\n\n  redirectRoute() {\n    const {\n      location,\n      userRole\n    } = this.props;\n    const {\n      pathname\n    } = location;\n    const redirectUrl = loginRedirectUrl || this.defaultLoginRedirectUrl;\n    /*\r\n        User is guest\r\n        Redirect to Login Page\r\n        */\n\n    if (!userRole || userRole.length === 0) {\n      setTimeout(() => history.push('/sign-in'), 0);\n      loginRedirectUrl = pathname;\n    } else {\n      /*\r\n        User is member\r\n        User must be on unAuthorized page or just logged in\r\n        Redirect to dashboard or loginRedirectUrl\r\n        */\n      setTimeout(() => history.push(redirectUrl), 0);\n      loginRedirectUrl = this.defaultLoginRedirectUrl;\n    }\n  }\n\n  render() {\n    // console.info('Fuse Authorization rendered', this.state.accessGranted);\n    return this.state.accessGranted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.children\n    }, void 0, false) : null;\n  }\n\n}\n\nFuseAuthorization.contextType = AppContext;\nexport default _c = withRouter(FuseAuthorization);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["FuseUtils","AppContext","Component","matchRoutes","withRouter","history","loginRedirectUrl","FuseAuthorization","constructor","props","context","routes","state","accessGranted","defaultLoginRedirectUrl","componentDidMount","redirectRoute","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","getDerivedStateFromProps","location","userRole","pathname","matchedRoutes","matched","hasPermission","route","auth","redirectUrl","length","setTimeout","push","render","children","contextType"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@fuse/core/FuseAuthorization/FuseAuthorization.js"],"sourcesContent":["import FuseUtils from '@fuse/utils';\r\nimport AppContext from 'app/AppContext';\r\nimport { Component } from 'react';\r\nimport { matchRoutes } from 'react-router-dom';\r\nimport withRouter from '@fuse/core/withRouter';\r\nimport history from '@history';\r\n\r\nlet loginRedirectUrl = null;\r\n\r\nclass FuseAuthorization extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    const { routes } = context;\r\n    this.state = {\r\n      accessGranted: true,\r\n      routes,\r\n    };\r\n    this.defaultLoginRedirectUrl = props.loginRedirectUrl || '/';\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.accessGranted) {\r\n      this.redirectRoute();\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextState.accessGranted !== this.state.accessGranted;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.state.accessGranted) {\r\n      this.redirectRoute();\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { location, userRole } = props;\r\n    const { pathname } = location;\r\n\r\n    const matchedRoutes = matchRoutes(state.routes, pathname);\r\n\r\n    const matched = matchedRoutes ? matchedRoutes[0] : false;\r\n    return {\r\n      accessGranted: matched ? FuseUtils.hasPermission(matched.route.auth, userRole) : true,\r\n    };\r\n  }\r\n\r\n  redirectRoute() {\r\n    const { location, userRole } = this.props;\r\n    const { pathname } = location;\r\n    const redirectUrl = loginRedirectUrl || this.defaultLoginRedirectUrl;\r\n\r\n    /*\r\n        User is guest\r\n        Redirect to Login Page\r\n        */\r\n    if (!userRole || userRole.length === 0) {\r\n      setTimeout(() => history.push('/sign-in'), 0);\r\n      loginRedirectUrl = pathname;\r\n    } else {\r\n      /*\r\n        User is member\r\n        User must be on unAuthorized page or just logged in\r\n        Redirect to dashboard or loginRedirectUrl\r\n        */\r\n      setTimeout(() => history.push(redirectUrl), 0);\r\n      loginRedirectUrl = this.defaultLoginRedirectUrl;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.info('Fuse Authorization rendered', this.state.accessGranted);\r\n    return this.state.accessGranted ? <>{this.props.children}</> : null;\r\n  }\r\n}\r\n\r\nFuseAuthorization.contextType = AppContext;\r\n\r\nexport default withRouter(FuseAuthorization);\r\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,UAApB;;;AAEA,IAAIC,gBAAgB,GAAG,IAAvB;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;EACxCM,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;IAC1B,MAAMD,KAAN;IACA,MAAM;MAAEE;IAAF,IAAaD,OAAnB;IACA,KAAKE,KAAL,GAAa;MACXC,aAAa,EAAE,IADJ;MAEXF;IAFW,CAAb;IAIA,KAAKG,uBAAL,GAA+BL,KAAK,CAACH,gBAAN,IAA0B,GAAzD;EACD;;EAEDS,iBAAiB,GAAG;IAClB,IAAI,CAAC,KAAKH,KAAL,CAAWC,aAAhB,EAA+B;MAC7B,KAAKG,aAAL;IACD;EACF;;EAEDC,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;IAC1C,OAAOA,SAAS,CAACN,aAAV,KAA4B,KAAKD,KAAL,CAAWC,aAA9C;EACD;;EAEDO,kBAAkB,GAAG;IACnB,IAAI,CAAC,KAAKR,KAAL,CAAWC,aAAhB,EAA+B;MAC7B,KAAKG,aAAL;IACD;EACF;;EAE8B,OAAxBK,wBAAwB,CAACZ,KAAD,EAAQG,KAAR,EAAe;IAC5C,MAAM;MAAEU,QAAF;MAAYC;IAAZ,IAAyBd,KAA/B;IACA,MAAM;MAAEe;IAAF,IAAeF,QAArB;IAEA,MAAMG,aAAa,GAAGtB,WAAW,CAACS,KAAK,CAACD,MAAP,EAAea,QAAf,CAAjC;IAEA,MAAME,OAAO,GAAGD,aAAa,GAAGA,aAAa,CAAC,CAAD,CAAhB,GAAsB,KAAnD;IACA,OAAO;MACLZ,aAAa,EAAEa,OAAO,GAAG1B,SAAS,CAAC2B,aAAV,CAAwBD,OAAO,CAACE,KAAR,CAAcC,IAAtC,EAA4CN,QAA5C,CAAH,GAA2D;IAD5E,CAAP;EAGD;;EAEDP,aAAa,GAAG;IACd,MAAM;MAAEM,QAAF;MAAYC;IAAZ,IAAyB,KAAKd,KAApC;IACA,MAAM;MAAEe;IAAF,IAAeF,QAArB;IACA,MAAMQ,WAAW,GAAGxB,gBAAgB,IAAI,KAAKQ,uBAA7C;IAEA;AACJ;AACA;AACA;;IACI,IAAI,CAACS,QAAD,IAAaA,QAAQ,CAACQ,MAAT,KAAoB,CAArC,EAAwC;MACtCC,UAAU,CAAC,MAAM3B,OAAO,CAAC4B,IAAR,CAAa,UAAb,CAAP,EAAiC,CAAjC,CAAV;MACA3B,gBAAgB,GAAGkB,QAAnB;IACD,CAHD,MAGO;MACL;AACN;AACA;AACA;AACA;MACMQ,UAAU,CAAC,MAAM3B,OAAO,CAAC4B,IAAR,CAAaH,WAAb,CAAP,EAAkC,CAAlC,CAAV;MACAxB,gBAAgB,GAAG,KAAKQ,uBAAxB;IACD;EACF;;EAEDoB,MAAM,GAAG;IACP;IACA,OAAO,KAAKtB,KAAL,CAAWC,aAAX,gBAA2B;MAAA,UAAG,KAAKJ,KAAL,CAAW0B;IAAd,iBAA3B,GAAwD,IAA/D;EACD;;AAjEuC;;AAoE1C5B,iBAAiB,CAAC6B,WAAlB,GAAgCnC,UAAhC;AAEA,oBAAeG,UAAU,CAACG,iBAAD,CAAzB"},"metadata":{},"sourceType":"module"}