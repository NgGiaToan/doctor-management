{"ast":null,"code":"import _slicedToArray from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from'react';import Box from'@mui/material/Box';import LinearProgress from'@mui/material/LinearProgress';import{jsx as _jsx}from\"react/jsx-runtime\";export default function LinearBuffer(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),progress=_React$useState2[0],setProgress=_React$useState2[1];var _React$useState3=React.useState(10),_React$useState4=_slicedToArray(_React$useState3,2),buffer=_React$useState4[0],setBuffer=_React$useState4[1];var progressRef=React.useRef(function(){});React.useEffect(function(){progressRef.current=function(){if(progress>100){setProgress(0);setBuffer(10);}else{var diff=Math.random()*10;var diff2=Math.random()*10;setProgress(progress+diff);setBuffer(progress+diff+diff2);}};});React.useEffect(function(){var timer=setInterval(function(){progressRef.current();},500);return function(){clearInterval(timer);};},[]);return/*#__PURE__*/_jsx(Box,{sx:{width:'100%'},children:/*#__PURE__*/_jsx(LinearProgress,{variant:\"buffer\",value:progress,valueBuffer:buffer})});}","map":null,"metadata":{},"sourceType":"module"}