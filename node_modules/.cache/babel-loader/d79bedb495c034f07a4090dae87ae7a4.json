{"ast":null,"code":"import _wrapRegExp from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js\";import _slicedToArray from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _ from'@lodash';import FuseUtils from'@fuse/utils';import mockApi from'../mock-api.json';import mock from'../mock';var tasksDB=mockApi.components.examples.tasks.value;var tagsDB=mockApi.components.examples.tasks_tags.value;mock.onGet('/api/tasks').reply(function(config){return[200,tasksDB];});mock.onPost('/api/tasks').reply(function(_ref){var data=_ref.data;var newtask=_objectSpread({id:FuseUtils.generateGUID()},JSON.parse(data));tasksDB.push(newtask);return[200,newtask];});mock.onPost('/api/tasks/reorder').reply(function(_ref2){var data=_ref2.data;var _JSON$parse=JSON.parse(data),startIndex=_JSON$parse.startIndex,endIndex=_JSON$parse.endIndex;var ordered=_.merge([],tasksDB);var _ordered$splice=ordered.splice(startIndex,1),_ordered$splice2=_slicedToArray(_ordered$splice,1),removed=_ordered$splice2[0];ordered.splice(endIndex,0,removed);tasksDB=ordered;return[200,tasksDB];});mock.onGet(/\\/api\\/tasks\\/(?!tags)[^/]+/).reply(function(config){var id=config.url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/tasks\\/([^/]+)/,{id:1})).groups.id;var task=_.find(tasksDB,{id:id});if(task){return[200,task];}return[404,'Requested task do not exist.'];});mock.onPut(/\\/api\\/tasks\\/[^/]+/).reply(function(_ref3){var url=_ref3.url,data=_ref3.data;var id=url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/tasks\\/([^/]+)/,{id:1})).groups.id;_.assign(_.find(tasksDB,{id:id}),JSON.parse(data));return[200,_.find(tasksDB,{id:id})];});mock.onDelete(/\\/api\\/tasks\\/[^/]+/).reply(function(config){var id=config.url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/tasks\\/([^/]+)/,{id:1})).groups.id;_.remove(tasksDB,{id:id});return[200,id];});mock.onGet('/api/tasks/tags').reply(function(config){return[200,tagsDB];});","map":null,"metadata":{},"sourceType":"module"}