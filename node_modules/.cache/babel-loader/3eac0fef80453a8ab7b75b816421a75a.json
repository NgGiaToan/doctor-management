{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\autocomplete\\\\FreeSoloCreateOptionDialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOptionDialog() {\n  _s();\n\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setDialogValue({\n      title: '',\n      year: ''\n    });\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    title: '',\n    year: ''\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setValue({\n      title: dialogValue.title,\n      year: parseInt(dialogValue.year, 10)\n    });\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: (event, newValue) => {\n        if (typeof newValue === 'string') {\n          // timeout to avoid instant validation of the dialog's form.\n          setTimeout(() => {\n            toggleOpen(true);\n            setDialogValue({\n              title: newValue,\n              year: ''\n            });\n          });\n        } else if (newValue && newValue.inputValue) {\n          toggleOpen(true);\n          setDialogValue({\n            title: newValue.inputValue,\n            year: ''\n          });\n        } else {\n          setValue(newValue);\n        }\n      },\n      filterOptions: (options, params) => {\n        const filtered = filter(options, params);\n\n        if (params.inputValue !== '') {\n          filtered.push({\n            inputValue: params.inputValue,\n            title: `Add \"${params.inputValue}\"`\n          });\n        }\n\n        return filtered;\n      },\n      id: \"free-solo-dialog-demo\",\n      options: top100Films,\n      getOptionLabel: option => {\n        // e.g value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n\n        return option.title;\n      },\n      selectOnFocus: true,\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n        children: option.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 42\n      }, this),\n      sx: {\n        width: 300\n      },\n      freeSolo: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Free solo dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add a new film\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Did you miss any film in our list? Please, add it!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            value: dialogValue.title,\n            onChange: event => setDialogValue({ ...dialogValue,\n              title: event.target.value\n            }),\n            label: \"title\",\n            type: \"text\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"dense\",\n            id: \"name\",\n            value: dialogValue.year,\n            onChange: event => setDialogValue({ ...dialogValue,\n              year: event.target.value\n            }),\n            label: \"year\",\n            type: \"number\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(FreeSoloCreateOptionDialog, \"wGJcpqbNT77BAkwfAP2vWAhBb3Q=\");\n\n_c = FreeSoloCreateOptionDialog;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOptionDialog\");","map":{"version":3,"names":["React","TextField","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Autocomplete","createFilterOptions","filter","FreeSoloCreateOptionDialog","value","setValue","useState","open","toggleOpen","handleClose","setDialogValue","title","year","dialogValue","handleSubmit","event","preventDefault","parseInt","newValue","setTimeout","inputValue","options","params","filtered","push","top100Films","option","props","width","target"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/autocomplete/FreeSoloCreateOptionDialog.js"],"sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function FreeSoloCreateOptionDialog() {\r\n  const [value, setValue] = React.useState(null);\r\n  const [open, toggleOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      title: '',\r\n      year: '',\r\n    });\r\n\r\n    toggleOpen(false);\r\n  };\r\n\r\n  const [dialogValue, setDialogValue] = React.useState({\r\n    title: '',\r\n    year: '',\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValue({\r\n      title: dialogValue.title,\r\n      year: parseInt(dialogValue.year, 10),\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Autocomplete\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              toggleOpen(true);\r\n              setDialogValue({\r\n                title: newValue,\r\n                year: '',\r\n              });\r\n            });\r\n          } else if (newValue && newValue.inputValue) {\r\n            toggleOpen(true);\r\n            setDialogValue({\r\n              title: newValue.inputValue,\r\n              year: '',\r\n            });\r\n          } else {\r\n            setValue(newValue);\r\n          }\r\n        }}\r\n        filterOptions={(options, params) => {\r\n          const filtered = filter(options, params);\r\n\r\n          if (params.inputValue !== '') {\r\n            filtered.push({\r\n              inputValue: params.inputValue,\r\n              title: `Add \"${params.inputValue}\"`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        }}\r\n        id=\"free-solo-dialog-demo\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.title;\r\n        }}\r\n        selectOnFocus\r\n        clearOnBlur\r\n        handleHomeEndKeys\r\n        renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n        sx={{ width: 300 }}\r\n        freeSolo\r\n        renderInput={(params) => <TextField {...params} label=\"Free solo dialog\" />}\r\n      />\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogTitle>Add a new film</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Did you miss any film in our list? Please, add it!\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              value={dialogValue.title}\r\n              onChange={(event) =>\r\n                setDialogValue({\r\n                  ...dialogValue,\r\n                  title: event.target.value,\r\n                })\r\n              }\r\n              label=\"title\"\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              value={dialogValue.year}\r\n              onChange={(event) =>\r\n                setDialogValue({\r\n                  ...dialogValue,\r\n                  year: event.target.value,\r\n                })\r\n              }\r\n              label=\"year\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n            <Button type=\"submit\">Add</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  {\r\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  {\r\n    title: 'Star Wars: Episode VI - Return of the Jedi',\r\n    year: 1983,\r\n  },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  {\r\n    title: 'Eternal Sunshine of the Spotless Mind',\r\n    year: 2004,\r\n  },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}