{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getOrder = createAsyncThunk('eCommerceApp/order/getOrder', async orderId => {\n  const response = await axios.get(`/api/ecommerce/orders/${orderId}`);\n  const data = await response.data;\n  return data === undefined ? null : data;\n});\nexport const saveOrder = createAsyncThunk('eCommerceApp/order/saveOrder', async order => {\n  const response = await axios.put('/api/ecommerce/orders', order);\n  const data = await response.data;\n  return data;\n});\nconst orderSlice = createSlice({\n  name: 'eCommerceApp/order',\n  initialState: null,\n  reducers: {\n    resetOrder: () => null\n  },\n  extraReducers: {\n    [getOrder.fulfilled]: (state, action) => action.payload,\n    [saveOrder.fulfilled]: (state, action) => action.payload\n  }\n});\nexport const {\n  resetOrder\n} = orderSlice.actions;\nexport const selectOrder = _ref => {\n  let {\n    eCommerceApp\n  } = _ref;\n  return eCommerceApp.order;\n};\nexport default orderSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","getOrder","orderId","response","get","data","undefined","saveOrder","order","put","orderSlice","name","initialState","reducers","resetOrder","extraReducers","fulfilled","state","action","payload","actions","selectOrder","eCommerceApp","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/e-commerce/store/orderSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getOrder = createAsyncThunk('eCommerceApp/order/getOrder', async (orderId) => {\r\n  const response = await axios.get(`/api/ecommerce/orders/${orderId}`);\r\n  const data = await response.data;\r\n\r\n  return data === undefined ? null : data;\r\n});\r\n\r\nexport const saveOrder = createAsyncThunk('eCommerceApp/order/saveOrder', async (order) => {\r\n  const response = await axios.put('/api/ecommerce/orders', order);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nconst orderSlice = createSlice({\r\n  name: 'eCommerceApp/order',\r\n  initialState: null,\r\n  reducers: {\r\n    resetOrder: () => null,\r\n  },\r\n  extraReducers: {\r\n    [getOrder.fulfilled]: (state, action) => action.payload,\r\n    [saveOrder.fulfilled]: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { resetOrder } = orderSlice.actions;\r\n\r\nexport const selectOrder = ({ eCommerceApp }) => eCommerceApp.order;\r\n\r\nexport default orderSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CAAC,6BAAD,EAAgC,MAAOI,OAAP,IAAmB;EACzF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,yBAAwBF,OAAQ,EAA3C,CAAvB;EACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAI,KAAKC,SAAT,GAAqB,IAArB,GAA4BD,IAAnC;AACD,CALuC,CAAjC;AAOP,OAAO,MAAME,SAAS,GAAGT,gBAAgB,CAAC,8BAAD,EAAiC,MAAOU,KAAP,IAAiB;EACzF,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACS,GAAN,CAAU,uBAAV,EAAmCD,KAAnC,CAAvB;EACA,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALwC,CAAlC;AAOP,MAAMK,UAAU,GAAGX,WAAW,CAAC;EAC7BY,IAAI,EAAE,oBADuB;EAE7BC,YAAY,EAAE,IAFe;EAG7BC,QAAQ,EAAE;IACRC,UAAU,EAAE,MAAM;EADV,CAHmB;EAM7BC,aAAa,EAAE;IACb,CAACd,QAAQ,CAACe,SAAV,GAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADnC;IAEb,CAACZ,SAAS,CAACS,SAAX,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;EAFpC;AANc,CAAD,CAA9B;AAYA,OAAO,MAAM;EAAEL;AAAF,IAAiBJ,UAAU,CAACU,OAAlC;AAEP,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAsBA,YAAY,CAACd,KAAnC;AAAA,CAApB;AAEP,eAAeE,UAAU,CAACa,OAA1B"},"metadata":{},"sourceType":"module"}