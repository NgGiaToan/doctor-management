{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationSecurityDefined = void 0;\n\nvar OperationSecurityDefined = function OperationSecurityDefined() {\n  var referencedSchemes = new Map();\n  return {\n    DefinitionRoot: {\n      leave: function leave(_, _ref) {\n        var report = _ref.report;\n\n        var _iterator = _createForOfIteratorHelper(referencedSchemes.entries()),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                name = _step$value[0],\n                scheme = _step$value[1];\n\n            if (scheme.defined) continue;\n\n            var _iterator2 = _createForOfIteratorHelper(scheme.from),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var reportedFromLocation = _step2.value;\n                report({\n                  message: \"There is no `\".concat(name, \"` security scheme defined.\"),\n                  location: reportedFromLocation.key()\n                });\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    },\n    SecurityScheme: function SecurityScheme(_securityScheme, _ref2) {\n      var key = _ref2.key;\n      referencedSchemes.set(key.toString(), {\n        defined: true,\n        from: []\n      });\n    },\n    SecurityRequirement: function SecurityRequirement(requirements, _ref3) {\n      var location = _ref3.location;\n\n      for (var _i = 0, _Object$keys = Object.keys(requirements); _i < _Object$keys.length; _i++) {\n        var requirement = _Object$keys[_i];\n        var authScheme = referencedSchemes.get(requirement);\n        var requirementLocation = location.child([requirement]);\n\n        if (!authScheme) {\n          referencedSchemes.set(requirement, {\n            from: [requirementLocation]\n          });\n        } else {\n          authScheme.from.push(requirementLocation);\n        }\n      }\n    }\n  };\n};\n\nexports.OperationSecurityDefined = OperationSecurityDefined;","map":null,"metadata":{},"sourceType":"script"}