{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport _ from '@lodash';\nimport history from '@history';\nimport { getMails } from './mailsSlice';\nexport const getMail = createAsyncThunk('mailboxApp/mail/getMail', async routeParams => {\n  let url = '/api/mailbox/mails/';\n\n  if (routeParams.folderHandle) {\n    url += `${routeParams.folderHandle}/${routeParams.mailId}`;\n  }\n\n  if (routeParams.labelHandle) {\n    url += `labels/${routeParams.labelHandle}/${routeParams.mailId}`;\n  }\n\n  if (routeParams.filterHandle) {\n    url += `filters/${routeParams.filterHandle}/${routeParams.mailId}`;\n  }\n\n  try {\n    const response = await axios.get(url);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    history.push({\n      pathname: `/apps/mailbox`\n    });\n    return null;\n  }\n});\nconst mailSlice = createSlice({\n  name: 'mailboxApp/mail',\n  initialState: null,\n  reducers: {},\n  extraReducers: {\n    [getMail.fulfilled]: (state, action) => action.payload,\n    [getMails.fulfilled]: (state, action) => {\n      const mails = action.payload.data;\n\n      if (!state) {\n        return null;\n      }\n\n      const mail = _.find(mails, {\n        id: state.id\n      });\n\n      return mail || null;\n    }\n  }\n});\nexport const selectMail = _ref => {\n  let {\n    mailboxApp\n  } = _ref;\n  return mailboxApp.mail;\n};\nexport default mailSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","_","history","getMails","getMail","routeParams","url","folderHandle","mailId","labelHandle","filterHandle","response","get","data","error","push","pathname","mailSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","payload","mails","mail","find","id","selectMail","mailboxApp","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/mailbox/store/mailSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport _ from '@lodash';\r\nimport history from '@history';\r\nimport { getMails } from './mailsSlice';\r\n\r\nexport const getMail = createAsyncThunk('mailboxApp/mail/getMail', async (routeParams) => {\r\n  let url = '/api/mailbox/mails/';\r\n  if (routeParams.folderHandle) {\r\n    url += `${routeParams.folderHandle}/${routeParams.mailId}`;\r\n  }\r\n\r\n  if (routeParams.labelHandle) {\r\n    url += `labels/${routeParams.labelHandle}/${routeParams.mailId}`;\r\n  }\r\n\r\n  if (routeParams.filterHandle) {\r\n    url += `filters/${routeParams.filterHandle}/${routeParams.mailId}`;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    history.push({ pathname: `/apps/mailbox` });\r\n\r\n    return null;\r\n  }\r\n});\r\n\r\nconst mailSlice = createSlice({\r\n  name: 'mailboxApp/mail',\r\n  initialState: null,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getMail.fulfilled]: (state, action) => action.payload,\r\n    [getMails.fulfilled]: (state, action) => {\r\n      const mails = action.payload.data;\r\n\r\n      if (!state) {\r\n        return null;\r\n      }\r\n\r\n      const mail = _.find(mails, { id: state.id });\r\n\r\n      return mail || null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectMail = ({ mailboxApp }) => mailboxApp.mail;\r\n\r\nexport default mailSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CAAC,yBAAD,EAA4B,MAAOO,WAAP,IAAuB;EACxF,IAAIC,GAAG,GAAG,qBAAV;;EACA,IAAID,WAAW,CAACE,YAAhB,EAA8B;IAC5BD,GAAG,IAAK,GAAED,WAAW,CAACE,YAAa,IAAGF,WAAW,CAACG,MAAO,EAAzD;EACD;;EAED,IAAIH,WAAW,CAACI,WAAhB,EAA6B;IAC3BH,GAAG,IAAK,UAASD,WAAW,CAACI,WAAY,IAAGJ,WAAW,CAACG,MAAO,EAA/D;EACD;;EAED,IAAIH,WAAW,CAACK,YAAhB,EAA8B;IAC5BJ,GAAG,IAAK,WAAUD,WAAW,CAACK,YAAa,IAAGL,WAAW,CAACG,MAAO,EAAjE;EACD;;EAED,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUN,GAAV,CAAvB;IAEA,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;IAEA,OAAOA,IAAP;EACD,CAND,CAME,OAAOC,KAAP,EAAc;IACdZ,OAAO,CAACa,IAAR,CAAa;MAAEC,QAAQ,EAAG;IAAb,CAAb;IAEA,OAAO,IAAP;EACD;AACF,CAzBsC,CAAhC;AA2BP,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC5BmB,IAAI,EAAE,iBADsB;EAE5BC,YAAY,EAAE,IAFc;EAG5BC,QAAQ,EAAE,EAHkB;EAI5BC,aAAa,EAAE;IACb,CAACjB,OAAO,CAACkB,SAAT,GAAqB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADlC;IAEb,CAACtB,QAAQ,CAACmB,SAAV,GAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACvC,MAAME,KAAK,GAAGF,MAAM,CAACC,OAAP,CAAeZ,IAA7B;;MAEA,IAAI,CAACU,KAAL,EAAY;QACV,OAAO,IAAP;MACD;;MAED,MAAMI,IAAI,GAAG1B,CAAC,CAAC2B,IAAF,CAAOF,KAAP,EAAc;QAAEG,EAAE,EAAEN,KAAK,CAACM;MAAZ,CAAd,CAAb;;MAEA,OAAOF,IAAI,IAAI,IAAf;IACD;EAZY;AAJa,CAAD,CAA7B;AAoBA,OAAO,MAAMG,UAAU,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAoBA,UAAU,CAACJ,IAA/B;AAAA,CAAnB;AAEP,eAAeV,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}