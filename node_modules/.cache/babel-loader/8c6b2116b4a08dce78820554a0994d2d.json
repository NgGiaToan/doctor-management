{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\skeleton\\\\SkeletonTypography.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Skeleton from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = ['h1', 'h3', 'body1', 'caption'];\n\nfunction TypographyDemo(props) {\n  const {\n    loading = false\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: variants.map(variant => /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"div\",\n      variant: variant,\n      children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 22\n      }, this) : variant\n    }, variant, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TypographyDemo;\nTypographyDemo.propTypes = {\n  loading: PropTypes.bool\n};\nexport default function SkeletonTypography() {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 8,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(TypographyDemo, {\n        loading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(TypographyDemo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SkeletonTypography;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypographyDemo\");\n$RefreshReg$(_c2, \"SkeletonTypography\");","map":{"version":3,"names":["React","PropTypes","Typography","Skeleton","Grid","variants","TypographyDemo","props","loading","map","variant","propTypes","bool","SkeletonTypography"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/skeleton/SkeletonTypography.js"],"sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst variants = ['h1', 'h3', 'body1', 'caption'];\r\n\r\nfunction TypographyDemo(props) {\r\n  const { loading = false } = props;\r\n\r\n  return (\r\n    <div>\r\n      {variants.map((variant) => (\r\n        <Typography component=\"div\" key={variant} variant={variant}>\r\n          {loading ? <Skeleton /> : variant}\r\n        </Typography>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nTypographyDemo.propTypes = {\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default function SkeletonTypography() {\r\n  return (\r\n    <Grid container spacing={8}>\r\n      <Grid item xs>\r\n        <TypographyDemo loading />\r\n      </Grid>\r\n      <Grid item xs>\r\n        <TypographyDemo />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,OAAb,EAAsB,SAAtB,CAAjB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC7B,MAAM;IAAEC,OAAO,GAAG;EAAZ,IAAsBD,KAA5B;EAEA,oBACE;IAAA,UACGF,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACZ,QAAC,UAAD;MAAY,SAAS,EAAC,KAAtB;MAA0C,OAAO,EAAEA,OAAnD;MAAA,UACGF,OAAO,gBAAG,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAAH,GAAkBE;IAD5B,GAAiCA,OAAjC;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAZQJ,c;AAcTA,cAAc,CAACK,SAAf,GAA2B;EACzBH,OAAO,EAAEP,SAAS,CAACW;AADM,CAA3B;AAIA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,oBACE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,OAAO,EAAE,CAAzB;IAAA,wBACE,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,MAAb;MAAA,uBACE,QAAC,cAAD;QAAgB,OAAO;MAAvB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,MAAb;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;MAXuBA,kB"},"metadata":{},"sourceType":"module"}