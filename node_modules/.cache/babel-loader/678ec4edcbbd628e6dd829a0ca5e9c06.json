{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js\").default;\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignDefaults = void 0;\n\nvar codegen_1 = require(\"../codegen\");\n\nvar util_1 = require(\"../util\");\n\nfunction assignDefaults(it, ty) {\n  var _it$schema = it.schema,\n      properties = _it$schema.properties,\n      items = _it$schema.items;\n\n  if (ty === \"object\" && properties) {\n    for (var key in properties) {\n      assignDefault(it, key, properties[key].default);\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach(function (sch, i) {\n      return assignDefault(it, i, sch.default);\n    });\n  }\n}\n\nexports.assignDefaults = assignDefaults;\n\nfunction assignDefault(it, prop, defaultValue) {\n  var gen = it.gen,\n      compositeRule = it.compositeRule,\n      data = it.data,\n      opts = it.opts;\n  if (defaultValue === undefined) return;\n\n  var childData = codegen_1._(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\", \"\", \"\"])), data, codegen_1.getProperty(prop));\n\n  if (compositeRule) {\n    util_1.checkStrictMode(it, \"default is ignored for: \".concat(childData));\n    return;\n  }\n\n  var condition = codegen_1._(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" === undefined\"])), childData);\n\n  if (opts.useDefaults === \"empty\") {\n    condition = codegen_1._(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \" || \", \" === null || \", \" === \\\"\\\"\"])), condition, childData, childData);\n  } // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n\n\n  gen.if(condition, codegen_1._(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \" = \", \"\"])), childData, codegen_1.stringify(defaultValue)));\n} //# sourceMappingURL=defaults.js.map","map":null,"metadata":{},"sourceType":"script"}