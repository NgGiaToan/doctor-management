{"ast":null,"code":"import _ from '@lodash';\nimport FuseUtils from '@fuse/utils';\nimport mockApi from '../mock-api.json';\nimport mock from '../mock';\nconst eventsDB = mockApi.components.examples.calendar_events.value;\nconst labelsDB = mockApi.components.examples.calendar_labels.value;\nmock.onGet('/api/calendar/labels').reply(config => {\n  return [200, labelsDB];\n});\nmock.onPost('/api/calendar/labels').reply(_ref => {\n  let {\n    data\n  } = _ref;\n  const newLabel = {\n    id: FuseUtils.generateGUID(),\n    ...JSON.parse(data)\n  };\n  labelsDB.push(newLabel);\n  return [200, newLabel];\n});\nmock.onPut(/\\/api\\/calendar\\/labels\\/[^/]+/).reply(_ref2 => {\n  let {\n    url,\n    data\n  } = _ref2;\n  const {\n    id\n  } = url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\n\n  _.assign(_.find(labelsDB, {\n    id\n  }), JSON.parse(data));\n\n  return [200, _.find(labelsDB, {\n    id\n  })];\n});\nmock.onGet(/\\/api\\/calendar\\/labels\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\n\n  const response = _.find(labelsDB, {\n    label: id\n  });\n\n  if (response) {\n    return [200, response];\n  }\n\n  return [404, 'Requested label do not exist.'];\n});\nmock.onGet(/\\/api\\/calendar\\/labels\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\n\n  const response = _.find(labelsDB, {\n    label: id\n  });\n\n  if (response) {\n    return [200, response];\n  }\n\n  return [404, 'Requested label do not exist.'];\n});\nmock.onDelete(/\\/api\\/calendar\\/labels\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\n\n  _.remove(labelsDB, {\n    id\n  });\n\n  _.remove(eventsDB, {\n    extendedProps: {\n      label: id\n    }\n  });\n\n  return [200, id];\n});\nmock.onGet('/api/calendar/events').reply(config => {\n  return [200, eventsDB];\n});\nmock.onPost('/api/calendar/events').reply(_ref3 => {\n  let {\n    data\n  } = _ref3;\n  const newEvent = {\n    id: FuseUtils.generateGUID(),\n    ...JSON.parse(data)\n  };\n  eventsDB.push(newEvent);\n  return [200, newEvent];\n});\nmock.onPut(/\\/api\\/calendar\\/events\\/[^/]+/).reply(_ref4 => {\n  let {\n    url,\n    data\n  } = _ref4;\n  const {\n    id\n  } = url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\n\n  _.assign(_.find(eventsDB, {\n    id\n  }), JSON.parse(data));\n\n  return [200, _.find(eventsDB, {\n    id\n  })];\n});\nmock.onGet(/\\/api\\/calendar\\/events\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\n\n  const response = _.find(eventsDB, {\n    event: id\n  });\n\n  if (response) {\n    return [200, response];\n  }\n\n  return [404, 'Requested event do not exist.'];\n});\nmock.onGet(/\\/api\\/calendar\\/events\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\n\n  const response = _.find(eventsDB, {\n    event: id\n  });\n\n  if (response) {\n    return [200, response];\n  }\n\n  return [404, 'Requested event do not exist.'];\n});\nmock.onDelete(/\\/api\\/calendar\\/events\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\n\n  _.remove(eventsDB, {\n    id\n  });\n\n  return [200, id];\n});","map":{"version":3,"names":["_","FuseUtils","mockApi","mock","eventsDB","components","examples","calendar_events","value","labelsDB","calendar_labels","onGet","reply","config","onPost","data","newLabel","id","generateGUID","JSON","parse","push","onPut","url","match","groups","assign","find","response","label","onDelete","remove","extendedProps","newEvent","event"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/calendar-api.js"],"sourcesContent":["import _ from '@lodash';\r\nimport FuseUtils from '@fuse/utils';\r\nimport mockApi from '../mock-api.json';\r\nimport mock from '../mock';\r\n\r\nconst eventsDB = mockApi.components.examples.calendar_events.value;\r\nconst labelsDB = mockApi.components.examples.calendar_labels.value;\r\n\r\nmock.onGet('/api/calendar/labels').reply((config) => {\r\n  return [200, labelsDB];\r\n});\r\n\r\nmock.onPost('/api/calendar/labels').reply(({ data }) => {\r\n  const newLabel = { id: FuseUtils.generateGUID(), ...JSON.parse(data) };\r\n  labelsDB.push(newLabel);\r\n\r\n  return [200, newLabel];\r\n});\r\n\r\nmock.onPut(/\\/api\\/calendar\\/labels\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.assign(_.find(labelsDB, { id }), JSON.parse(data));\r\n\r\n  return [200, _.find(labelsDB, { id })];\r\n});\r\n\r\nmock.onGet(/\\/api\\/calendar\\/labels\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\r\n  const response = _.find(labelsDB, { label: id });\r\n\r\n  if (response) {\r\n    return [200, response];\r\n  }\r\n\r\n  return [404, 'Requested label do not exist.'];\r\n});\r\n\r\nmock.onGet(/\\/api\\/calendar\\/labels\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\r\n  const response = _.find(labelsDB, { label: id });\r\n\r\n  if (response) {\r\n    return [200, response];\r\n  }\r\n\r\n  return [404, 'Requested label do not exist.'];\r\n});\r\n\r\nmock.onDelete(/\\/api\\/calendar\\/labels\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/calendar\\/labels\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.remove(labelsDB, { id });\r\n  _.remove(eventsDB, { extendedProps: { label: id } });\r\n\r\n  return [200, id];\r\n});\r\n\r\nmock.onGet('/api/calendar/events').reply((config) => {\r\n  return [200, eventsDB];\r\n});\r\n\r\nmock.onPost('/api/calendar/events').reply(({ data }) => {\r\n  const newEvent = { id: FuseUtils.generateGUID(), ...JSON.parse(data) };\r\n  eventsDB.push(newEvent);\r\n\r\n  return [200, newEvent];\r\n});\r\n\r\nmock.onPut(/\\/api\\/calendar\\/events\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.assign(_.find(eventsDB, { id }), JSON.parse(data));\r\n\r\n  return [200, _.find(eventsDB, { id })];\r\n});\r\n\r\nmock.onGet(/\\/api\\/calendar\\/events\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\r\n  const response = _.find(eventsDB, { event: id });\r\n\r\n  if (response) {\r\n    return [200, response];\r\n  }\r\n\r\n  return [404, 'Requested event do not exist.'];\r\n});\r\n\r\nmock.onGet(/\\/api\\/calendar\\/events\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\r\n  const response = _.find(eventsDB, { event: id });\r\n\r\n  if (response) {\r\n    return [200, response];\r\n  }\r\n\r\n  return [404, 'Requested event do not exist.'];\r\n});\r\n\r\nmock.onDelete(/\\/api\\/calendar\\/events\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/calendar\\/events\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.remove(eventsDB, { id });\r\n\r\n  return [200, id];\r\n});\r\n"],"mappings":"AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,QAAQ,GAAGF,OAAO,CAACG,UAAR,CAAmBC,QAAnB,CAA4BC,eAA5B,CAA4CC,KAA7D;AACA,MAAMC,QAAQ,GAAGP,OAAO,CAACG,UAAR,CAAmBC,QAAnB,CAA4BI,eAA5B,CAA4CF,KAA7D;AAEAL,IAAI,CAACQ,KAAL,CAAW,sBAAX,EAAmCC,KAAnC,CAA0CC,MAAD,IAAY;EACnD,OAAO,CAAC,GAAD,EAAMJ,QAAN,CAAP;AACD,CAFD;AAIAN,IAAI,CAACW,MAAL,CAAY,sBAAZ,EAAoCF,KAApC,CAA0C,QAAc;EAAA,IAAb;IAAEG;EAAF,CAAa;EACtD,MAAMC,QAAQ,GAAG;IAAEC,EAAE,EAAEhB,SAAS,CAACiB,YAAV,EAAN;IAAgC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX;EAAnC,CAAjB;EACAN,QAAQ,CAACY,IAAT,CAAcL,QAAd;EAEA,OAAO,CAAC,GAAD,EAAMA,QAAN,CAAP;AACD,CALD;AAOAb,IAAI,CAACmB,KAAL,CAAW,gCAAX,EAA6CV,KAA7C,CAAmD,SAAmB;EAAA,IAAlB;IAAEW,GAAF;IAAOR;EAAP,CAAkB;EACpE,MAAM;IAAEE;EAAF,IAASM,GAAG,CAACC,KAAJ,CAAU,uCAAV,EAAmDC,MAAlE;;EAEAzB,CAAC,CAAC0B,MAAF,CAAS1B,CAAC,CAAC2B,IAAF,CAAOlB,QAAP,EAAiB;IAAEQ;EAAF,CAAjB,CAAT,EAAmCE,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAnC;;EAEA,OAAO,CAAC,GAAD,EAAMf,CAAC,CAAC2B,IAAF,CAAOlB,QAAP,EAAiB;IAAEQ;EAAF,CAAjB,CAAN,CAAP;AACD,CAND;AAQAd,IAAI,CAACQ,KAAL,CAAW,gCAAX,EAA6CC,KAA7C,CAAoDC,MAAD,IAAY;EAC7D,MAAM;IAAEI;EAAF,IAASJ,MAAM,CAACU,GAAP,CAAWC,KAAX,CAAiB,uCAAjB,EAA0DC,MAAzE;;EACA,MAAMG,QAAQ,GAAG5B,CAAC,CAAC2B,IAAF,CAAOlB,QAAP,EAAiB;IAAEoB,KAAK,EAAEZ;EAAT,CAAjB,CAAjB;;EAEA,IAAIW,QAAJ,EAAc;IACZ,OAAO,CAAC,GAAD,EAAMA,QAAN,CAAP;EACD;;EAED,OAAO,CAAC,GAAD,EAAM,+BAAN,CAAP;AACD,CATD;AAWAzB,IAAI,CAACQ,KAAL,CAAW,gCAAX,EAA6CC,KAA7C,CAAoDC,MAAD,IAAY;EAC7D,MAAM;IAAEI;EAAF,IAASJ,MAAM,CAACU,GAAP,CAAWC,KAAX,CAAiB,uCAAjB,EAA0DC,MAAzE;;EACA,MAAMG,QAAQ,GAAG5B,CAAC,CAAC2B,IAAF,CAAOlB,QAAP,EAAiB;IAAEoB,KAAK,EAAEZ;EAAT,CAAjB,CAAjB;;EAEA,IAAIW,QAAJ,EAAc;IACZ,OAAO,CAAC,GAAD,EAAMA,QAAN,CAAP;EACD;;EAED,OAAO,CAAC,GAAD,EAAM,+BAAN,CAAP;AACD,CATD;AAWAzB,IAAI,CAAC2B,QAAL,CAAc,gCAAd,EAAgDlB,KAAhD,CAAuDC,MAAD,IAAY;EAChE,MAAM;IAAEI;EAAF,IAASJ,MAAM,CAACU,GAAP,CAAWC,KAAX,CAAiB,uCAAjB,EAA0DC,MAAzE;;EAEAzB,CAAC,CAAC+B,MAAF,CAAStB,QAAT,EAAmB;IAAEQ;EAAF,CAAnB;;EACAjB,CAAC,CAAC+B,MAAF,CAAS3B,QAAT,EAAmB;IAAE4B,aAAa,EAAE;MAAEH,KAAK,EAAEZ;IAAT;EAAjB,CAAnB;;EAEA,OAAO,CAAC,GAAD,EAAMA,EAAN,CAAP;AACD,CAPD;AASAd,IAAI,CAACQ,KAAL,CAAW,sBAAX,EAAmCC,KAAnC,CAA0CC,MAAD,IAAY;EACnD,OAAO,CAAC,GAAD,EAAMT,QAAN,CAAP;AACD,CAFD;AAIAD,IAAI,CAACW,MAAL,CAAY,sBAAZ,EAAoCF,KAApC,CAA0C,SAAc;EAAA,IAAb;IAAEG;EAAF,CAAa;EACtD,MAAMkB,QAAQ,GAAG;IAAEhB,EAAE,EAAEhB,SAAS,CAACiB,YAAV,EAAN;IAAgC,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX;EAAnC,CAAjB;EACAX,QAAQ,CAACiB,IAAT,CAAcY,QAAd;EAEA,OAAO,CAAC,GAAD,EAAMA,QAAN,CAAP;AACD,CALD;AAOA9B,IAAI,CAACmB,KAAL,CAAW,gCAAX,EAA6CV,KAA7C,CAAmD,SAAmB;EAAA,IAAlB;IAAEW,GAAF;IAAOR;EAAP,CAAkB;EACpE,MAAM;IAAEE;EAAF,IAASM,GAAG,CAACC,KAAJ,CAAU,uCAAV,EAAmDC,MAAlE;;EAEAzB,CAAC,CAAC0B,MAAF,CAAS1B,CAAC,CAAC2B,IAAF,CAAOvB,QAAP,EAAiB;IAAEa;EAAF,CAAjB,CAAT,EAAmCE,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAnC;;EAEA,OAAO,CAAC,GAAD,EAAMf,CAAC,CAAC2B,IAAF,CAAOvB,QAAP,EAAiB;IAAEa;EAAF,CAAjB,CAAN,CAAP;AACD,CAND;AAQAd,IAAI,CAACQ,KAAL,CAAW,gCAAX,EAA6CC,KAA7C,CAAoDC,MAAD,IAAY;EAC7D,MAAM;IAAEI;EAAF,IAASJ,MAAM,CAACU,GAAP,CAAWC,KAAX,CAAiB,uCAAjB,EAA0DC,MAAzE;;EACA,MAAMG,QAAQ,GAAG5B,CAAC,CAAC2B,IAAF,CAAOvB,QAAP,EAAiB;IAAE8B,KAAK,EAAEjB;EAAT,CAAjB,CAAjB;;EAEA,IAAIW,QAAJ,EAAc;IACZ,OAAO,CAAC,GAAD,EAAMA,QAAN,CAAP;EACD;;EAED,OAAO,CAAC,GAAD,EAAM,+BAAN,CAAP;AACD,CATD;AAWAzB,IAAI,CAACQ,KAAL,CAAW,gCAAX,EAA6CC,KAA7C,CAAoDC,MAAD,IAAY;EAC7D,MAAM;IAAEI;EAAF,IAASJ,MAAM,CAACU,GAAP,CAAWC,KAAX,CAAiB,uCAAjB,EAA0DC,MAAzE;;EACA,MAAMG,QAAQ,GAAG5B,CAAC,CAAC2B,IAAF,CAAOvB,QAAP,EAAiB;IAAE8B,KAAK,EAAEjB;EAAT,CAAjB,CAAjB;;EAEA,IAAIW,QAAJ,EAAc;IACZ,OAAO,CAAC,GAAD,EAAMA,QAAN,CAAP;EACD;;EAED,OAAO,CAAC,GAAD,EAAM,+BAAN,CAAP;AACD,CATD;AAWAzB,IAAI,CAAC2B,QAAL,CAAc,gCAAd,EAAgDlB,KAAhD,CAAuDC,MAAD,IAAY;EAChE,MAAM;IAAEI;EAAF,IAASJ,MAAM,CAACU,GAAP,CAAWC,KAAX,CAAiB,uCAAjB,EAA0DC,MAAzE;;EAEAzB,CAAC,CAAC+B,MAAF,CAAS3B,QAAT,EAAmB;IAAEa;EAAF,CAAnB;;EAEA,OAAO,CAAC,GAAD,EAAMA,EAAN,CAAP;AACD,CAND"},"metadata":{},"sourceType":"module"}