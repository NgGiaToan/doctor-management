{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\dialogs\\\\ConfirmationDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nfunction ConfirmationDialogRaw(props) {\n  _s();\n\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    ...other\n  } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    sx: {\n      '& .MuiDialog-paper': {\n        width: '80%',\n        maxHeight: 435\n      }\n    },\n    maxWidth: \"xs\",\n    TransitionProps: {\n      onEntering: handleEntering\n    },\n    open: open,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Phone Ringtone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        ref: radioGroupRef,\n        \"aria-label\": \"ringtone\",\n        name: \"ringtone\",\n        value: value,\n        onChange: handleChange,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }, this),\n          label: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOk,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmationDialogRaw, \"OMt7sSt5R/TCL4tHSUZzglY9GI4=\");\n\n_c = ConfirmationDialogRaw;\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nexport default function ConfirmationDialog() {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      component: \"div\",\n      role: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        divider: true,\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Interruptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        divider: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"ringtone-menu\",\n        \"aria-label\": \"phone ringtone\",\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Phone ringtone\",\n          secondary: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        divider: true,\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Default notification ringtone\",\n          secondary: \"Tethys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialogRaw, {\n        id: \"ringtone-menu\",\n        keepMounted: true,\n        open: open,\n        onClose: handleClose,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ConfirmationDialog, \"NJy85h6SXthY6/o2MVDs2svv5vo=\");\n\n_c2 = ConfirmationDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConfirmationDialogRaw\");\n$RefreshReg$(_c2, \"ConfirmationDialog\");","map":{"version":3,"names":["React","PropTypes","Box","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","options","ConfirmationDialogRaw","props","onClose","value","valueProp","open","other","setValue","useState","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","target","width","maxHeight","onEntering","map","option","propTypes","func","isRequired","bool","string","ConfirmationDialog","setOpen","handleClickListItem","handleClose","newValue","maxWidth","bgcolor"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/dialogs/ConfirmationDialog.js"],"sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 435 } }}\r\n      maxWidth=\"xs\"\r\n      TransitionProps={{ onEntering: handleEntering }}\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle>Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel\r\n              value={option}\r\n              key={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk}>Ok</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ConfirmationDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  const handleClickListItem = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (newValue) => {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n      <List component=\"div\" role=\"group\">\r\n        <ListItem button divider disabled>\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"phone ringtone\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n        <ListItem button divider disabled>\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}