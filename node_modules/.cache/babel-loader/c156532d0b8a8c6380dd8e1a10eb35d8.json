{"ast":null,"code":"import { traverse } from '../traverse';\nexport function sampleObject(schema) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let spec = arguments.length > 2 ? arguments[2] : undefined;\n  let context = arguments.length > 3 ? arguments[3] : undefined;\n  let res = {};\n  const depth = context && context.depth || 1;\n\n  if (schema && typeof schema.properties === 'object') {\n    let requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    let requiredKeyDict = requiredKeys.reduce((dict, key) => {\n      dict[key] = true;\n      return dict;\n    }, {});\n    Object.keys(schema.properties).forEach(propertyName => {\n      // skip before traverse that could be costly\n      if (options.skipNonRequired && !requiredKeyDict.hasOwnProperty(propertyName)) {\n        return;\n      }\n\n      const sample = traverse(schema.properties[propertyName], options, spec, {\n        propertyName,\n        depth: depth + 1\n      });\n\n      if (options.skipReadOnly && sample.readOnly) {\n        return;\n      }\n\n      if (options.skipWriteOnly && sample.writeOnly) {\n        return;\n      }\n\n      res[propertyName] = sample.value;\n    });\n  }\n\n  if (schema && typeof schema.additionalProperties === 'object') {\n    const propertyName = schema.additionalProperties['x-additionalPropertiesName'] || 'property';\n    res[`${String(propertyName)}1`] = traverse(schema.additionalProperties, options, spec, {\n      depth: depth + 1\n    }).value;\n    res[`${String(propertyName)}2`] = traverse(schema.additionalProperties, options, spec, {\n      depth: depth + 1\n    }).value;\n  }\n\n  return res;\n}","map":{"version":3,"names":["traverse","sampleObject","schema","options","spec","context","res","depth","properties","requiredKeys","Array","isArray","required","requiredKeyDict","reduce","dict","key","Object","keys","forEach","propertyName","skipNonRequired","hasOwnProperty","sample","skipReadOnly","readOnly","skipWriteOnly","writeOnly","value","additionalProperties","String"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/openapi-sampler/src/samplers/object.js"],"sourcesContent":["import { traverse } from '../traverse';\nexport function sampleObject(schema, options = {}, spec, context) {\n  let res = {};\n  const depth = (context && context.depth || 1);\n\n  if (schema && typeof schema.properties === 'object') {\n    let requiredKeys = (Array.isArray(schema.required) ? schema.required : []);\n    let requiredKeyDict = requiredKeys.reduce((dict, key) => {\n      dict[key] = true;\n      return dict;\n    }, {});\n\n    Object.keys(schema.properties).forEach(propertyName => {\n      // skip before traverse that could be costly\n      if (options.skipNonRequired && !requiredKeyDict.hasOwnProperty(propertyName)) {\n        return;\n      }\n\n      const sample = traverse(schema.properties[propertyName], options, spec, { propertyName, depth: depth + 1 });\n      if (options.skipReadOnly && sample.readOnly) {\n        return;\n      }\n\n      if (options.skipWriteOnly && sample.writeOnly) {\n        return;\n      }\n      res[propertyName] = sample.value;\n    });\n  }\n\n  if (schema && typeof schema.additionalProperties === 'object') {\n    const propertyName = schema.additionalProperties['x-additionalPropertiesName'] || 'property';\n    res[`${String(propertyName)}1`] = traverse(schema.additionalProperties, options, spec, {depth: depth + 1 }).value;\n    res[`${String(propertyName)}2`] = traverse(schema.additionalProperties, options, spec, {depth: depth + 1 }).value;\n  }\n  return res;\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA2D;EAAA,IAA7BC,OAA6B,uEAAnB,EAAmB;EAAA,IAAfC,IAAe;EAAA,IAATC,OAAS;EAChE,IAAIC,GAAG,GAAG,EAAV;EACA,MAAMC,KAAK,GAAIF,OAAO,IAAIA,OAAO,CAACE,KAAnB,IAA4B,CAA3C;;EAEA,IAAIL,MAAM,IAAI,OAAOA,MAAM,CAACM,UAAd,KAA6B,QAA3C,EAAqD;IACnD,IAAIC,YAAY,GAAIC,KAAK,CAACC,OAAN,CAAcT,MAAM,CAACU,QAArB,IAAiCV,MAAM,CAACU,QAAxC,GAAmD,EAAvE;IACA,IAAIC,eAAe,GAAGJ,YAAY,CAACK,MAAb,CAAoB,CAACC,IAAD,EAAOC,GAAP,KAAe;MACvDD,IAAI,CAACC,GAAD,CAAJ,GAAY,IAAZ;MACA,OAAOD,IAAP;IACD,CAHqB,EAGnB,EAHmB,CAAtB;IAKAE,MAAM,CAACC,IAAP,CAAYhB,MAAM,CAACM,UAAnB,EAA+BW,OAA/B,CAAuCC,YAAY,IAAI;MACrD;MACA,IAAIjB,OAAO,CAACkB,eAAR,IAA2B,CAACR,eAAe,CAACS,cAAhB,CAA+BF,YAA/B,CAAhC,EAA8E;QAC5E;MACD;;MAED,MAAMG,MAAM,GAAGvB,QAAQ,CAACE,MAAM,CAACM,UAAP,CAAkBY,YAAlB,CAAD,EAAkCjB,OAAlC,EAA2CC,IAA3C,EAAiD;QAAEgB,YAAF;QAAgBb,KAAK,EAAEA,KAAK,GAAG;MAA/B,CAAjD,CAAvB;;MACA,IAAIJ,OAAO,CAACqB,YAAR,IAAwBD,MAAM,CAACE,QAAnC,EAA6C;QAC3C;MACD;;MAED,IAAItB,OAAO,CAACuB,aAAR,IAAyBH,MAAM,CAACI,SAApC,EAA+C;QAC7C;MACD;;MACDrB,GAAG,CAACc,YAAD,CAAH,GAAoBG,MAAM,CAACK,KAA3B;IACD,CAfD;EAgBD;;EAED,IAAI1B,MAAM,IAAI,OAAOA,MAAM,CAAC2B,oBAAd,KAAuC,QAArD,EAA+D;IAC7D,MAAMT,YAAY,GAAGlB,MAAM,CAAC2B,oBAAP,CAA4B,4BAA5B,KAA6D,UAAlF;IACAvB,GAAG,CAAE,GAAEwB,MAAM,CAACV,YAAD,CAAe,GAAzB,CAAH,GAAkCpB,QAAQ,CAACE,MAAM,CAAC2B,oBAAR,EAA8B1B,OAA9B,EAAuCC,IAAvC,EAA6C;MAACG,KAAK,EAAEA,KAAK,GAAG;IAAhB,CAA7C,CAAR,CAA0EqB,KAA5G;IACAtB,GAAG,CAAE,GAAEwB,MAAM,CAACV,YAAD,CAAe,GAAzB,CAAH,GAAkCpB,QAAQ,CAACE,MAAM,CAAC2B,oBAAR,EAA8B1B,OAA9B,EAAuCC,IAAvC,EAA6C;MAACG,KAAK,EAAEA,KAAK,GAAG;IAAhB,CAA7C,CAAR,CAA0EqB,KAA5G;EACD;;EACD,OAAOtB,GAAP;AACD"},"metadata":{},"sourceType":"module"}