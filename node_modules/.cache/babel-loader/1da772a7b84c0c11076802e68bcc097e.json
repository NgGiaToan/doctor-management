{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst resolve_1 = require(\"./resolve\");\n\nclass MissingRefError extends Error {\n  constructor(baseId, ref, msg) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n    this.missingRef = resolve_1.resolveUrl(baseId, ref);\n    this.missingSchema = resolve_1.normalizeId(resolve_1.getFullPath(this.missingRef));\n  }\n\n}\n\nexports.default = MissingRefError;","map":{"version":3,"mappings":";;;;;;AAAA;;AAEA,MAAqBA,eAArB,SAA6CC,KAA7C,CAAkD;EAIhDC,YAAYC,MAAZ,EAA4BC,GAA5B,EAAyCC,GAAzC,EAAqD;IACnD,MAAMA,GAAG,IAAI,2BAA2BD,GAAG,YAAYD,MAAM,EAA7D;IACA,KAAKG,UAAL,GAAkBC,qBAAWJ,MAAX,EAAmBC,GAAnB,CAAlB;IACA,KAAKI,aAAL,GAAqBD,sBAAYA,sBAAY,KAAKD,UAAjB,CAAZ,CAArB;EACD;;AAR+C;;AAAlDG","names":["MissingRefError","Error","constructor","baseId","ref","msg","missingRef","resolve_1","missingSchema","exports"],"sources":["C:\\Users\\giato\\Downloads\\Workspace\\.Net\\api\\doctor-management-fe\\node_modules\\@redocly\\ajv\\lib\\compile\\ref_error.ts"],"sourcesContent":["import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(this.missingRef))\n  }\n}\n"]},"metadata":{},"sourceType":"script"}