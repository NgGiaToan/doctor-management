{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\pages\\\\ToggleButton.js\";\nimport FuseExample from '@fuse/core/FuseExample';\nimport FuseHighlight from '@fuse/core/FuseHighlight';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n/* eslint import/no-webpack-loader-syntax: off */\n\n/* eslint import/extensions: off */\n\n/* eslint no-unused-vars: off */\n\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToggleButtonDoc(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 grow-0 items-center justify-end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"normal-case\",\n        variant: \"contained\",\n        color: \"secondary\",\n        component: \"a\",\n        href: \"https://mui.com/components/toggle-button\",\n        target: \"_blank\",\n        role: \"button\",\n        startIcon: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n          children: \"heroicons-outline:external-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this),\n        children: \"Reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-40 my-16 font-700\",\n      component: \"h1\",\n      children: \"Toggle button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"description\",\n      children: \"Toggle buttons can be used to group related options.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"To emphasize groups of related Toggle buttons, a group should share a common container. The\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"ToggleButtonGroup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \" controls the selected state of its child buttons when given its own \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \" prop.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Exclusive selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"With exclusive selection, selecting one option deselects any other.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"In this example, text justification toggle buttons present options for left, center, right, and fully justified text (disabled), with only one item available for selection at a time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \": Exclusive selection does not enforce that a button must be active. For that effect see \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#enforce-value-set\",\n        children: \"enforce value set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ToggleButtons.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/ToggleButtons.js').default,\n        raw: require('!raw-loader!../components/toggle-button/ToggleButtons.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Multiple selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"Multiple selection allows for logically-grouped options, like bold, italic, and underline, to have multiple options selected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ToggleButtonsMultiple.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/ToggleButtonsMultiple.js').default,\n        raw: require('!raw-loader!../components/toggle-button/ToggleButtonsMultiple.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"For larger or smaller buttons, use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 48\n      }, this), \" prop.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ToggleButtonSizes.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/ToggleButtonSizes.js').default,\n        raw: require('!raw-loader!../components/toggle-button/ToggleButtonSizes.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ColorToggleButton.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/ColorToggleButton.js').default,\n        raw: require('!raw-loader!../components/toggle-button/ColorToggleButton.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Vertical buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"The buttons can be stacked vertically with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"orientation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 56\n      }, this), \" prop set to \\\"vertical\\\".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"VerticalToggleButtons.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/VerticalToggleButtons.js').default,\n        raw: require('!raw-loader!../components/toggle-button/VerticalToggleButtons.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Enforce value set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"If you want to enforce that at least one button must be active, you can adapt your handleChange function.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FuseHighlight, {\n      component: \"pre\",\n      className: \"language-jsx\",\n      children: ` \nconst handleAlignment = (event, newAlignment) => {\n  if (newAlignment !== null) {\n    setAlignment(newAlignment);\n  }\n};\n\nconst handleDevices = (event, newDevices) => {\n  if (newDevices.length) {\n    setDevices(newDevices);\n  }\n};\n`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ToggleButtonNotEmpty.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/ToggleButtonNotEmpty.js').default,\n        raw: require('!raw-loader!../components/toggle-button/ToggleButtonNotEmpty.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Standalone toggle button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"StandaloneToggleButton.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/StandaloneToggleButton.js').default,\n        raw: require('!raw-loader!../components/toggle-button/StandaloneToggleButton.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Customization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"Here is an example of customizing the component. You can learn more about this in the\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/material-ui/customization/how-to-customize/\",\n        children: \"overrides documentation page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"CustomizedDividers.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/toggle-button/CustomizedDividers.js').default,\n        raw: require('!raw-loader!../components/toggle-button/CustomizedDividers.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Accessibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-20 mt-20 mb-10 font-700\",\n      component: \"h3\",\n      children: \"ARIA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ToggleButtonGroup has \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `role=\"group\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }, this), \". You should provide an accessible label with \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `aria-label=\"label\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 22\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `aria-labelledby=\"id\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 59\n        }, this), \" or\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `<label>`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ToggleButton sets \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `aria-pressed=\"<bool>\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this), \" according to the button state. You should label each button with \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"aria-label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 45\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-20 mt-20 mb-10 font-700\",\n      component: \"h3\",\n      children: \"Keyboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"At present, toggle buttons are in DOM order. Navigate between them with the tab key. The button behavior follows standard keyboard semantics.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ToggleButtonDoc;\nexport default ToggleButtonDoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtonDoc\");","map":{"version":3,"names":["FuseExample","FuseHighlight","FuseSvgIcon","Button","Typography","ToggleButtonDoc","props","require","default"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/pages/ToggleButton.js"],"sourcesContent":["import FuseExample from '@fuse/core/FuseExample';\r\nimport FuseHighlight from '@fuse/core/FuseHighlight';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n/* eslint import/no-webpack-loader-syntax: off */\r\n/* eslint import/extensions: off */\r\n/* eslint no-unused-vars: off */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\n\r\nfunction ToggleButtonDoc(props) {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-1 grow-0 items-center justify-end\">\r\n        <Button\r\n          className=\"normal-case\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          component=\"a\"\r\n          href=\"https://mui.com/components/toggle-button\"\r\n          target=\"_blank\"\r\n          role=\"button\"\r\n          startIcon={<FuseSvgIcon>heroicons-outline:external-link</FuseSvgIcon>}\r\n        >\r\n          Reference\r\n        </Button>\r\n      </div>\r\n      <Typography className=\"text-40 my-16 font-700\" component=\"h1\">\r\n        Toggle button\r\n      </Typography>\r\n      <Typography className=\"description\">\r\n        Toggle buttons can be used to group related options.\r\n      </Typography>\r\n\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        To emphasize groups of related Toggle buttons, a group should share a common container. The{' '}\r\n        <code>ToggleButtonGroup</code> controls the selected state of its child buttons when given\r\n        its own <code>value</code> prop.\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Exclusive selection\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        With exclusive selection, selecting one option deselects any other.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        In this example, text justification toggle buttons present options for left, center, right,\r\n        and fully justified text (disabled), with only one item available for selection at a time.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <strong>Note</strong>: Exclusive selection does not enforce that a button must be active.\r\n        For that effect see <a href=\"#enforce-value-set\">enforce value set</a>.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ToggleButtons.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/ToggleButtons.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/ToggleButtons.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Multiple selection\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        Multiple selection allows for logically-grouped options, like bold, italic, and underline,\r\n        to have multiple options selected.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ToggleButtonsMultiple.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/ToggleButtonsMultiple.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/ToggleButtonsMultiple.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Size\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        For larger or smaller buttons, use the <code>size</code> prop.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ToggleButtonSizes.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/ToggleButtonSizes.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/ToggleButtonSizes.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Color\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ColorToggleButton.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/ColorToggleButton.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/ColorToggleButton.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Vertical buttons\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        The buttons can be stacked vertically with the <code>orientation</code> prop set to\r\n        &quot;vertical&quot;.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"VerticalToggleButtons.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/VerticalToggleButtons.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/VerticalToggleButtons.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Enforce value set\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        If you want to enforce that at least one button must be active, you can adapt your\r\n        handleChange function.\r\n      </Typography>\r\n\r\n      <FuseHighlight component=\"pre\" className=\"language-jsx\">\r\n        {` \r\nconst handleAlignment = (event, newAlignment) => {\r\n  if (newAlignment !== null) {\r\n    setAlignment(newAlignment);\r\n  }\r\n};\r\n\r\nconst handleDevices = (event, newDevices) => {\r\n  if (newDevices.length) {\r\n    setDevices(newDevices);\r\n  }\r\n};\r\n`}\r\n      </FuseHighlight>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ToggleButtonNotEmpty.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/ToggleButtonNotEmpty.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/ToggleButtonNotEmpty.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Standalone toggle button\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"StandaloneToggleButton.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/StandaloneToggleButton.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/StandaloneToggleButton.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Customization\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        Here is an example of customizing the component. You can learn more about this in the{' '}\r\n        <a href=\"/material-ui/customization/how-to-customize/\">overrides documentation page</a>.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"CustomizedDividers.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/toggle-button/CustomizedDividers.js').default}\r\n          raw={require('!raw-loader!../components/toggle-button/CustomizedDividers.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Accessibility\r\n      </Typography>\r\n      <Typography className=\"text-20 mt-20 mb-10 font-700\" component=\"h3\">\r\n        ARIA\r\n      </Typography>\r\n      <ul>\r\n        <li>\r\n          ToggleButtonGroup has <code>{`role=\"group\"`}</code>. You should provide an accessible\r\n          label with <code>{`aria-label=\"label\"`}</code>, <code>{`aria-labelledby=\"id\"`}</code> or{' '}\r\n          <code>{`<label>`}</code>.\r\n        </li>\r\n        <li>\r\n          ToggleButton sets <code>{`aria-pressed=\"<bool>\"`}</code> according to the button state.\r\n          You should label each button with <code>aria-label</code>.\r\n        </li>\r\n      </ul>\r\n      <Typography className=\"text-20 mt-20 mb-10 font-700\" component=\"h3\">\r\n        Keyboard\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        At present, toggle buttons are in DOM order. Navigate between them with the tab key. The\r\n        button behavior follows standard keyboard semantics.\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToggleButtonDoc;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}