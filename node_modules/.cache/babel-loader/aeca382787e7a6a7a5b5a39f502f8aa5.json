{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\pages\\\\Checkboxes.js\";\nimport FuseExample from '@fuse/core/FuseExample';\nimport FuseHighlight from '@fuse/core/FuseHighlight';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n/* eslint import/no-webpack-loader-syntax: off */\n\n/* eslint import/extensions: off */\n\n/* eslint no-unused-vars: off */\n\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CheckboxesDoc(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 grow-0 items-center justify-end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"normal-case\",\n        variant: \"contained\",\n        color: \"secondary\",\n        component: \"a\",\n        href: \"https://mui.com/components/checkboxes\",\n        target: \"_blank\",\n        role: \"button\",\n        startIcon: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n          children: \"heroicons-outline:external-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this),\n        children: \"Reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-40 my-16 font-700\",\n      component: \"h1\",\n      children: \"Checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"description\",\n      children: \"Checkboxes allow the user to select one or more items from a set.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"Checkboxes can be used to turn an option on or off.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"If you have multiple options appearing in a list, you can preserve space by using checkboxes instead of on/off switches. If you have a single option, avoid using a checkbox and use an on/off switch instead.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Basic checkboxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"Checkboxes.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/Checkboxes.js').default,\n        raw: require('!raw-loader!../components/checkboxes/Checkboxes.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"You can provide a label to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }, this), \" thanks to the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"FormControlLabel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" component.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"CheckboxLabels.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/CheckboxLabels.js').default,\n        raw: require('!raw-loader!../components/checkboxes/CheckboxLabels.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"Use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \" prop or customize the font size of the svg icons to change the size of the checkboxes.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"SizeCheckboxes.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/SizeCheckboxes.js').default,\n        raw: require('!raw-loader!../components/checkboxes/SizeCheckboxes.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ColorCheckboxes.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/ColorCheckboxes.js').default,\n        raw: require('!raw-loader!../components/checkboxes/ColorCheckboxes.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"IconCheckboxes.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/IconCheckboxes.js').default,\n        raw: require('!raw-loader!../components/checkboxes/IconCheckboxes.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Controlled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"You can control the checkbox with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 47\n      }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"onChange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 72\n      }, this), \" props:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ControlledCheckbox.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/ControlledCheckbox.js').default,\n        raw: require('!raw-loader!../components/checkboxes/ControlledCheckbox.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Indeterminate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"A checkbox input can only have two states in a form: checked or unchecked. It either submits its value or doesn't. Visually, there are \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"three\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 55\n      }, this), \" states a checkbox can be in: checked, unchecked, or indeterminate.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"IndeterminateCheckbox.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/IndeterminateCheckbox.js').default,\n        raw: require('!raw-loader!../components/checkboxes/IndeterminateCheckbox.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\":::warning \\u26A0\\uFE0F When indeterminate is set, the value of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 67\n      }, this), \" prop only impacts the form submitted values. It has no accessibility or UX implications. :::\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"FormGroup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"FormGroup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), \" is a helpful wrapper used to group selection control components.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"CheckboxesGroup.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/CheckboxesGroup.js').default,\n        raw: require('!raw-loader!../components/checkboxes/CheckboxesGroup.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Label placement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"You can change the placement of the label:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"FormControlLabelPosition.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/FormControlLabelPosition.js').default,\n        raw: require('!raw-loader!../components/checkboxes/FormControlLabelPosition.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Customization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"Here is an example of customizing the component. You can learn more about this in the\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/material-ui/customization/how-to-customize/\",\n        children: \"overrides documentation page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"CustomizedCheckbox.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/checkboxes/CustomizedCheckbox.js').default,\n        raw: require('!raw-loader!../components/checkboxes/CustomizedCheckbox.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"\\uD83C\\uDFA8 If you are looking for inspiration, you can check\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://mui-treasury.com/styles/checkbox/\",\n        children: \"MUI Treasury's customization examples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"When to use\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/\",\n          children: \"Checkboxes vs. Radio Buttons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://uxplanet.org/checkbox-vs-toggle-switch-7fc6e83f10b8\",\n          children: \"Checkboxes vs. Switches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Accessibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"(WAI-ARIA:\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.w3.org/TR/wai-aria-practices/#checkbox\",\n        children: \"https://www.w3.org/TR/wai-aria-practices/#checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"All form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `<label>`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 62\n        }, this), \" element (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/material-ui/api/form-control-label/\",\n          children: \"FormControlLabel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), \").\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"When a label can't be used, it's necessary to add an attribute directly to the input component. In this case, you can apply the additional attribute (e.g.\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"aria-label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"aria-labelledby\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 36\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 66\n        }, this), \") via the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"inputProps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), \" prop.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FuseHighlight, {\n      component: \"pre\",\n      className: \"language-jsx\",\n      children: ` \n<Checkbox\n  value=\"checkedA\"\n  inputProps={{\n    'aria-label': 'Checkbox A',\n  \n/>\n`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = CheckboxesDoc;\nexport default CheckboxesDoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxesDoc\");","map":{"version":3,"names":["FuseExample","FuseHighlight","FuseSvgIcon","Button","Typography","CheckboxesDoc","props","require","default"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/pages/Checkboxes.js"],"sourcesContent":["import FuseExample from '@fuse/core/FuseExample';\r\nimport FuseHighlight from '@fuse/core/FuseHighlight';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n/* eslint import/no-webpack-loader-syntax: off */\r\n/* eslint import/extensions: off */\r\n/* eslint no-unused-vars: off */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\n\r\nfunction CheckboxesDoc(props) {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-1 grow-0 items-center justify-end\">\r\n        <Button\r\n          className=\"normal-case\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          component=\"a\"\r\n          href=\"https://mui.com/components/checkboxes\"\r\n          target=\"_blank\"\r\n          role=\"button\"\r\n          startIcon={<FuseSvgIcon>heroicons-outline:external-link</FuseSvgIcon>}\r\n        >\r\n          Reference\r\n        </Button>\r\n      </div>\r\n      <Typography className=\"text-40 my-16 font-700\" component=\"h1\">\r\n        Checkbox\r\n      </Typography>\r\n      <Typography className=\"description\">\r\n        Checkboxes allow the user to select one or more items from a set.\r\n      </Typography>\r\n\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        Checkboxes can be used to turn an option on or off.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        If you have multiple options appearing in a list, you can preserve space by using checkboxes\r\n        instead of on/off switches. If you have a single option, avoid using a checkbox and use an\r\n        on/off switch instead.\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Basic checkboxes\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"Checkboxes.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/Checkboxes.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/Checkboxes.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Label\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        You can provide a label to the <code>Checkbox</code> thanks to the{' '}\r\n        <code>FormControlLabel</code> component.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"CheckboxLabels.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/CheckboxLabels.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/CheckboxLabels.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Size\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        Use the <code>size</code> prop or customize the font size of the svg icons to change the\r\n        size of the checkboxes.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"SizeCheckboxes.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/SizeCheckboxes.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/SizeCheckboxes.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Color\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ColorCheckboxes.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/ColorCheckboxes.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/ColorCheckboxes.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Icon\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"IconCheckboxes.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/IconCheckboxes.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/IconCheckboxes.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Controlled\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        You can control the checkbox with the <code>checked</code> and <code>onChange</code> props:\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ControlledCheckbox.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/ControlledCheckbox.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/ControlledCheckbox.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Indeterminate\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        A checkbox input can only have two states in a form: checked or unchecked. It either submits\r\n        its value or doesn&#39;t. Visually, there are <strong>three</strong> states a checkbox can\r\n        be in: checked, unchecked, or indeterminate.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"IndeterminateCheckbox.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/IndeterminateCheckbox.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/IndeterminateCheckbox.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        :::warning ⚠️ When indeterminate is set, the value of the <code>checked</code> prop only\r\n        impacts the form submitted values. It has no accessibility or UX implications. :::\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        FormGroup\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <code>FormGroup</code> is a helpful wrapper used to group selection control components.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"CheckboxesGroup.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/CheckboxesGroup.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/CheckboxesGroup.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Label placement\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        You can change the placement of the label:\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"FormControlLabelPosition.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/FormControlLabelPosition.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/FormControlLabelPosition.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Customization\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        Here is an example of customizing the component. You can learn more about this in the{' '}\r\n        <a href=\"/material-ui/customization/how-to-customize/\">overrides documentation page</a>.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"CustomizedCheckbox.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/checkboxes/CustomizedCheckbox.js').default}\r\n          raw={require('!raw-loader!../components/checkboxes/CustomizedCheckbox.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        🎨 If you are looking for inspiration, you can check{' '}\r\n        <a href=\"https://mui-treasury.com/styles/checkbox/\">\r\n          MUI Treasury&#39;s customization examples\r\n        </a>\r\n        .\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        When to use\r\n      </Typography>\r\n      <ul>\r\n        <li>\r\n          <a href=\"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/\">\r\n            Checkboxes vs. Radio Buttons\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://uxplanet.org/checkbox-vs-toggle-switch-7fc6e83f10b8\">\r\n            Checkboxes vs. Switches\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Accessibility\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        (WAI-ARIA:{' '}\r\n        <a href=\"https://www.w3.org/TR/wai-aria-practices/#checkbox\">\r\n          https://www.w3.org/TR/wai-aria-practices/#checkbox\r\n        </a>\r\n        )\r\n      </Typography>\r\n      <ul>\r\n        <li>\r\n          All form controls should have labels, and this includes radio buttons, checkboxes, and\r\n          switches. In most cases, this is done by using the <code>{`<label>`}</code> element (\r\n          <a href=\"/material-ui/api/form-control-label/\">FormControlLabel</a>).\r\n        </li>\r\n        <li>\r\n          When a label can&#39;t be used, it&#39;s necessary to add an attribute directly to the\r\n          input component. In this case, you can apply the additional attribute (e.g.{' '}\r\n          <code>aria-label</code>, <code>aria-labelledby</code>, <code>title</code>) via the{' '}\r\n          <code>inputProps</code> prop.\r\n        </li>\r\n      </ul>\r\n\r\n      <FuseHighlight component=\"pre\" className=\"language-jsx\">\r\n        {` \r\n<Checkbox\r\n  value=\"checkedA\"\r\n  inputProps={{\r\n    'aria-label': 'Checkbox A',\r\n  \r\n/>\r\n`}\r\n      </FuseHighlight>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckboxesDoc;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}