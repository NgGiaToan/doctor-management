{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\apps\\\\scrumboard\\\\board\\\\board-list\\\\BoardList.js\",\n    _s = $RefreshSig$();\n\nimport Card from '@mui/material/Card';\nimport { lighten, styled } from '@mui/material/styles';\nimport CardContent from '@mui/material/CardContent';\nimport clsx from 'clsx';\nimport { useRef } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { useSelector } from 'react-redux';\nimport BoardAddCard from '../board-card/BoardAddCard';\nimport BoardCard from '../board-card/BoardCard';\nimport BoardListHeader from './BoardListHeader';\nimport { selectListById } from '../../store/listsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    transitionProperty: 'box-shadow',\n    transitionDuration: theme.transitions.duration.short,\n    transitionTimingFunction: theme.transitions.easing.easeInOut\n  };\n});\n_c = StyledCard;\n\nfunction BoardList(props) {\n  _s();\n\n  const {\n    listId,\n    cardIds\n  } = props;\n  const contentScrollEl = useRef(null);\n  const list = useSelector(state => selectListById(state, listId));\n\n  function handleCardAdded() {\n    contentScrollEl.current.scrollTop = contentScrollEl.current.scrollHeight;\n  }\n\n  if (!list) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: listId,\n    index: props.index,\n    type: \"list\",\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      children: /*#__PURE__*/_jsxDEV(StyledCard, {\n        sx: {\n          backgroundColor: theme => theme.palette.mode === 'light' ? lighten(theme.palette.background.default, 0.4) : lighten(theme.palette.background.default, 0.02)\n        },\n        className: clsx(snapshot.isDragging ? 'shadow-lg' : 'shadow-0', 'w-256 sm:w-320 mx-8 max-h-full flex flex-col rounded-xl border'),\n        square: true,\n        children: [/*#__PURE__*/_jsxDEV(BoardListHeader, {\n          list: list,\n          cardIds: cardIds,\n          className: \"border-b-1\",\n          handleProps: provided.dragHandleProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"flex flex-col flex-1 flex-auto h-full min-h-0 w-full p-0 overflow-auto\",\n            ref: contentScrollEl,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: listId,\n              type: \"card\",\n              direction: \"vertical\",\n              children: _provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: _provided.innerRef,\n                className: \"flex flex-col w-full h-full px-12 min-h-1\",\n                children: [cardIds.map((cardId, index) => /*#__PURE__*/_jsxDEV(BoardCard, {\n                  cardId: cardId,\n                  index: index,\n                  list: list\n                }, cardId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 25\n                }, this)), _provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-12\",\n          children: /*#__PURE__*/_jsxDEV(BoardAddCard, {\n            listId: listId,\n            onCardAdded: handleCardAdded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoardList, \"4lD8cARVnxTmBw5mbuUQGytTszg=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = BoardList;\nexport default BoardList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"BoardList\");","map":{"version":3,"names":["Card","lighten","styled","CardContent","clsx","useRef","Draggable","Droppable","useSelector","BoardAddCard","BoardCard","BoardListHeader","selectListById","StyledCard","theme","transitionProperty","transitionDuration","transitions","duration","short","transitionTimingFunction","easing","easeInOut","BoardList","props","listId","cardIds","contentScrollEl","list","state","handleCardAdded","current","scrollTop","scrollHeight","index","provided","snapshot","innerRef","draggableProps","backgroundColor","palette","mode","background","default","isDragging","dragHandleProps","_provided","map","cardId","placeholder"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/scrumboard/board/board-list/BoardList.js"],"sourcesContent":["import Card from '@mui/material/Card';\r\nimport { lighten, styled } from '@mui/material/styles';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport clsx from 'clsx';\r\nimport { useRef } from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { useSelector } from 'react-redux';\r\nimport BoardAddCard from '../board-card/BoardAddCard';\r\nimport BoardCard from '../board-card/BoardCard';\r\nimport BoardListHeader from './BoardListHeader';\r\nimport { selectListById } from '../../store/listsSlice';\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  transitionProperty: 'box-shadow',\r\n  transitionDuration: theme.transitions.duration.short,\r\n  transitionTimingFunction: theme.transitions.easing.easeInOut,\r\n}));\r\n\r\nfunction BoardList(props) {\r\n  const { listId, cardIds } = props;\r\n  const contentScrollEl = useRef(null);\r\n  const list = useSelector((state) => selectListById(state, listId));\r\n\r\n  function handleCardAdded() {\r\n    contentScrollEl.current.scrollTop = contentScrollEl.current.scrollHeight;\r\n  }\r\n\r\n  if (!list) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Draggable draggableId={listId} index={props.index} type=\"list\">\r\n      {(provided, snapshot) => (\r\n        <div ref={provided.innerRef} {...provided.draggableProps}>\r\n          <StyledCard\r\n            sx={{\r\n              backgroundColor: (theme) =>\r\n                theme.palette.mode === 'light'\r\n                  ? lighten(theme.palette.background.default, 0.4)\r\n                  : lighten(theme.palette.background.default, 0.02),\r\n            }}\r\n            className={clsx(\r\n              snapshot.isDragging ? 'shadow-lg' : 'shadow-0',\r\n              'w-256 sm:w-320 mx-8 max-h-full flex flex-col rounded-xl border'\r\n            )}\r\n            square\r\n          >\r\n            <BoardListHeader\r\n              list={list}\r\n              cardIds={cardIds}\r\n              className=\"border-b-1\"\r\n              handleProps={provided.dragHandleProps}\r\n            />\r\n\r\n            <>\r\n              <CardContent\r\n                className=\"flex flex-col flex-1 flex-auto h-full min-h-0 w-full p-0 overflow-auto\"\r\n                ref={contentScrollEl}\r\n              >\r\n                <Droppable droppableId={listId} type=\"card\" direction=\"vertical\">\r\n                  {(_provided) => (\r\n                    <div\r\n                      ref={_provided.innerRef}\r\n                      className=\"flex flex-col w-full h-full px-12 min-h-1\"\r\n                    >\r\n                      {cardIds.map((cardId, index) => (\r\n                        <BoardCard key={cardId} cardId={cardId} index={index} list={list} />\r\n                      ))}\r\n                      {_provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </CardContent>\r\n            </>\r\n\r\n            <div className=\"p-12\">\r\n              <BoardAddCard listId={listId} onCardAdded={handleCardAdded} />\r\n            </div>\r\n          </StyledCard>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default BoardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}