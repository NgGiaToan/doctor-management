{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport _ from '@lodash';\nexport const getFolders = createAsyncThunk('mailboxApp/folders/getFolders', async () => {\n  const response = await axios.get('/api/mailbox/folders');\n  const data = await response.data;\n  return data;\n});\nconst foldersAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectFolders,\n  selectById: selectFolderById\n} = foldersAdapter.getSelectors(state => state.mailboxApp.folders);\nconst foldersSlice = createSlice({\n  name: 'mailboxApp/folders',\n  initialState: foldersAdapter.getInitialState({}),\n  reducers: {},\n  extraReducers: {\n    [getFolders.fulfilled]: foldersAdapter.setAll\n  }\n});\nexport const selectSpamFolderId = createSelector([selectFolders], folders => {\n  var _$find;\n\n  return (_$find = _.find(folders, {\n    slug: 'spam'\n  })) === null || _$find === void 0 ? void 0 : _$find.id;\n});\nexport const selectTrashFolderId = createSelector([selectFolders], folders => {\n  var _$find2;\n\n  return (_$find2 = _.find(folders, {\n    slug: 'trash'\n  })) === null || _$find2 === void 0 ? void 0 : _$find2.id;\n});\nexport default foldersSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSelector","createSlice","axios","_","getFolders","response","get","data","foldersAdapter","selectAll","selectFolders","selectById","selectFolderById","getSelectors","state","mailboxApp","folders","foldersSlice","name","initialState","getInitialState","reducers","extraReducers","fulfilled","setAll","selectSpamFolderId","find","slug","id","selectTrashFolderId","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/mailbox/store/foldersSlice.js"],"sourcesContent":["import {\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSelector,\r\n  createSlice,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport _ from '@lodash';\r\n\r\nexport const getFolders = createAsyncThunk('mailboxApp/folders/getFolders', async () => {\r\n  const response = await axios.get('/api/mailbox/folders');\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nconst foldersAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectFolders, selectById: selectFolderById } =\r\n  foldersAdapter.getSelectors((state) => state.mailboxApp.folders);\r\n\r\nconst foldersSlice = createSlice({\r\n  name: 'mailboxApp/folders',\r\n  initialState: foldersAdapter.getInitialState({}),\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getFolders.fulfilled]: foldersAdapter.setAll,\r\n  },\r\n});\r\n\r\nexport const selectSpamFolderId = createSelector([selectFolders], (folders) => {\r\n  return _.find(folders, { slug: 'spam' })?.id;\r\n});\r\n\r\nexport const selectTrashFolderId = createSelector([selectFolders], (folders) => {\r\n  return _.find(folders, { slug: 'trash' })?.id;\r\n});\r\n\r\nexport default foldersSlice.reducer;\r\n"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,+BAAD,EAAkC,YAAY;EACtF,MAAMO,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,sBAAV,CAAvB;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALyC,CAAnC;AAOP,MAAMC,cAAc,GAAGT,mBAAmB,CAAC,EAAD,CAA1C;AAEA,OAAO,MAAM;EAAEU,SAAS,EAAEC,aAAb;EAA4BC,UAAU,EAAEC;AAAxC,IACXJ,cAAc,CAACK,YAAf,CAA6BC,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,OAAxD,CADK;AAGP,MAAMC,YAAY,GAAGhB,WAAW,CAAC;EAC/BiB,IAAI,EAAE,oBADyB;EAE/BC,YAAY,EAAEX,cAAc,CAACY,eAAf,CAA+B,EAA/B,CAFiB;EAG/BC,QAAQ,EAAE,EAHqB;EAI/BC,aAAa,EAAE;IACb,CAAClB,UAAU,CAACmB,SAAZ,GAAwBf,cAAc,CAACgB;EAD1B;AAJgB,CAAD,CAAhC;AASA,OAAO,MAAMC,kBAAkB,GAAGzB,cAAc,CAAC,CAACU,aAAD,CAAD,EAAmBM,OAAD,IAAa;EAAA;;EAC7E,iBAAOb,CAAC,CAACuB,IAAF,CAAOV,OAAP,EAAgB;IAAEW,IAAI,EAAE;EAAR,CAAhB,CAAP,2CAAO,OAAmCC,EAA1C;AACD,CAF+C,CAAzC;AAIP,OAAO,MAAMC,mBAAmB,GAAG7B,cAAc,CAAC,CAACU,aAAD,CAAD,EAAmBM,OAAD,IAAa;EAAA;;EAC9E,kBAAOb,CAAC,CAACuB,IAAF,CAAOV,OAAP,EAAgB;IAAEW,IAAI,EAAE;EAAR,CAAhB,CAAP,4CAAO,QAAoCC,EAA3C;AACD,CAFgD,CAA1C;AAIP,eAAeX,YAAY,CAACa,OAA5B"},"metadata":{},"sourceType":"module"}