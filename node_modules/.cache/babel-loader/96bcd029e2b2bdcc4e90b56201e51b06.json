{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getUserData = createAsyncThunk('chatApp/user/getUserData', async () => {\n  const response = await axios.get('/api/chat/user');\n  const data = await response.data;\n  return data;\n});\nexport const updateUserData = createAsyncThunk('chatApp/user/updateUserData', async newData => {\n  const response = await axios.post('/api/chat/user', newData);\n  const data = await response.data;\n  return data;\n});\nconst userSlice = createSlice({\n  name: 'chatApp/user',\n  initialState: null,\n  extraReducers: {\n    [getUserData.fulfilled]: (state, action) => action.payload,\n    [updateUserData.fulfilled]: (state, action) => action.payload\n  }\n});\nexport const selectUser = _ref => {\n  let {\n    chatApp\n  } = _ref;\n  return chatApp.user;\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","getUserData","response","get","data","updateUserData","newData","post","userSlice","name","initialState","extraReducers","fulfilled","state","action","payload","selectUser","chatApp","user","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/chat/store/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getUserData = createAsyncThunk('chatApp/user/getUserData', async () => {\r\n  const response = await axios.get('/api/chat/user');\r\n\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const updateUserData = createAsyncThunk('chatApp/user/updateUserData', async (newData) => {\r\n  const response = await axios.post('/api/chat/user', newData);\r\n\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: 'chatApp/user',\r\n  initialState: null,\r\n  extraReducers: {\r\n    [getUserData.fulfilled]: (state, action) => action.payload,\r\n    [updateUserData.fulfilled]: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const selectUser = ({ chatApp }) => chatApp.user;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,0BAAD,EAA6B,YAAY;EAClF,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,gBAAV,CAAvB;EAEA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAN0C,CAApC;AAQP,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAAC,6BAAD,EAAgC,MAAOQ,OAAP,IAAmB;EAC/F,MAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACO,IAAN,CAAW,gBAAX,EAA6BD,OAA7B,CAAvB;EAEA,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAN6C,CAAvC;AAQP,MAAMI,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,cADsB;EAE5BC,YAAY,EAAE,IAFc;EAG5BC,aAAa,EAAE;IACb,CAACV,WAAW,CAACW,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADtC;IAEb,CAACV,cAAc,CAACO,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;EAFzC;AAHa,CAAD,CAA7B;AASA,OAAO,MAAMC,UAAU,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAiBA,OAAO,CAACC,IAAzB;AAAA,CAAnB;AAEP,eAAeV,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}