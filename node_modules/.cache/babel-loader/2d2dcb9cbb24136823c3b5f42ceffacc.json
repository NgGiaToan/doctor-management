{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Oas2Types = void 0;\n\nconst _1 = require(\".\");\n\nconst responseCodeRegexp = /^[0-9][0-9Xx]{2}$/;\nconst DefinitionRoot = {\n  properties: {\n    swagger: {\n      type: 'string'\n    },\n    info: 'Info',\n    host: {\n      type: 'string'\n    },\n    basePath: {\n      type: 'string'\n    },\n    schemes: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    consumes: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    produces: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    paths: 'PathMap',\n    definitions: 'NamedSchemas',\n    parameters: 'NamedParameters',\n    responses: 'NamedResponses',\n    securityDefinitions: 'NamedSecuritySchemes',\n    security: _1.listOf('SecurityRequirement'),\n    tags: _1.listOf('Tag'),\n    externalDocs: 'ExternalDocs'\n  },\n  required: ['swagger', 'paths', 'info']\n};\nconst Info = {\n  properties: {\n    title: {\n      type: 'string'\n    },\n    description: {\n      type: 'string'\n    },\n    termsOfService: {\n      type: 'string'\n    },\n    contact: 'Contact',\n    license: 'License',\n    version: {\n      type: 'string'\n    }\n  },\n  required: ['title', 'version']\n};\nconst Contact = {\n  properties: {\n    name: {\n      type: 'string'\n    },\n    url: {\n      type: 'string'\n    },\n    email: {\n      type: 'string'\n    }\n  }\n};\nconst License = {\n  properties: {\n    name: {\n      type: 'string'\n    },\n    url: {\n      type: 'string'\n    }\n  },\n  required: ['name']\n};\nconst PathMap = {\n  properties: {},\n  additionalProperties: (_value, key) => key.startsWith('/') ? 'PathItem' : undefined\n};\nconst PathItem = {\n  properties: {\n    $ref: {\n      type: 'string'\n    },\n    parameters: _1.listOf('Parameter'),\n    get: 'Operation',\n    put: 'Operation',\n    post: 'Operation',\n    delete: 'Operation',\n    options: 'Operation',\n    head: 'Operation',\n    patch: 'Operation'\n  }\n};\nconst Operation = {\n  properties: {\n    tags: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    summary: {\n      type: 'string'\n    },\n    description: {\n      type: 'string'\n    },\n    externalDocs: 'ExternalDocs',\n    operationId: {\n      type: 'string'\n    },\n    consumes: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    produces: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    parameters: _1.listOf('Parameter'),\n    responses: 'ResponsesMap',\n    schemes: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    deprecated: {\n      type: 'boolean'\n    },\n    security: _1.listOf('SecurityRequirement'),\n    'x-codeSamples': _1.listOf('XCodeSample'),\n    'x-code-samples': _1.listOf('XCodeSample') // deprecated\n\n  },\n  required: ['responses']\n};\nconst XCodeSample = {\n  properties: {\n    lang: {\n      type: 'string'\n    },\n    label: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  }\n};\nconst ExternalDocs = {\n  properties: {\n    description: {\n      type: 'string'\n    },\n    url: {\n      type: 'string'\n    }\n  },\n  required: ['url']\n};\nconst Parameter = {\n  properties: {\n    name: {\n      type: 'string'\n    },\n    in: {\n      type: 'string',\n      enum: ['query', 'header', 'path', 'formData', 'body']\n    },\n    description: {\n      type: 'string'\n    },\n    required: {\n      type: 'boolean'\n    },\n    schema: 'Schema',\n    type: {\n      type: 'string',\n      enum: ['string', 'number', 'integer', 'boolean', 'array', 'file']\n    },\n    format: {\n      type: 'string'\n    },\n    allowEmptyValue: {\n      type: 'boolean'\n    },\n    items: 'ParameterItems',\n    collectionFormat: {\n      type: 'string',\n      enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi']\n    },\n    default: null,\n    maximum: {\n      type: 'integer'\n    },\n    exclusiveMaximum: {\n      type: 'boolean'\n    },\n    minimum: {\n      type: 'integer'\n    },\n    exclusiveMinimum: {\n      type: 'boolean'\n    },\n    maxLength: {\n      type: 'integer'\n    },\n    minLength: {\n      type: 'integer'\n    },\n    pattern: {\n      type: 'string'\n    },\n    maxItems: {\n      type: 'integer'\n    },\n    minItems: {\n      type: 'integer'\n    },\n    uniqueItems: {\n      type: 'boolean'\n    },\n    enum: {\n      type: 'array'\n    },\n    multipleOf: {\n      type: 'number'\n    }\n  },\n\n  required(value) {\n    if (!value || !value.in) {\n      return ['name', 'in'];\n    }\n\n    if (value.in === 'body') {\n      return ['name', 'in', 'schema'];\n    } else {\n      if (value.type === 'array') {\n        return ['name', 'in', 'type', 'items'];\n      } else {\n        return ['name', 'in', 'type'];\n      }\n    }\n  }\n\n};\nconst ParameterItems = {\n  properties: {\n    type: {\n      type: 'string',\n      enum: ['string', 'number', 'integer', 'boolean', 'array']\n    },\n    format: {\n      type: 'string'\n    },\n    items: 'ParameterItems',\n    collectionFormat: {\n      type: 'string',\n      enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi']\n    },\n    default: null,\n    maximum: {\n      type: 'integer'\n    },\n    exclusiveMaximum: {\n      type: 'boolean'\n    },\n    minimum: {\n      type: 'integer'\n    },\n    exclusiveMinimum: {\n      type: 'boolean'\n    },\n    maxLength: {\n      type: 'integer'\n    },\n    minLength: {\n      type: 'integer'\n    },\n    pattern: {\n      type: 'string'\n    },\n    maxItems: {\n      type: 'integer'\n    },\n    minItems: {\n      type: 'integer'\n    },\n    uniqueItems: {\n      type: 'boolean'\n    },\n    enum: {\n      type: 'array'\n    },\n    multipleOf: {\n      type: 'number'\n    }\n  },\n\n  required(value) {\n    if (value && value.type === 'array') {\n      return ['type', 'items'];\n    } else {\n      return ['type'];\n    }\n  }\n\n};\nconst ResponsesMap = {\n  properties: {\n    default: 'Response'\n  },\n  additionalProperties: (_v, key) => responseCodeRegexp.test(key) ? 'Response' : undefined\n};\nconst Response = {\n  properties: {\n    description: {\n      type: 'string'\n    },\n    schema: 'Schema',\n    headers: _1.mapOf('Header'),\n    examples: 'Examples'\n  },\n  required: ['description']\n};\nconst Examples = {\n  properties: {},\n  additionalProperties: {\n    isExample: true\n  }\n};\nconst Header = {\n  properties: {\n    description: {\n      type: 'string'\n    },\n    type: {\n      type: 'string',\n      enum: ['string', 'number', 'integer', 'boolean', 'array']\n    },\n    format: {\n      type: 'string'\n    },\n    items: 'ParameterItems',\n    collectionFormat: {\n      type: 'string',\n      enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi']\n    },\n    default: null,\n    maximum: {\n      type: 'integer'\n    },\n    exclusiveMaximum: {\n      type: 'boolean'\n    },\n    minimum: {\n      type: 'integer'\n    },\n    exclusiveMinimum: {\n      type: 'boolean'\n    },\n    maxLength: {\n      type: 'integer'\n    },\n    minLength: {\n      type: 'integer'\n    },\n    pattern: {\n      type: 'string'\n    },\n    maxItems: {\n      type: 'integer'\n    },\n    minItems: {\n      type: 'integer'\n    },\n    uniqueItems: {\n      type: 'boolean'\n    },\n    enum: {\n      type: 'array'\n    },\n    multipleOf: {\n      type: 'number'\n    }\n  },\n\n  required(value) {\n    if (value && value.type === 'array') {\n      return ['type', 'items'];\n    } else {\n      return ['type'];\n    }\n  }\n\n};\nconst Tag = {\n  properties: {\n    name: {\n      type: 'string'\n    },\n    description: {\n      type: 'string'\n    },\n    externalDocs: 'ExternalDocs'\n  },\n  required: ['name']\n};\nconst Schema = {\n  properties: {\n    format: {\n      type: 'string'\n    },\n    title: {\n      type: 'string'\n    },\n    description: {\n      type: 'string'\n    },\n    default: null,\n    multipleOf: {\n      type: 'number'\n    },\n    maximum: {\n      type: 'number'\n    },\n    minimum: {\n      type: 'number'\n    },\n    exclusiveMaximum: {\n      type: 'boolean'\n    },\n    exclusiveMinimum: {\n      type: 'boolean'\n    },\n    maxLength: {\n      type: 'number'\n    },\n    minLength: {\n      type: 'number'\n    },\n    pattern: {\n      type: 'string'\n    },\n    maxItems: {\n      type: 'number'\n    },\n    minItems: {\n      type: 'number'\n    },\n    uniqueItems: {\n      type: 'boolean'\n    },\n    maxProperties: {\n      type: 'number'\n    },\n    minProperties: {\n      type: 'number'\n    },\n    required: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    enum: {\n      type: 'array'\n    },\n    type: {\n      type: 'string',\n      enum: ['object', 'array', 'string', 'number', 'integer', 'boolean', 'null']\n    },\n    items: value => {\n      if (Array.isArray(value)) {\n        return _1.listOf('Schema');\n      } else {\n        return 'Schema';\n      }\n    },\n    allOf: _1.listOf('Schema'),\n    properties: 'SchemaProperties',\n    additionalProperties: value => {\n      if (typeof value === 'boolean') {\n        return {\n          type: 'boolean'\n        };\n      } else {\n        return 'Schema';\n      }\n    },\n    discriminator: {\n      type: 'string'\n    },\n    readOnly: {\n      type: 'boolean'\n    },\n    xml: 'Xml',\n    externalDocs: 'ExternalDocs',\n    example: {\n      isExample: true\n    }\n  }\n};\nconst SchemaProperties = {\n  properties: {},\n  additionalProperties: 'Schema'\n};\nconst Xml = {\n  properties: {\n    name: {\n      type: 'string'\n    },\n    namespace: {\n      type: 'string'\n    },\n    prefix: {\n      type: 'string'\n    },\n    attribute: {\n      type: 'boolean'\n    },\n    wrapped: {\n      type: 'boolean'\n    }\n  }\n};\nconst SecurityScheme = {\n  properties: {\n    type: {\n      enum: ['basic', 'apiKey', 'oauth2']\n    },\n    description: {\n      type: 'string'\n    },\n    name: {\n      type: 'string'\n    },\n    in: {\n      type: 'string',\n      enum: ['query', 'header']\n    },\n    flow: {\n      enum: ['implicit', 'password', 'application', 'accessCode']\n    },\n    authorizationUrl: {\n      type: 'string'\n    },\n    tokenUrl: {\n      type: 'string'\n    },\n    scopes: {\n      type: 'object',\n      additionalProperties: {\n        type: 'string'\n      }\n    }\n  },\n\n  required(value) {\n    switch (value === null || value === void 0 ? void 0 : value.type) {\n      case 'apiKey':\n        return ['type', 'name', 'in'];\n\n      case 'oauth2':\n        switch (value === null || value === void 0 ? void 0 : value.flow) {\n          case 'implicit':\n            return ['type', 'flow', 'authorizationUrl', 'scopes'];\n\n          case 'accessCode':\n            return ['type', 'flow', 'authorizationUrl', 'tokenUrl', 'scopes'];\n\n          case 'application':\n          case 'password':\n            return ['type', 'flow', 'tokenUrl', 'scopes'];\n\n          default:\n            return ['type', 'flow', 'scopes'];\n        }\n\n      default:\n        return ['type'];\n    }\n  },\n\n  allowed(value) {\n    switch (value === null || value === void 0 ? void 0 : value.type) {\n      case 'basic':\n        return ['type', 'description'];\n\n      case 'apiKey':\n        return ['type', 'name', 'in', 'description'];\n\n      case 'oauth2':\n        switch (value === null || value === void 0 ? void 0 : value.flow) {\n          case 'implicit':\n            return ['type', 'flow', 'authorizationUrl', 'description', 'scopes'];\n\n          case 'accessCode':\n            return ['type', 'flow', 'authorizationUrl', 'tokenUrl', 'description', 'scopes'];\n\n          case 'application':\n          case 'password':\n            return ['type', 'flow', 'tokenUrl', 'description', 'scopes'];\n\n          default:\n            return ['type', 'flow', 'tokenUrl', 'authorizationUrl', 'description', 'scopes'];\n        }\n\n      default:\n        return ['type', 'description'];\n    }\n  },\n\n  extensionsPrefix: 'x-'\n};\nconst SecurityRequirement = {\n  properties: {},\n  additionalProperties: {\n    type: 'array',\n    items: {\n      type: 'string'\n    }\n  }\n};\nexports.Oas2Types = {\n  DefinitionRoot,\n  Tag,\n  ExternalDocs,\n  SecurityRequirement,\n  Info,\n  Contact,\n  License,\n  PathMap,\n  PathItem,\n  Parameter,\n  ParameterItems,\n  Operation,\n  Examples,\n  Header,\n  ResponsesMap,\n  Response,\n  Schema,\n  Xml,\n  SchemaProperties,\n  NamedSchemas: _1.mapOf('Schema'),\n  NamedResponses: _1.mapOf('Response'),\n  NamedParameters: _1.mapOf('Parameter'),\n  NamedSecuritySchemes: _1.mapOf('SecurityScheme'),\n  SecurityScheme,\n  XCodeSample\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","Oas2Types","_1","require","responseCodeRegexp","DefinitionRoot","properties","swagger","type","info","host","basePath","schemes","items","consumes","produces","paths","definitions","parameters","responses","securityDefinitions","security","listOf","tags","externalDocs","required","Info","title","description","termsOfService","contact","license","version","Contact","name","url","email","License","PathMap","additionalProperties","_value","key","startsWith","undefined","PathItem","$ref","get","put","post","delete","options","head","patch","Operation","summary","operationId","deprecated","XCodeSample","lang","label","source","ExternalDocs","Parameter","in","enum","schema","format","allowEmptyValue","collectionFormat","default","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","maxItems","minItems","uniqueItems","multipleOf","ParameterItems","ResponsesMap","_v","test","Response","headers","mapOf","examples","Examples","isExample","Header","Tag","Schema","maxProperties","minProperties","Array","isArray","allOf","discriminator","readOnly","xml","example","SchemaProperties","Xml","namespace","prefix","attribute","wrapped","SecurityScheme","flow","authorizationUrl","tokenUrl","scopes","allowed","extensionsPrefix","SecurityRequirement","NamedSchemas","NamedResponses","NamedParameters","NamedSecuritySchemes"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/types/oas2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Oas2Types = void 0;\nconst _1 = require(\".\");\nconst responseCodeRegexp = /^[0-9][0-9Xx]{2}$/;\nconst DefinitionRoot = {\n    properties: {\n        swagger: { type: 'string' },\n        info: 'Info',\n        host: { type: 'string' },\n        basePath: { type: 'string' },\n        schemes: { type: 'array', items: { type: 'string' } },\n        consumes: { type: 'array', items: { type: 'string' } },\n        produces: { type: 'array', items: { type: 'string' } },\n        paths: 'PathMap',\n        definitions: 'NamedSchemas',\n        parameters: 'NamedParameters',\n        responses: 'NamedResponses',\n        securityDefinitions: 'NamedSecuritySchemes',\n        security: _1.listOf('SecurityRequirement'),\n        tags: _1.listOf('Tag'),\n        externalDocs: 'ExternalDocs',\n    },\n    required: ['swagger', 'paths', 'info'],\n};\nconst Info = {\n    properties: {\n        title: { type: 'string' },\n        description: { type: 'string' },\n        termsOfService: { type: 'string' },\n        contact: 'Contact',\n        license: 'License',\n        version: { type: 'string' },\n    },\n    required: ['title', 'version'],\n};\nconst Contact = {\n    properties: {\n        name: { type: 'string' },\n        url: { type: 'string' },\n        email: { type: 'string' },\n    },\n};\nconst License = {\n    properties: {\n        name: { type: 'string' },\n        url: { type: 'string' },\n    },\n    required: ['name'],\n};\nconst PathMap = {\n    properties: {},\n    additionalProperties: (_value, key) => key.startsWith('/') ? 'PathItem' : undefined,\n};\nconst PathItem = {\n    properties: {\n        $ref: { type: 'string' },\n        parameters: _1.listOf('Parameter'),\n        get: 'Operation',\n        put: 'Operation',\n        post: 'Operation',\n        delete: 'Operation',\n        options: 'Operation',\n        head: 'Operation',\n        patch: 'Operation',\n    },\n};\nconst Operation = {\n    properties: {\n        tags: { type: 'array', items: { type: 'string' } },\n        summary: { type: 'string' },\n        description: { type: 'string' },\n        externalDocs: 'ExternalDocs',\n        operationId: { type: 'string' },\n        consumes: { type: 'array', items: { type: 'string' } },\n        produces: { type: 'array', items: { type: 'string' } },\n        parameters: _1.listOf('Parameter'),\n        responses: 'ResponsesMap',\n        schemes: { type: 'array', items: { type: 'string' } },\n        deprecated: { type: 'boolean' },\n        security: _1.listOf('SecurityRequirement'),\n        'x-codeSamples': _1.listOf('XCodeSample'),\n        'x-code-samples': _1.listOf('XCodeSample'), // deprecated\n    },\n    required: ['responses'],\n};\nconst XCodeSample = {\n    properties: {\n        lang: { type: 'string' },\n        label: { type: 'string' },\n        source: { type: 'string' },\n    },\n};\nconst ExternalDocs = {\n    properties: {\n        description: { type: 'string' },\n        url: { type: 'string' },\n    },\n    required: ['url'],\n};\nconst Parameter = {\n    properties: {\n        name: { type: 'string' },\n        in: { type: 'string', enum: ['query', 'header', 'path', 'formData', 'body'] },\n        description: { type: 'string' },\n        required: { type: 'boolean' },\n        schema: 'Schema',\n        type: { type: 'string', enum: ['string', 'number', 'integer', 'boolean', 'array', 'file'] },\n        format: { type: 'string' },\n        allowEmptyValue: { type: 'boolean' },\n        items: 'ParameterItems',\n        collectionFormat: { type: 'string', enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi'] },\n        default: null,\n        maximum: { type: 'integer' },\n        exclusiveMaximum: { type: 'boolean' },\n        minimum: { type: 'integer' },\n        exclusiveMinimum: { type: 'boolean' },\n        maxLength: { type: 'integer' },\n        minLength: { type: 'integer' },\n        pattern: { type: 'string' },\n        maxItems: { type: 'integer' },\n        minItems: { type: 'integer' },\n        uniqueItems: { type: 'boolean' },\n        enum: { type: 'array' },\n        multipleOf: { type: 'number' },\n    },\n    required(value) {\n        if (!value || !value.in) {\n            return ['name', 'in'];\n        }\n        if (value.in === 'body') {\n            return ['name', 'in', 'schema'];\n        }\n        else {\n            if (value.type === 'array') {\n                return ['name', 'in', 'type', 'items'];\n            }\n            else {\n                return ['name', 'in', 'type'];\n            }\n        }\n    },\n};\nconst ParameterItems = {\n    properties: {\n        type: { type: 'string', enum: ['string', 'number', 'integer', 'boolean', 'array'] },\n        format: { type: 'string' },\n        items: 'ParameterItems',\n        collectionFormat: { type: 'string', enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi'] },\n        default: null,\n        maximum: { type: 'integer' },\n        exclusiveMaximum: { type: 'boolean' },\n        minimum: { type: 'integer' },\n        exclusiveMinimum: { type: 'boolean' },\n        maxLength: { type: 'integer' },\n        minLength: { type: 'integer' },\n        pattern: { type: 'string' },\n        maxItems: { type: 'integer' },\n        minItems: { type: 'integer' },\n        uniqueItems: { type: 'boolean' },\n        enum: { type: 'array' },\n        multipleOf: { type: 'number' },\n    },\n    required(value) {\n        if (value && value.type === 'array') {\n            return ['type', 'items'];\n        }\n        else {\n            return ['type'];\n        }\n    },\n};\nconst ResponsesMap = {\n    properties: {\n        default: 'Response',\n    },\n    additionalProperties: (_v, key) => responseCodeRegexp.test(key) ? 'Response' : undefined,\n};\nconst Response = {\n    properties: {\n        description: { type: 'string' },\n        schema: 'Schema',\n        headers: _1.mapOf('Header'),\n        examples: 'Examples',\n    },\n    required: ['description'],\n};\nconst Examples = {\n    properties: {},\n    additionalProperties: { isExample: true },\n};\nconst Header = {\n    properties: {\n        description: { type: 'string' },\n        type: { type: 'string', enum: ['string', 'number', 'integer', 'boolean', 'array'] },\n        format: { type: 'string' },\n        items: 'ParameterItems',\n        collectionFormat: { type: 'string', enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi'] },\n        default: null,\n        maximum: { type: 'integer' },\n        exclusiveMaximum: { type: 'boolean' },\n        minimum: { type: 'integer' },\n        exclusiveMinimum: { type: 'boolean' },\n        maxLength: { type: 'integer' },\n        minLength: { type: 'integer' },\n        pattern: { type: 'string' },\n        maxItems: { type: 'integer' },\n        minItems: { type: 'integer' },\n        uniqueItems: { type: 'boolean' },\n        enum: { type: 'array' },\n        multipleOf: { type: 'number' },\n    },\n    required(value) {\n        if (value && value.type === 'array') {\n            return ['type', 'items'];\n        }\n        else {\n            return ['type'];\n        }\n    },\n};\nconst Tag = {\n    properties: {\n        name: { type: 'string' },\n        description: { type: 'string' },\n        externalDocs: 'ExternalDocs',\n    },\n    required: ['name'],\n};\nconst Schema = {\n    properties: {\n        format: { type: 'string' },\n        title: { type: 'string' },\n        description: { type: 'string' },\n        default: null,\n        multipleOf: { type: 'number' },\n        maximum: { type: 'number' },\n        minimum: { type: 'number' },\n        exclusiveMaximum: { type: 'boolean' },\n        exclusiveMinimum: { type: 'boolean' },\n        maxLength: { type: 'number' },\n        minLength: { type: 'number' },\n        pattern: { type: 'string' },\n        maxItems: { type: 'number' },\n        minItems: { type: 'number' },\n        uniqueItems: { type: 'boolean' },\n        maxProperties: { type: 'number' },\n        minProperties: { type: 'number' },\n        required: { type: 'array', items: { type: 'string' } },\n        enum: { type: 'array' },\n        type: {\n            type: 'string',\n            enum: ['object', 'array', 'string', 'number', 'integer', 'boolean', 'null'],\n        },\n        items: (value) => {\n            if (Array.isArray(value)) {\n                return _1.listOf('Schema');\n            }\n            else {\n                return 'Schema';\n            }\n        },\n        allOf: _1.listOf('Schema'),\n        properties: 'SchemaProperties',\n        additionalProperties: (value) => {\n            if (typeof value === 'boolean') {\n                return { type: 'boolean' };\n            }\n            else {\n                return 'Schema';\n            }\n        },\n        discriminator: { type: 'string' },\n        readOnly: { type: 'boolean' },\n        xml: 'Xml',\n        externalDocs: 'ExternalDocs',\n        example: { isExample: true },\n    },\n};\nconst SchemaProperties = {\n    properties: {},\n    additionalProperties: 'Schema',\n};\nconst Xml = {\n    properties: {\n        name: { type: 'string' },\n        namespace: { type: 'string' },\n        prefix: { type: 'string' },\n        attribute: { type: 'boolean' },\n        wrapped: { type: 'boolean' },\n    },\n};\nconst SecurityScheme = {\n    properties: {\n        type: { enum: ['basic', 'apiKey', 'oauth2'] },\n        description: { type: 'string' },\n        name: { type: 'string' },\n        in: { type: 'string', enum: ['query', 'header'] },\n        flow: { enum: ['implicit', 'password', 'application', 'accessCode'] },\n        authorizationUrl: { type: 'string' },\n        tokenUrl: { type: 'string' },\n        scopes: { type: 'object', additionalProperties: { type: 'string' } },\n    },\n    required(value) {\n        switch (value === null || value === void 0 ? void 0 : value.type) {\n            case 'apiKey':\n                return ['type', 'name', 'in'];\n            case 'oauth2':\n                switch (value === null || value === void 0 ? void 0 : value.flow) {\n                    case 'implicit':\n                        return ['type', 'flow', 'authorizationUrl', 'scopes'];\n                    case 'accessCode':\n                        return ['type', 'flow', 'authorizationUrl', 'tokenUrl', 'scopes'];\n                    case 'application':\n                    case 'password':\n                        return ['type', 'flow', 'tokenUrl', 'scopes'];\n                    default:\n                        return ['type', 'flow', 'scopes'];\n                }\n            default:\n                return ['type'];\n        }\n    },\n    allowed(value) {\n        switch (value === null || value === void 0 ? void 0 : value.type) {\n            case 'basic':\n                return ['type', 'description'];\n            case 'apiKey':\n                return ['type', 'name', 'in', 'description'];\n            case 'oauth2':\n                switch (value === null || value === void 0 ? void 0 : value.flow) {\n                    case 'implicit':\n                        return ['type', 'flow', 'authorizationUrl', 'description', 'scopes'];\n                    case 'accessCode':\n                        return ['type', 'flow', 'authorizationUrl', 'tokenUrl', 'description', 'scopes'];\n                    case 'application':\n                    case 'password':\n                        return ['type', 'flow', 'tokenUrl', 'description', 'scopes'];\n                    default:\n                        return ['type', 'flow', 'tokenUrl', 'authorizationUrl', 'description', 'scopes'];\n                }\n            default:\n                return ['type', 'description'];\n        }\n    },\n    extensionsPrefix: 'x-',\n};\nconst SecurityRequirement = {\n    properties: {},\n    additionalProperties: { type: 'array', items: { type: 'string' } },\n};\nexports.Oas2Types = {\n    DefinitionRoot,\n    Tag,\n    ExternalDocs,\n    SecurityRequirement,\n    Info,\n    Contact,\n    License,\n    PathMap,\n    PathItem,\n    Parameter,\n    ParameterItems,\n    Operation,\n    Examples,\n    Header,\n    ResponsesMap,\n    Response,\n    Schema,\n    Xml,\n    SchemaProperties,\n    NamedSchemas: _1.mapOf('Schema'),\n    NamedResponses: _1.mapOf('Response'),\n    NamedParameters: _1.mapOf('Parameter'),\n    NamedSecuritySchemes: _1.mapOf('SecurityScheme'),\n    SecurityScheme,\n    XCodeSample,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}