{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getCountries = createAsyncThunk('contactsApp/countries/getCountries', async (params, _ref) => {\n  let {\n    getState\n  } = _ref;\n  const response = await axios.get('/api/countries');\n  const data = await response.data;\n  return data;\n});\nconst countriesAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectCountries,\n  selectById: selectCountriesById\n} = countriesAdapter.getSelectors(state => state.contactsApp.countries);\nconst countriesSlice = createSlice({\n  name: 'contactsApp/countries',\n  initialState: countriesAdapter.getInitialState([]),\n  reducers: {},\n  extraReducers: {\n    [getCountries.fulfilled]: countriesAdapter.setAll\n  }\n});\nexport default countriesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSlice","axios","getCountries","params","getState","response","get","data","countriesAdapter","selectAll","selectCountries","selectById","selectCountriesById","getSelectors","state","contactsApp","countries","countriesSlice","name","initialState","getInitialState","reducers","extraReducers","fulfilled","setAll","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/contacts/store/countriesSlice.js"],"sourcesContent":["import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getCountries = createAsyncThunk(\r\n  'contactsApp/countries/getCountries',\r\n  async (params, { getState }) => {\r\n    const response = await axios.get('/api/countries');\r\n\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst countriesAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectCountries, selectById: selectCountriesById } =\r\n  countriesAdapter.getSelectors((state) => state.contactsApp.countries);\r\n\r\nconst countriesSlice = createSlice({\r\n  name: 'contactsApp/countries',\r\n  initialState: countriesAdapter.getInitialState([]),\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getCountries.fulfilled]: countriesAdapter.setAll,\r\n  },\r\n});\r\n\r\nexport default countriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,gBAAgB,CAC1C,oCAD0C,EAE1C,OAAOK,MAAP,WAAgC;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC9B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,gBAAV,CAAvB;EAEA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CARyC,CAArC;AAWP,MAAMC,gBAAgB,GAAGT,mBAAmB,CAAC,EAAD,CAA5C;AAEA,OAAO,MAAM;EAAEU,SAAS,EAAEC,eAAb;EAA8BC,UAAU,EAAEC;AAA1C,IACXJ,gBAAgB,CAACK,YAAjB,CAA+BC,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,SAA3D,CADK;AAGP,MAAMC,cAAc,GAAGjB,WAAW,CAAC;EACjCkB,IAAI,EAAE,uBAD2B;EAEjCC,YAAY,EAAEX,gBAAgB,CAACY,eAAjB,CAAiC,EAAjC,CAFmB;EAGjCC,QAAQ,EAAE,EAHuB;EAIjCC,aAAa,EAAE;IACb,CAACpB,YAAY,CAACqB,SAAd,GAA0Bf,gBAAgB,CAACgB;EAD9B;AAJkB,CAAD,CAAlC;AASA,eAAeP,cAAc,CAACQ,OAA9B"},"metadata":{},"sourceType":"module"}