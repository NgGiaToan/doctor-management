{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\autocomplete\\\\Asynchronous.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep() {\n  let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Asynchronous() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...topFilms]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"asynchronous-demo\",\n    sx: {\n      width: 300\n    },\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    isOptionEqualToValue: (option, value) => option.title === value.title,\n    getOptionLabel: option => option.title,\n    options: options,\n    loading: loading,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Asynchronous\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} // Top films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(Asynchronous, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n\n_c = Asynchronous;\nconst topFilms = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Asynchronous\");","map":{"version":3,"names":["React","TextField","Autocomplete","CircularProgress","sleep","delay","Promise","resolve","setTimeout","Asynchronous","open","setOpen","useState","options","setOptions","loading","length","useEffect","active","undefined","topFilms","width","option","value","title","params","InputProps","endAdornment","year"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/autocomplete/Asynchronous.js"],"sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function Asynchronous() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      await sleep(1e3); // For demo purposes.\r\n\r\n      if (active) {\r\n        setOptions([...topFilms]);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      sx={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      isOptionEqualToValue={(option, value) => option.title === value.title}\r\n      getOptionLabel={(option) => option.title}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Asynchronous\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst topFilms = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}