{"ast":null,"code":"import _ from '@lodash';\nimport mockApi from '../mock-api.json';\nimport mock from '../mock';\nconst demoCourseContent = mockApi.components.examples.academy_demo_course_content.value;\nconst exampleCourseSteps = mockApi.components.examples.academy_demo_course_steps.value;\nconst steps = exampleCourseSteps.map(item => ({ ...item,\n  content: `${item.content} ${demoCourseContent}`\n}));\nconst courses = mockApi.components.examples.academy_courses.value;\nconst categoriesDB = mockApi.components.examples.academy_categories.value;\nconst coursesDB = courses.map(course => ({ ...course,\n  steps\n}));\nmock.onGet('/api/academy/courses').reply(config => {\n  return [200, coursesDB];\n});\nmock.onGet(/\\/api\\/academy\\/courses\\/[^/]+/).reply(_ref => {\n  let {\n    url,\n    data: value\n  } = _ref;\n  const {\n    courseId\n  } = url.match(/\\/api\\/academy\\/courses\\/(?<courseId>[^/]+)/).groups;\n\n  const course = _.find(coursesDB, {\n    id: courseId\n  });\n\n  if (!course) {\n    return [404, 'Requested data do not exist.'];\n  }\n\n  return [200, course];\n});\nmock.onPut(/\\/api\\/academy\\/courses\\/[^/]+/).reply(_ref2 => {\n  var _newData$progress;\n\n  let {\n    url,\n    data: value\n  } = _ref2;\n  const {\n    courseId\n  } = url.match(/\\/api\\/academy\\/courses\\/(?<courseId>[^/]+)/).groups;\n\n  const course = _.find(coursesDB, {\n    id: courseId\n  });\n\n  const newData = JSON.parse(value);\n\n  if (!course) {\n    return [404, 'Requested data do not exist.'];\n  }\n\n  _.assign(course, _.merge({}, course, newData));\n\n  if ((newData === null || newData === void 0 ? void 0 : (_newData$progress = newData.progress) === null || _newData$progress === void 0 ? void 0 : _newData$progress.currentStep) === (course === null || course === void 0 ? void 0 : course.totalSteps)) {\n    _.assign(course, _.merge({}, course, {\n      progress: {\n        completed: course.progress.completed + 1\n      }\n    }));\n  }\n\n  return [200, course];\n});\nmock.onGet('/api/academy/categories').reply(config => {\n  return [200, categoriesDB];\n});","map":{"version":3,"names":["_","mockApi","mock","demoCourseContent","components","examples","academy_demo_course_content","value","exampleCourseSteps","academy_demo_course_steps","steps","map","item","content","courses","academy_courses","categoriesDB","academy_categories","coursesDB","course","onGet","reply","config","url","data","courseId","match","groups","find","id","onPut","newData","JSON","parse","assign","merge","progress","currentStep","totalSteps","completed"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/academy-api.js"],"sourcesContent":["import _ from '@lodash';\r\nimport mockApi from '../mock-api.json';\r\nimport mock from '../mock';\r\n\r\nconst demoCourseContent = mockApi.components.examples.academy_demo_course_content.value;\r\nconst exampleCourseSteps = mockApi.components.examples.academy_demo_course_steps.value;\r\nconst steps = exampleCourseSteps.map((item) => ({\r\n  ...item,\r\n  content: `${item.content} ${demoCourseContent}`,\r\n}));\r\nconst courses = mockApi.components.examples.academy_courses.value;\r\nconst categoriesDB = mockApi.components.examples.academy_categories.value;\r\n\r\nconst coursesDB = courses.map((course) => ({\r\n  ...course,\r\n  steps,\r\n}));\r\n\r\nmock.onGet('/api/academy/courses').reply((config) => {\r\n  return [200, coursesDB];\r\n});\r\n\r\nmock.onGet(/\\/api\\/academy\\/courses\\/[^/]+/).reply(({ url, data: value }) => {\r\n  const { courseId } = url.match(/\\/api\\/academy\\/courses\\/(?<courseId>[^/]+)/).groups;\r\n  const course = _.find(coursesDB, { id: courseId });\r\n\r\n  if (!course) {\r\n    return [404, 'Requested data do not exist.'];\r\n  }\r\n  return [200, course];\r\n});\r\n\r\nmock.onPut(/\\/api\\/academy\\/courses\\/[^/]+/).reply(({ url, data: value }) => {\r\n  const { courseId } = url.match(/\\/api\\/academy\\/courses\\/(?<courseId>[^/]+)/).groups;\r\n  const course = _.find(coursesDB, { id: courseId });\r\n  const newData = JSON.parse(value);\r\n\r\n  if (!course) {\r\n    return [404, 'Requested data do not exist.'];\r\n  }\r\n\r\n  _.assign(course, _.merge({}, course, newData));\r\n\r\n  if (newData?.progress?.currentStep === course?.totalSteps) {\r\n    _.assign(\r\n      course,\r\n      _.merge({}, course, { progress: { completed: course.progress.completed + 1 } })\r\n    );\r\n  }\r\n\r\n  return [200, course];\r\n});\r\n\r\nmock.onGet('/api/academy/categories').reply((config) => {\r\n  return [200, categoriesDB];\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}