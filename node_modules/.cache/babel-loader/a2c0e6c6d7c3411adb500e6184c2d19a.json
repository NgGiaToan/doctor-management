{"ast":null,"code":"import _wrapRegExp from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js\";import _objectSpread from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _ from'@lodash';import FuseUtils from'@fuse/utils';import mockApi from'../mock-api.json';import mock from'../mock';var contactsDB=mockApi.components.examples.chat_contacts.value;var userDB=mockApi.components.examples.chat_profile.value;var userChatListDB=mockApi.components.examples.chat_chats.value;var messages=mockApi.components.examples.chat_messages.value;var chatsDB=userChatListDB.map(function(chat){return _objectSpread(_objectSpread({},chat),{},{messages:messages.map(function(message){return _objectSpread(_objectSpread({},message),{},{contactId:message.contactId===''?chat.contactId:userDB.id});})});});mock.onGet('/api/chat/contacts').reply(function(config){return[200,contactsDB];});mock.onGet('/api/chat/chats').reply(function(config){userChatListDB.sort(function(d1,d2){return new Date(d2.lastMessageAt).getTime()-new Date(d1.lastMessageAt).getTime();});return[200,userChatListDB];});mock.onGet(/\\/api\\/chat\\/chats\\/[^/]+/).reply(function(config){var _$find;var contactId=config.url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/chat\\/chats\\/([^/]+)/,{contactId:1})).groups.contactId;var contact=_.find(contactsDB,{id:contactId});if(!contact){return[404,'Requested data do not exist.'];}var data=(_$find=_.find(chatsDB,{contactId:contactId}))===null||_$find===void 0?void 0:_$find.messages;if(data){return[200,data];}return[200,[]];});mock.onPost(/\\/api\\/chat\\/chats\\/[^/]+/).reply(function(_ref){var url=_ref.url,value=_ref.data;var contactId=url.match(/*#__PURE__*/_wrapRegExp(/\\/api\\/chat\\/chats\\/([^/]+)/,{contactId:1})).groups.contactId;var contact=_.find(contactsDB,{id:contactId});if(!contact){return[404,'Requested data do not exist.'];}var contactChat=_.find(chatsDB,{contactId:contactId});if(!contactChat){createNewChat(contactId);}var newMessage=createNewMessage(value,contactId);return[200,newMessage];});mock.onGet('/api/chat/user').reply(function(config){return[200,userDB];});mock.onPost('/api/chat/user').reply(function(_ref2){var data=_ref2.data;var userData=JSON.parse(data);userDB=_.merge({},userDB,userData);return[200,userDB];});function createNewMessage(value,contactId){var message={id:FuseUtils.generateGUID(),contactId:userDB.id,value:value,createdAt:new Date().toISOString()};var selectedChat=_.find(chatsDB,{contactId:contactId});var userSelectedChat=_.find(userChatListDB,{contactId:contactId});selectedChat.messages.push(message);selectedChat.lastMessage=value;selectedChat.lastMessageAt=message.createdAt;userSelectedChat.lastMessage=value;userSelectedChat.lastMessageAt=message.createdAt;return message;}function createNewChat(contactId){var newChat={id:FuseUtils.generateGUID(),contactId:contactId,unreadCount:0,muted:false,lastMessage:'',lastMessageAt:''};userChatListDB.push(newChat);var newMessageData=_objectSpread(_objectSpread({},newChat),{},{messages:[]});chatsDB.push(newMessageData);return newMessageData;}","map":null,"metadata":{},"sourceType":"module"}