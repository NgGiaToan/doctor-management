{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\@fuse\\\\core\\\\FuseSettings\\\\palette-generator\\\\PaletteSelector.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport _ from '@lodash';\nimport { darkPaletteText, lightPaletteText } from 'app/configs/themesConfig';\nimport { darken, getContrastRatio, lighten } from '@mui/material/styles';\nimport { useTheme } from '@mui/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Dialog, DialogActions, DialogContent, Icon, TextField } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport SectionPreview from './SectionPreview';\nimport PalettePreview from './PalettePreview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction isDark(color) {\n  return getContrastRatio(color, '#ffffff') >= 3;\n}\n\nfunction PaletteSelector(props) {\n  _s();\n\n  const {\n    value\n  } = props;\n  const [openDialog, setOpenDialog] = useState(false);\n  const theme = useTheme();\n  const methods = useForm({\n    defaultValues: {},\n    mode: 'onChange'\n  });\n  const {\n    reset,\n    formState,\n    trigger,\n    handleSubmit,\n    watch,\n    control,\n    setValue\n  } = methods;\n  const {\n    isValid,\n    dirtyFields,\n    errors\n  } = formState;\n  useEffect(() => {\n    reset(value);\n  }, [value, reset]);\n  const form = watch();\n  const formType = watch('palette.mode');\n  useEffect(() => {// console.info(form);\n  }, [form]);\n  useEffect(() => {\n    if (!formType || !openDialog) {\n      return;\n    }\n\n    setTimeout(() => trigger(['palette.background.paper', 'palette.background.default']));\n  }, [formType, openDialog, trigger]);\n\n  const backgroundColorValidation = v => {\n    if (formType === 'light' && isDark(v)) {\n      return 'Must be a light color';\n    }\n\n    if (formType === 'dark' && !isDark(v)) {\n      return 'Must be a dark color';\n    }\n\n    return true;\n  };\n  /**\r\n   * Open Dialog\r\n   */\n\n\n  function handleOpenDialog(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    setOpenDialog(true);\n  }\n  /**\r\n   * Close Dialog\r\n   */\n\n\n  function handleCloseDialog() {\n    setOpenDialog(false);\n  }\n\n  function onSubmit(formData) {\n    props.onChange(formData);\n    handleCloseDialog();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleOpenDialog,\n      role: \"button\",\n      children: props.trigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      container: document.body,\n      open: openDialog,\n      onClose: handleCloseDialog,\n      \"aria-labelledby\": \"form-dialog-title\",\n      classes: {\n        paper: 'rounded-5 w-full'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        elevation: 0,\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          className: \"flex w-full\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: \"mr-12\",\n            children: \"palette\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"inherit\",\n            children: \"Edit palette\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-center p-24 flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"palette.mode\",\n              control: control,\n              render: _ref => {\n                let {\n                  field: {\n                    onChange: _onChange,\n                    value: _value\n                  }\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  disableElevation: true,\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  className: \"mb-32\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: async () => {\n                      _onChange('light');\n\n                      setValue('palette.text', lightPaletteText, {\n                        shouldDirty: true\n                      });\n                    },\n                    variant: _value === 'light' ? 'contained' : 'outlined',\n                    children: \"Light\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: async () => {\n                      _onChange('dark');\n\n                      setValue('palette.text', darkPaletteText, {\n                        shouldDirty: true\n                      });\n                    },\n                    variant: _value === 'dark' ? 'contained' : 'outlined',\n                    children: \"Dark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"palette.primary.main\",\n              control: control,\n              render: _ref2 => {\n                let {\n                  field: {\n                    onChange: _onChange,\n                    value: _value\n                  }\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  value: _value,\n                  onChange: ev => {\n                    _onChange(ev.target.value);\n\n                    setValue('palette.primary.light', lighten(ev.target.value, 0.8), {\n                      shouldDirty: true\n                    });\n                    setValue('palette.primary.dark', darken(ev.target.value, 0.2), {\n                      shouldDirty: true\n                    });\n                    setValue('palette.primary.contrastText', theme.palette.getContrastText(ev.target.value), {\n                      shouldDirty: true\n                    });\n                  },\n                  type: \"color\",\n                  variant: \"outlined\",\n                  className: \"mb-32\",\n                  label: \"Primary color\",\n                  InputProps: {\n                    className: 'w-200  h-32'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"palette.secondary.main\",\n              control: control,\n              render: _ref3 => {\n                let {\n                  field: {\n                    onChange: _onChange,\n                    value: _value\n                  }\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  value: _value,\n                  onChange: ev => {\n                    _onChange(ev.target.value);\n\n                    setValue('palette.secondary.light', lighten(ev.target.value, 0.8), {\n                      shouldDirty: true\n                    });\n                    setValue('palette.secondary.dark', darken(ev.target.value, 0.2), {\n                      shouldDirty: true\n                    });\n                    setValue('palette.secondary.contrastText', theme.palette.getContrastText(ev.target.value), {\n                      shouldDirty: true\n                    });\n                  },\n                  type: \"color\",\n                  variant: \"outlined\",\n                  className: \"mb-32\",\n                  label: \"Secondary color\",\n                  InputProps: {\n                    className: 'w-200 h-32'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"palette.background.paper\",\n              control: control,\n              rules: {\n                validate: {\n                  backgroundColorValidation\n                }\n              },\n              render: _ref4 => {\n                var _errors$palette, _errors$palette$backg, _errors$palette2, _errors$palette2$back, _errors$palette2$back2;\n\n                let {\n                  field\n                } = _ref4;\n                return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                  type: \"color\",\n                  variant: \"outlined\",\n                  className: \"mb-32\",\n                  label: \"Background paper\",\n                  InputProps: {\n                    className: 'w-200 h-32'\n                  },\n                  error: !!(errors !== null && errors !== void 0 && (_errors$palette = errors.palette) !== null && _errors$palette !== void 0 && (_errors$palette$backg = _errors$palette.background) !== null && _errors$palette$backg !== void 0 && _errors$palette$backg.paper),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$palette2 = errors.palette) === null || _errors$palette2 === void 0 ? void 0 : (_errors$palette2$back = _errors$palette2.background) === null || _errors$palette2$back === void 0 ? void 0 : (_errors$palette2$back2 = _errors$palette2$back.paper) === null || _errors$palette2$back2 === void 0 ? void 0 : _errors$palette2$back2.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"palette.background.default\",\n              control: control,\n              rules: {\n                validate: {\n                  backgroundColorValidation\n                }\n              },\n              render: _ref5 => {\n                var _errors$palette3, _errors$palette3$back, _errors$palette4, _errors$palette4$back, _errors$palette4$back2;\n\n                let {\n                  field\n                } = _ref5;\n                return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                  type: \"color\",\n                  variant: \"outlined\",\n                  className: \"\",\n                  label: \"Background default\",\n                  InputProps: {\n                    className: 'w-200 h-32'\n                  },\n                  error: !!(errors !== null && errors !== void 0 && (_errors$palette3 = errors.palette) !== null && _errors$palette3 !== void 0 && (_errors$palette3$back = _errors$palette3.background) !== null && _errors$palette3$back !== void 0 && _errors$palette3$back.default),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$palette4 = errors.palette) === null || _errors$palette4 === void 0 ? void 0 : (_errors$palette4$back = _errors$palette4.background) === null || _errors$palette4$back === void 0 ? void 0 : (_errors$palette4$back2 = _errors$palette4$back.default) === null || _errors$palette4$back2 === void 0 ? void 0 : _errors$palette4$back2.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-center p-48\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: \"text-16 font-semibold mb-16 -mt-48\",\n              color: \"text.secondary\",\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PalettePreview, {\n              className: \"\",\n              palette: form.palette\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"flex justify-between p-16\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          autoFocus: true,\n          onClick: handleSubmit(onSubmit),\n          disabled: _.isEmpty(dirtyFields) || !isValid,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaletteSelector, \"UP1HRNkgdB4xvyVfDR17Xq6Va/g=\", false, function () {\n  return [useTheme, useForm];\n});\n\n_c = PaletteSelector;\nPaletteSelector.defaultProps = {\n  trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-8 w-128 m-8\",\n    children: [/*#__PURE__*/_jsxDEV(SectionPreview, {\n      section: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"flex-1 text-16 font-bold mb-24\",\n      children: \"Edit Palette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this)\n};\nexport default PaletteSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaletteSelector\");","map":{"version":3,"names":["useEffect","useState","Controller","useForm","_","darkPaletteText","lightPaletteText","darken","getContrastRatio","lighten","useTheme","AppBar","Toolbar","Dialog","DialogActions","DialogContent","Icon","TextField","Typography","ButtonGroup","Button","SectionPreview","PalettePreview","isDark","color","PaletteSelector","props","value","openDialog","setOpenDialog","theme","methods","defaultValues","mode","reset","formState","trigger","handleSubmit","watch","control","setValue","isValid","dirtyFields","errors","form","formType","setTimeout","backgroundColorValidation","v","handleOpenDialog","ev","preventDefault","stopPropagation","handleCloseDialog","onSubmit","formData","onChange","document","body","paper","field","_onChange","_value","shouldDirty","target","palette","getContrastText","className","validate","background","message","default","isEmpty","defaultProps"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@fuse/core/FuseSettings/palette-generator/PaletteSelector.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport _ from '@lodash';\r\nimport { darkPaletteText, lightPaletteText } from 'app/configs/themesConfig';\r\nimport { darken, getContrastRatio, lighten } from '@mui/material/styles';\r\nimport { useTheme } from '@mui/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { Dialog, DialogActions, DialogContent, Icon, TextField } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport SectionPreview from './SectionPreview';\r\nimport PalettePreview from './PalettePreview';\r\n\r\nfunction isDark(color) {\r\n  return getContrastRatio(color, '#ffffff') >= 3;\r\n}\r\n\r\nfunction PaletteSelector(props) {\r\n  const { value } = props;\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  const methods = useForm({\r\n    defaultValues: {},\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const { reset, formState, trigger, handleSubmit, watch, control, setValue } = methods;\r\n\r\n  const { isValid, dirtyFields, errors } = formState;\r\n\r\n  useEffect(() => {\r\n    reset(value);\r\n  }, [value, reset]);\r\n\r\n  const form = watch();\r\n  const formType = watch('palette.mode');\r\n\r\n  useEffect(() => {\r\n    // console.info(form);\r\n  }, [form]);\r\n\r\n  useEffect(() => {\r\n    if (!formType || !openDialog) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => trigger(['palette.background.paper', 'palette.background.default']));\r\n  }, [formType, openDialog, trigger]);\r\n\r\n  const backgroundColorValidation = (v) => {\r\n    if (formType === 'light' && isDark(v)) {\r\n      return 'Must be a light color';\r\n    }\r\n    if (formType === 'dark' && !isDark(v)) {\r\n      return 'Must be a dark color';\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Open Dialog\r\n   */\r\n  function handleOpenDialog(ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n    setOpenDialog(true);\r\n  }\r\n\r\n  /**\r\n   * Close Dialog\r\n   */\r\n  function handleCloseDialog() {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  function onSubmit(formData) {\r\n    props.onChange(formData);\r\n    handleCloseDialog();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/interactive-supports-focus */}\r\n      <div onClick={handleOpenDialog} role=\"button\">\r\n        {props.trigger}\r\n      </div>\r\n      <Dialog\r\n        container={document.body}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        classes={{\r\n          paper: 'rounded-5 w-full',\r\n        }}\r\n      >\r\n        <AppBar elevation={0} position=\"static\">\r\n          <Toolbar className=\"flex w-full\">\r\n            <Icon className=\"mr-12\">palette</Icon>\r\n            <Typography variant=\"subtitle1\" color=\"inherit\">\r\n              Edit palette\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <DialogContent>\r\n          <div className=\"flex w-full\">\r\n            <div className=\"flex flex-col items-center justify-center p-24 flex-1\">\r\n              <Controller\r\n                name=\"palette.mode\"\r\n                control={control}\r\n                render={({ field: { onChange: _onChange, value: _value } }) => (\r\n                  <ButtonGroup\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className=\"mb-32\"\r\n                  >\r\n                    <Button\r\n                      onClick={async () => {\r\n                        _onChange('light');\r\n                        setValue('palette.text', lightPaletteText, { shouldDirty: true });\r\n                      }}\r\n                      variant={_value === 'light' ? 'contained' : 'outlined'}\r\n                    >\r\n                      Light\r\n                    </Button>\r\n\r\n                    <Button\r\n                      onClick={async () => {\r\n                        _onChange('dark');\r\n                        setValue('palette.text', darkPaletteText, { shouldDirty: true });\r\n                      }}\r\n                      variant={_value === 'dark' ? 'contained' : 'outlined'}\r\n                    >\r\n                      Dark\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                )}\r\n              />\r\n\r\n              <Controller\r\n                name=\"palette.primary.main\"\r\n                control={control}\r\n                render={({ field: { onChange: _onChange, value: _value } }) => (\r\n                  <TextField\r\n                    value={_value}\r\n                    onChange={(ev) => {\r\n                      _onChange(ev.target.value);\r\n                      setValue('palette.primary.light', lighten(ev.target.value, 0.8), {\r\n                        shouldDirty: true,\r\n                      });\r\n                      setValue('palette.primary.dark', darken(ev.target.value, 0.2), {\r\n                        shouldDirty: true,\r\n                      });\r\n                      setValue(\r\n                        'palette.primary.contrastText',\r\n                        theme.palette.getContrastText(ev.target.value),\r\n                        { shouldDirty: true }\r\n                      );\r\n                    }}\r\n                    type=\"color\"\r\n                    variant=\"outlined\"\r\n                    className=\"mb-32\"\r\n                    label=\"Primary color\"\r\n                    InputProps={{ className: 'w-200  h-32' }}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Controller\r\n                name=\"palette.secondary.main\"\r\n                control={control}\r\n                render={({ field: { onChange: _onChange, value: _value } }) => (\r\n                  <TextField\r\n                    value={_value}\r\n                    onChange={(ev) => {\r\n                      _onChange(ev.target.value);\r\n                      setValue('palette.secondary.light', lighten(ev.target.value, 0.8), {\r\n                        shouldDirty: true,\r\n                      });\r\n                      setValue('palette.secondary.dark', darken(ev.target.value, 0.2), {\r\n                        shouldDirty: true,\r\n                      });\r\n                      setValue(\r\n                        'palette.secondary.contrastText',\r\n                        theme.palette.getContrastText(ev.target.value),\r\n                        { shouldDirty: true }\r\n                      );\r\n                    }}\r\n                    type=\"color\"\r\n                    variant=\"outlined\"\r\n                    className=\"mb-32\"\r\n                    label=\"Secondary color\"\r\n                    InputProps={{ className: 'w-200 h-32' }}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Controller\r\n                name=\"palette.background.paper\"\r\n                control={control}\r\n                rules={{\r\n                  validate: {\r\n                    backgroundColorValidation,\r\n                  },\r\n                }}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    {...field}\r\n                    type=\"color\"\r\n                    variant=\"outlined\"\r\n                    className=\"mb-32\"\r\n                    label=\"Background paper\"\r\n                    InputProps={{ className: 'w-200 h-32' }}\r\n                    error={!!errors?.palette?.background?.paper}\r\n                    helperText={errors?.palette?.background?.paper?.message}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Controller\r\n                name=\"palette.background.default\"\r\n                control={control}\r\n                rules={{\r\n                  validate: {\r\n                    backgroundColorValidation,\r\n                  },\r\n                }}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    {...field}\r\n                    type=\"color\"\r\n                    variant=\"outlined\"\r\n                    className=\"\"\r\n                    label=\"Background default\"\r\n                    InputProps={{ className: 'w-200 h-32' }}\r\n                    error={!!errors?.palette?.background?.default}\r\n                    helperText={errors?.palette?.background?.default?.message}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col items-center justify-center p-48\">\r\n              <Typography className=\"text-16 font-semibold mb-16 -mt-48\" color=\"text.secondary\">\r\n                Preview\r\n              </Typography>\r\n              <PalettePreview className=\"\" palette={form.palette} />\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions className=\"flex justify-between p-16\">\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            autoFocus\r\n            onClick={handleSubmit(onSubmit)}\r\n            disabled={_.isEmpty(dirtyFields) || !isValid}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nPaletteSelector.defaultProps = {\r\n  trigger: (\r\n    <div className=\"flex flex-col items-center space-y-8 w-128 m-8\">\r\n      <SectionPreview section=\"\" />\r\n      <Typography className=\"flex-1 text-16 font-bold mb-24\">Edit Palette</Typography>\r\n    </div>\r\n  ),\r\n};\r\nexport default PaletteSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}