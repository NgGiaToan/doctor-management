{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\apps\\\\tasks\\\\task\\\\TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport FuseLoading from '@fuse/core/FuseLoading';\nimport _ from '@lodash';\nimport * as yup from 'yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup/dist/yup';\nimport Box from '@mui/system/Box';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Autocomplete from '@mui/material/Autocomplete/Autocomplete';\nimport Checkbox from '@mui/material/Checkbox/Checkbox';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport IconButton from '@mui/material/IconButton';\nimport { useDeepCompareEffect } from '@fuse/hooks';\nimport TaskPrioritySelector from './TaskPrioritySelector';\nimport FormActionsMenu from './FormActionsMenu';\nimport { addTask, getTask, newTask, selectTask, updateTask } from '../store/taskSlice';\nimport { selectTags } from '../store/tagsSlice';\n/**\r\n * Form Validation Schema\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  title: yup.string().required('You must enter a name')\n});\n\nconst TaskForm = props => {\n  _s();\n\n  const task = useSelector(selectTask);\n  const tags = useSelector(selectTags);\n  const routeParams = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    control,\n    watch,\n    reset,\n    handleSubmit,\n    formState,\n    getValues\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(schema)\n  });\n  const {\n    isValid,\n    dirtyFields,\n    errors\n  } = formState;\n  const form = watch();\n  /**\r\n   * Update Task\r\n   */\n\n  useDeepCompareEffect(() => {\n    if (!isValid || _.isEmpty(form) || !task || routeParams.id === 'new') {\n      return;\n    }\n\n    if (!_.isEqual(task, form)) {\n      onSubmit(form);\n    }\n  }, [form, isValid]);\n  useEffect(() => {\n    if (routeParams.id === 'new') {\n      dispatch(newTask(routeParams.type));\n    } else {\n      dispatch(getTask(routeParams.id));\n    }\n  }, [dispatch, routeParams]);\n  useEffect(() => {\n    reset({ ...task\n    });\n  }, [task, reset]);\n  /**\r\n   * Form Submit\r\n   */\n\n  function onSubmit(data) {\n    dispatch(updateTask(data));\n  }\n\n  function onSubmitNew(data) {\n    dispatch(addTask(data)).then(_ref => {\n      let {\n        payload\n      } = _ref;\n      navigate(`/apps/tasks/${payload.id}`);\n    });\n  }\n\n  if (_.isEmpty(form) || !task) {\n    return /*#__PURE__*/_jsxDEV(FuseLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-col flex-auto items-center px-24 sm:px-48\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between border-b-1 w-full py-24 mt-16 mb-32\",\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"completed\",\n          render: _ref2 => {\n            let {\n              field: {\n                value,\n                onChange\n              }\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Button, {\n              className: \"font-semibold\",\n              onClick: () => onChange(!value),\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  color: value ? 'secondary.main' : 'text.disabled'\n                },\n                children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n                  children: \"heroicons-outline:check-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-8\",\n                children: task.completed ? 'MARK AS INCOMPLETE' : 'MARK AS COMPLETE'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [routeParams.id !== 'new' && /*#__PURE__*/_jsxDEV(FormActionsMenu, {\n            taskId: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            className: \"\",\n            component: NavLinkAdapter,\n            to: \"/apps/tasks\",\n            size: \"large\",\n            children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n              children: \"heroicons-outline:x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"title\",\n        render: _ref3 => {\n          var _errors$title;\n\n          let {\n            field\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"mt-32 max-h-auto\",\n            ...field,\n            label: `${_.upperFirst(form.type)} title`,\n            placeholder: \"Job title\",\n            id: \"title\",\n            error: !!errors.title,\n            helperText: errors === null || errors === void 0 ? void 0 : (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message,\n            variant: \"outlined\",\n            fullWidth: true,\n            multiline: true,\n            minRows: 3,\n            maxRows: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"tags\",\n        render: _ref4 => {\n          let {\n            field: {\n              onChange,\n              value\n            }\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(Autocomplete, {\n            multiple: true,\n            id: \"tags\",\n            className: \"mt-32\",\n            options: tags,\n            disableCloseOnSelect: true,\n            getOptionLabel: option => option.title,\n            renderOption: (_props, option, _ref5) => {\n              let {\n                selected\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(\"li\", { ..._props,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  style: {\n                    marginRight: 8\n                  },\n                  checked: selected\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), option.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this);\n            },\n            value: value ? value.map(id => _.find(tags, {\n              id\n            })) : [],\n            onChange: (event, newValue) => {\n              onChange(newValue.map(item => item.id));\n            },\n            fullWidth: true,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Tags\",\n              placeholder: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-full space-x-16 mt-32 mb-16 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"priority\",\n          render: _ref6 => {\n            let {\n              field\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(TaskPrioritySelector, { ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 36\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"dueDate\",\n          render: _ref7 => {\n            let {\n              field\n            } = _ref7;\n            return /*#__PURE__*/_jsxDEV(DateTimePicker, { ...field,\n              className: \"w-full\",\n              clearable: true,\n              showTodayButton: true,\n              renderInput: _props => /*#__PURE__*/_jsxDEV(TextField, {\n                className: \"\",\n                id: \"due-date\",\n                label: \"Due date\",\n                type: \"date\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\",\n                fullWidth: true,\n                ..._props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"notes\",\n        render: _ref8 => {\n          var _errors$notes;\n\n          let {\n            field\n          } = _ref8;\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"mt-32\",\n            ...field,\n            label: \"Notes\",\n            placeholder: \"Notes\",\n            id: \"notes\",\n            error: !!errors.notes,\n            helperText: errors === null || errors === void 0 ? void 0 : (_errors$notes = errors.notes) === null || _errors$notes === void 0 ? void 0 : _errors$notes.message,\n            variant: \"outlined\",\n            fullWidth: true,\n            multiline: true,\n            minRows: 5,\n            maxRows: 10,\n            InputProps: {\n              className: 'max-h-min h-min items-start',\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                className: \"mt-16\",\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n                  size: 20,\n                  children: \"heroicons-solid:menu-alt-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), routeParams.id === 'new' && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex items-center mt-40 py-14 pr-16 pl-4 sm:pr-48 sm:pl-36 border-t\",\n      sx: {\n        backgroundColor: 'background.default'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"ml-auto\",\n        component: NavLinkAdapter,\n        to: -1,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"ml-8\",\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: _.isEmpty(dirtyFields) || !isValid,\n        onClick: handleSubmit(onSubmitNew),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskForm, \"24lFfmKhCT2KY9NzwhWeWt9tb8Q=\", false, function () {\n  return [useSelector, useSelector, useParams, useDispatch, useNavigate, useForm, useDeepCompareEffect];\n});\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["Button","NavLinkAdapter","useDispatch","useSelector","useNavigate","useParams","useEffect","FuseLoading","_","yup","Controller","useForm","yupResolver","Box","FuseSvgIcon","TextField","InputAdornment","Autocomplete","Checkbox","DateTimePicker","IconButton","useDeepCompareEffect","TaskPrioritySelector","FormActionsMenu","addTask","getTask","newTask","selectTask","updateTask","selectTags","schema","object","shape","title","string","required","TaskForm","props","task","tags","routeParams","dispatch","navigate","control","watch","reset","handleSubmit","formState","getValues","mode","resolver","isValid","dirtyFields","errors","form","isEmpty","id","isEqual","onSubmit","type","data","onSubmitNew","then","payload","field","value","onChange","color","completed","upperFirst","message","option","_props","selected","marginRight","map","find","event","newValue","item","params","shrink","notes","className","startAdornment","backgroundColor"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/tasks/task/TaskForm.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport NavLinkAdapter from '@fuse/core/NavLinkAdapter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport FuseLoading from '@fuse/core/FuseLoading';\r\nimport _ from '@lodash';\r\nimport * as yup from 'yup';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup/dist/yup';\r\nimport Box from '@mui/system/Box';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Autocomplete from '@mui/material/Autocomplete/Autocomplete';\r\nimport Checkbox from '@mui/material/Checkbox/Checkbox';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useDeepCompareEffect } from '@fuse/hooks';\r\nimport TaskPrioritySelector from './TaskPrioritySelector';\r\nimport FormActionsMenu from './FormActionsMenu';\r\nimport { addTask, getTask, newTask, selectTask, updateTask } from '../store/taskSlice';\r\nimport { selectTags } from '../store/tagsSlice';\r\n\r\n/**\r\n * Form Validation Schema\r\n */\r\nconst schema = yup.object().shape({\r\n  title: yup.string().required('You must enter a name'),\r\n});\r\n\r\nconst TaskForm = (props) => {\r\n  const task = useSelector(selectTask);\r\n  const tags = useSelector(selectTags);\r\n  const routeParams = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { control, watch, reset, handleSubmit, formState, getValues } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { isValid, dirtyFields, errors } = formState;\r\n\r\n  const form = watch();\r\n\r\n  /**\r\n   * Update Task\r\n   */\r\n  useDeepCompareEffect(() => {\r\n    if (!isValid || _.isEmpty(form) || !task || routeParams.id === 'new') {\r\n      return;\r\n    }\r\n\r\n    if (!_.isEqual(task, form)) {\r\n      onSubmit(form);\r\n    }\r\n  }, [form, isValid]);\r\n\r\n  useEffect(() => {\r\n    if (routeParams.id === 'new') {\r\n      dispatch(newTask(routeParams.type));\r\n    } else {\r\n      dispatch(getTask(routeParams.id));\r\n    }\r\n  }, [dispatch, routeParams]);\r\n\r\n  useEffect(() => {\r\n    reset({ ...task });\r\n  }, [task, reset]);\r\n\r\n  /**\r\n   * Form Submit\r\n   */\r\n  function onSubmit(data) {\r\n    dispatch(updateTask(data));\r\n  }\r\n\r\n  function onSubmitNew(data) {\r\n    dispatch(addTask(data)).then(({ payload }) => {\r\n      navigate(`/apps/tasks/${payload.id}`);\r\n    });\r\n  }\r\n\r\n  if (_.isEmpty(form) || !task) {\r\n    return <FuseLoading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col flex-auto items-center px-24 sm:px-48\">\r\n        <div className=\"flex items-center justify-between border-b-1 w-full py-24 mt-16 mb-32\">\r\n          <Controller\r\n            control={control}\r\n            name=\"completed\"\r\n            render={({ field: { value, onChange } }) => (\r\n              <Button className=\"font-semibold\" onClick={() => onChange(!value)}>\r\n                <Box sx={{ color: value ? 'secondary.main' : 'text.disabled' }}>\r\n                  <FuseSvgIcon>heroicons-outline:check-circle</FuseSvgIcon>\r\n                </Box>\r\n                <span className=\"mx-8\">\r\n                  {task.completed ? 'MARK AS INCOMPLETE' : 'MARK AS COMPLETE'}\r\n                </span>\r\n              </Button>\r\n            )}\r\n          />\r\n          <div className=\"flex items-center\">\r\n            {routeParams.id !== 'new' && <FormActionsMenu taskId={task.id} />}\r\n            <IconButton className=\"\" component={NavLinkAdapter} to=\"/apps/tasks\" size=\"large\">\r\n              <FuseSvgIcon>heroicons-outline:x</FuseSvgIcon>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"title\"\r\n          render={({ field }) => (\r\n            <TextField\r\n              className=\"mt-32 max-h-auto\"\r\n              {...field}\r\n              label={`${_.upperFirst(form.type)} title`}\r\n              placeholder=\"Job title\"\r\n              id=\"title\"\r\n              error={!!errors.title}\r\n              helperText={errors?.title?.message}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              minRows={3}\r\n              maxRows={10}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"tags\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <Autocomplete\r\n              multiple\r\n              id=\"tags\"\r\n              className=\"mt-32\"\r\n              options={tags}\r\n              disableCloseOnSelect\r\n              getOptionLabel={(option) => option.title}\r\n              renderOption={(_props, option, { selected }) => (\r\n                <li {..._props}>\r\n                  <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                  {option.title}\r\n                </li>\r\n              )}\r\n              value={value ? value.map((id) => _.find(tags, { id })) : []}\r\n              onChange={(event, newValue) => {\r\n                onChange(newValue.map((item) => item.id));\r\n              }}\r\n              fullWidth\r\n              renderInput={(params) => <TextField {...params} label=\"Tags\" placeholder=\"Tags\" />}\r\n            />\r\n          )}\r\n        />\r\n        <div className=\"flex w-full space-x-16 mt-32 mb-16 items-center\">\r\n          <Controller\r\n            control={control}\r\n            name=\"priority\"\r\n            render={({ field }) => <TaskPrioritySelector {...field} />}\r\n          />\r\n\r\n          <Controller\r\n            control={control}\r\n            name=\"dueDate\"\r\n            render={({ field }) => (\r\n              <DateTimePicker\r\n                {...field}\r\n                className=\"w-full\"\r\n                clearable\r\n                showTodayButton\r\n                renderInput={(_props) => (\r\n                  <TextField\r\n                    className=\"\"\r\n                    id=\"due-date\"\r\n                    label=\"Due date\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    {..._props}\r\n                  />\r\n                )}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"notes\"\r\n          render={({ field }) => (\r\n            <TextField\r\n              className=\"mt-32\"\r\n              {...field}\r\n              label=\"Notes\"\r\n              placeholder=\"Notes\"\r\n              id=\"notes\"\r\n              error={!!errors.notes}\r\n              helperText={errors?.notes?.message}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              minRows={5}\r\n              maxRows={10}\r\n              InputProps={{\r\n                className: 'max-h-min h-min items-start',\r\n                startAdornment: (\r\n                  <InputAdornment className=\"mt-16\" position=\"start\">\r\n                    <FuseSvgIcon size={20}>heroicons-solid:menu-alt-2</FuseSvgIcon>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      {routeParams.id === 'new' && (\r\n        <Box\r\n          className=\"flex items-center mt-40 py-14 pr-16 pl-4 sm:pr-48 sm:pl-36 border-t\"\r\n          sx={{ backgroundColor: 'background.default' }}\r\n        >\r\n          <Button className=\"ml-auto\" component={NavLinkAdapter} to={-1}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className=\"ml-8\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={_.isEmpty(dirtyFields) || !isValid}\r\n            onClick={handleSubmit(onSubmitNew)}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}