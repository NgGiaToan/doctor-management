{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathParamsDefined = void 0;\nvar pathRegex = /\\{([a-zA-Z0-9_.-]+)\\}+/g;\n\nvar PathParamsDefined = function PathParamsDefined() {\n  var pathTemplateParams;\n  var definedPathParams;\n  var currentPath;\n  return {\n    PathItem: {\n      enter: function enter(_, _ref) {\n        var key = _ref.key;\n        definedPathParams = new Set();\n        currentPath = key;\n        pathTemplateParams = new Set(Array.from(key.toString().matchAll(pathRegex)).map(function (m) {\n          return m[1];\n        }));\n      },\n      Parameter: function Parameter(parameter, _ref2) {\n        var report = _ref2.report,\n            location = _ref2.location;\n\n        if (parameter.in === 'path' && parameter.name) {\n          definedPathParams.add(parameter.name);\n\n          if (!pathTemplateParams.has(parameter.name)) {\n            report({\n              message: \"Path parameter `\".concat(parameter.name, \"` is not used in the path `\").concat(currentPath, \"`.\"),\n              location: location.child(['name'])\n            });\n          }\n        }\n      },\n      Operation: {\n        leave: function leave(_op, _ref3) {\n          var report = _ref3.report,\n              location = _ref3.location;\n\n          for (var _i = 0, _Array$from = Array.from(pathTemplateParams.keys()); _i < _Array$from.length; _i++) {\n            var templateParam = _Array$from[_i];\n\n            if (!definedPathParams.has(templateParam)) {\n              report({\n                message: \"The operation does not define the path parameter `{\".concat(templateParam, \"}` expected by path `\").concat(currentPath, \"`.\"),\n                location: location.child(['parameters']).key() // report on operation\n\n              });\n            }\n          }\n        },\n        Parameter: function Parameter(parameter, _ref4) {\n          var report = _ref4.report,\n              location = _ref4.location;\n\n          if (parameter.in === 'path' && parameter.name) {\n            definedPathParams.add(parameter.name);\n\n            if (!pathTemplateParams.has(parameter.name)) {\n              report({\n                message: \"Path parameter `\".concat(parameter.name, \"` is not used in the path `\").concat(currentPath, \"`.\"),\n                location: location.child(['name'])\n              });\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.PathParamsDefined = PathParamsDefined;","map":null,"metadata":{},"sourceType":"script"}