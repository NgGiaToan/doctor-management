{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\pages\\\\Masonry.js\";\nimport FuseExample from '@fuse/core/FuseExample';\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n/* eslint import/no-webpack-loader-syntax: off */\n\n/* eslint import/extensions: off */\n\n/* eslint no-unused-vars: off */\n\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MasonryDoc(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 grow-0 items-center justify-end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"normal-case\",\n        variant: \"contained\",\n        color: \"secondary\",\n        component: \"a\",\n        href: \"https://mui.com/components/masonry\",\n        target: \"_blank\",\n        role: \"button\",\n        startIcon: /*#__PURE__*/_jsxDEV(FuseSvgIcon, {\n          children: \"heroicons-outline:external-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 22\n        }, this),\n        children: \"Reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-40 my-16 font-700\",\n      component: \"h1\",\n      children: \"Masonry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"description\",\n      children: \"Masonry lays out contents of varying dimensions as blocks of the same width and different height with configurable gaps.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: \"Masonry maintains a list of content blocks with a consistent width but different height. The contents are ordered by row. If a row is already filled with the specified number of columns, the next item starts another row, and it is added to the shortest column in order to optimize the use of space.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Basic masonry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"A simple example of a \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Masonry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 31\n      }, this), \". \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Masonry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }, this), \" is a container for one or more items. It can receive any element including \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: `<div />`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 58\n      }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: `<img />`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"BasicMasonry.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/BasicMasonry.js').default,\n        raw: require('!raw-loader!../components/masonry/BasicMasonry.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Image masonry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"This example demonstrates the use of \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Masonry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 46\n      }, this), \" for images. \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Masonry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 79\n      }, this), ' ', \"orders its children by row. If you'd like to order images by column, check out\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/material-ui/react-image-list/#masonry-image-list\",\n        children: \"ImageList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ImageMasonry.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/ImageMasonry.js').default,\n        raw: require('!raw-loader!../components/masonry/ImageMasonry.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Items with variable height\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"This example demonstrates the use of \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Masonry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }, this), \" for items with variable height. Items can move to other columns in order to abide by the rule that items are always added to the shortest column and hence optimize the use of space.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"MasonryWithVariableHeightItems.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/MasonryWithVariableHeightItems.js').default,\n        raw: require('!raw-loader!../components/masonry/MasonryWithVariableHeightItems.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"This example demonstrates the use of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 50\n      }, this), \" to configure the number of columns of a \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"Masonry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"FixedColumns.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/FixedColumns.js').default,\n        raw: require('!raw-loader!../components/masonry/FixedColumns.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), \" accepts responsive values:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ResponsiveColumns.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/ResponsiveColumns.js').default,\n        raw: require('!raw-loader!../components/masonry/ResponsiveColumns.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Spacing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"This example demonstrates the use of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"spacing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 50\n      }, this), \" to configure the spacing between items. It is important to note that the value provided to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"spacing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 79\n      }, this), ' ', \"prop is multiplied by the theme's spacing field.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"FixedSpacing.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/FixedSpacing.js').default,\n        raw: require('!raw-loader!../components/masonry/FixedSpacing.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"spacing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), \" accepts responsive values:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"ResponsiveSpacing.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/ResponsiveSpacing.js').default,\n        raw: require('!raw-loader!../components/masonry/ResponsiveSpacing.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-32 mt-40 mb-10 font-700\",\n      component: \"h2\",\n      children: \"Server-side rendering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\"This example demonstrates the use of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"defaultHeight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 50\n      }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"defaultColumns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"defaultSpacing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }, this), \", which are used to support server-side rendering.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: [\":::info\", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), \": \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"defaultHeight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 32\n      }, this), \" should be large enough to render all rows. Also, it is worth mentioning that items are not added to the shortest column in case of server-side rendering. :::\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mb-40\",\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(FuseExample, {\n        name: \"SSRMasonry.js\",\n        className: \"my-24\",\n        iframe: false,\n        component: require('../components/masonry/SSRMasonry.js').default,\n        raw: require('!raw-loader!../components/masonry/SSRMasonry.js')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = MasonryDoc;\nexport default MasonryDoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasonryDoc\");","map":{"version":3,"names":["FuseExample","FuseSvgIcon","Button","Typography","MasonryDoc","props","require","default"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/pages/Masonry.js"],"sourcesContent":["import FuseExample from '@fuse/core/FuseExample';\r\nimport FuseSvgIcon from '@fuse/core/FuseSvgIcon';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n/* eslint import/no-webpack-loader-syntax: off */\r\n/* eslint import/extensions: off */\r\n/* eslint no-unused-vars: off */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\n\r\nfunction MasonryDoc(props) {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-1 grow-0 items-center justify-end\">\r\n        <Button\r\n          className=\"normal-case\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          component=\"a\"\r\n          href=\"https://mui.com/components/masonry\"\r\n          target=\"_blank\"\r\n          role=\"button\"\r\n          startIcon={<FuseSvgIcon>heroicons-outline:external-link</FuseSvgIcon>}\r\n        >\r\n          Reference\r\n        </Button>\r\n      </div>\r\n      <Typography className=\"text-40 my-16 font-700\" component=\"h1\">\r\n        Masonry\r\n      </Typography>\r\n      <Typography className=\"description\">\r\n        Masonry lays out contents of varying dimensions as blocks of the same width and different\r\n        height with configurable gaps.\r\n      </Typography>\r\n\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        Masonry maintains a list of content blocks with a consistent width but different height. The\r\n        contents are ordered by row. If a row is already filled with the specified number of\r\n        columns, the next item starts another row, and it is added to the shortest column in order\r\n        to optimize the use of space.\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Basic masonry\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        A simple example of a <code>Masonry</code>. <code>Masonry</code> is a container for one or\r\n        more items. It can receive any element including <code>{`<div />`}</code> and{' '}\r\n        <code>{`<img />`}</code>.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"BasicMasonry.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/BasicMasonry.js').default}\r\n          raw={require('!raw-loader!../components/masonry/BasicMasonry.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Image masonry\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        This example demonstrates the use of <code>Masonry</code> for images. <code>Masonry</code>{' '}\r\n        orders its children by row. If you&#39;d like to order images by column, check out{' '}\r\n        <a href=\"/material-ui/react-image-list/#masonry-image-list\">ImageList</a>.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ImageMasonry.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/ImageMasonry.js').default}\r\n          raw={require('!raw-loader!../components/masonry/ImageMasonry.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Items with variable height\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        This example demonstrates the use of <code>Masonry</code> for items with variable height.\r\n        Items can move to other columns in order to abide by the rule that items are always added to\r\n        the shortest column and hence optimize the use of space.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"MasonryWithVariableHeightItems.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/MasonryWithVariableHeightItems.js').default}\r\n          raw={require('!raw-loader!../components/masonry/MasonryWithVariableHeightItems.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Columns\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        This example demonstrates the use of the <code>columns</code> to configure the number of\r\n        columns of a <code>Masonry</code>.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"FixedColumns.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/FixedColumns.js').default}\r\n          raw={require('!raw-loader!../components/masonry/FixedColumns.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <code>columns</code> accepts responsive values:\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ResponsiveColumns.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/ResponsiveColumns.js').default}\r\n          raw={require('!raw-loader!../components/masonry/ResponsiveColumns.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Spacing\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        This example demonstrates the use of the <code>spacing</code> to configure the spacing\r\n        between items. It is important to note that the value provided to the <code>spacing</code>{' '}\r\n        prop is multiplied by the theme&#39;s spacing field.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"FixedSpacing.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/FixedSpacing.js').default}\r\n          raw={require('!raw-loader!../components/masonry/FixedSpacing.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <code>spacing</code> accepts responsive values:\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"ResponsiveSpacing.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/ResponsiveSpacing.js').default}\r\n          raw={require('!raw-loader!../components/masonry/ResponsiveSpacing.js')}\r\n        />\r\n      </Typography>\r\n      <Typography className=\"text-32 mt-40 mb-10 font-700\" component=\"h2\">\r\n        Server-side rendering\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        This example demonstrates the use of the <code>defaultHeight</code>,{' '}\r\n        <code>defaultColumns</code> and <code>defaultSpacing</code>, which are used to support\r\n        server-side rendering.\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        :::info\r\n        <strong>Note</strong>: <code>defaultHeight</code> should be large enough to render all rows.\r\n        Also, it is worth mentioning that items are not added to the shortest column in case of\r\n        server-side rendering. :::\r\n      </Typography>\r\n      <Typography className=\"mb-40\" component=\"div\">\r\n        <FuseExample\r\n          name=\"SSRMasonry.js\"\r\n          className=\"my-24\"\r\n          iframe={false}\r\n          component={require('../components/masonry/SSRMasonry.js').default}\r\n          raw={require('!raw-loader!../components/masonry/SSRMasonry.js')}\r\n        />\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MasonryDoc;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}