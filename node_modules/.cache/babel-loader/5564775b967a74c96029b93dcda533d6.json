{"ast":null,"code":"import _ from '@lodash';\nimport FuseUtils from '@fuse/utils';\nimport mockApi from '../mock-api.json';\nimport mock from '../mock';\nconst contactsDB = mockApi.components.examples.chat_contacts.value;\nlet userDB = mockApi.components.examples.chat_profile.value;\nconst userChatListDB = mockApi.components.examples.chat_chats.value;\nconst messages = mockApi.components.examples.chat_messages.value;\nconst chatsDB = userChatListDB.map(chat => ({ ...chat,\n  messages: messages.map(message => ({ ...message,\n    contactId: message.contactId === '' ? chat.contactId : userDB.id\n  }))\n}));\nmock.onGet('/api/chat/contacts').reply(config => {\n  return [200, contactsDB];\n});\nmock.onGet('/api/chat/chats').reply(config => {\n  userChatListDB.sort((d1, d2) => new Date(d2.lastMessageAt).getTime() - new Date(d1.lastMessageAt).getTime());\n  return [200, userChatListDB];\n});\nmock.onGet(/\\/api\\/chat\\/chats\\/[^/]+/).reply(config => {\n  var _$find;\n\n  const {\n    contactId\n  } = config.url.match(/\\/api\\/chat\\/chats\\/(?<contactId>[^/]+)/).groups;\n\n  const contact = _.find(contactsDB, {\n    id: contactId\n  });\n\n  if (!contact) {\n    return [404, 'Requested data do not exist.'];\n  }\n\n  const data = (_$find = _.find(chatsDB, {\n    contactId\n  })) === null || _$find === void 0 ? void 0 : _$find.messages;\n\n  if (data) {\n    return [200, data];\n  }\n\n  return [200, []];\n});\nmock.onPost(/\\/api\\/chat\\/chats\\/[^/]+/).reply(_ref => {\n  let {\n    url,\n    data: value\n  } = _ref;\n  const {\n    contactId\n  } = url.match(/\\/api\\/chat\\/chats\\/(?<contactId>[^/]+)/).groups;\n\n  const contact = _.find(contactsDB, {\n    id: contactId\n  });\n\n  if (!contact) {\n    return [404, 'Requested data do not exist.'];\n  }\n\n  const contactChat = _.find(chatsDB, {\n    contactId\n  });\n\n  if (!contactChat) {\n    createNewChat(contactId);\n  }\n\n  const newMessage = createNewMessage(value, contactId);\n  return [200, newMessage];\n});\nmock.onGet('/api/chat/user').reply(config => {\n  return [200, userDB];\n});\nmock.onPost('/api/chat/user').reply(_ref2 => {\n  let {\n    data\n  } = _ref2;\n  const userData = JSON.parse(data);\n  userDB = _.merge({}, userDB, userData);\n  return [200, userDB];\n});\n\nfunction createNewMessage(value, contactId) {\n  const message = {\n    id: FuseUtils.generateGUID(),\n    contactId: userDB.id,\n    value,\n    createdAt: new Date().toISOString()\n  };\n\n  const selectedChat = _.find(chatsDB, {\n    contactId\n  });\n\n  const userSelectedChat = _.find(userChatListDB, {\n    contactId\n  });\n\n  selectedChat.messages.push(message);\n  selectedChat.lastMessage = value;\n  selectedChat.lastMessageAt = message.createdAt;\n  userSelectedChat.lastMessage = value;\n  userSelectedChat.lastMessageAt = message.createdAt;\n  return message;\n}\n\nfunction createNewChat(contactId) {\n  const newChat = {\n    id: FuseUtils.generateGUID(),\n    contactId,\n    unreadCount: 0,\n    muted: false,\n    lastMessage: '',\n    lastMessageAt: ''\n  };\n  userChatListDB.push(newChat);\n  const newMessageData = { ...newChat,\n    messages: []\n  };\n  chatsDB.push(newMessageData);\n  return newMessageData;\n}","map":{"version":3,"names":["_","FuseUtils","mockApi","mock","contactsDB","components","examples","chat_contacts","value","userDB","chat_profile","userChatListDB","chat_chats","messages","chat_messages","chatsDB","map","chat","message","contactId","id","onGet","reply","config","sort","d1","d2","Date","lastMessageAt","getTime","url","match","groups","contact","find","data","onPost","contactChat","createNewChat","newMessage","createNewMessage","userData","JSON","parse","merge","generateGUID","createdAt","toISOString","selectedChat","userSelectedChat","push","lastMessage","newChat","unreadCount","muted","newMessageData"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/chat-api.js"],"sourcesContent":["import _ from '@lodash';\r\nimport FuseUtils from '@fuse/utils';\r\nimport mockApi from '../mock-api.json';\r\nimport mock from '../mock';\r\n\r\nconst contactsDB = mockApi.components.examples.chat_contacts.value;\r\nlet userDB = mockApi.components.examples.chat_profile.value;\r\nconst userChatListDB = mockApi.components.examples.chat_chats.value;\r\nconst messages = mockApi.components.examples.chat_messages.value;\r\nconst chatsDB = userChatListDB.map((chat) => ({\r\n  ...chat,\r\n  messages: messages.map((message) => ({\r\n    ...message,\r\n    contactId: message.contactId === '' ? chat.contactId : userDB.id,\r\n  })),\r\n}));\r\n\r\nmock.onGet('/api/chat/contacts').reply((config) => {\r\n  return [200, contactsDB];\r\n});\r\n\r\nmock.onGet('/api/chat/chats').reply((config) => {\r\n  userChatListDB.sort(\r\n    (d1, d2) => new Date(d2.lastMessageAt).getTime() - new Date(d1.lastMessageAt).getTime()\r\n  );\r\n\r\n  return [200, userChatListDB];\r\n});\r\n\r\nmock.onGet(/\\/api\\/chat\\/chats\\/[^/]+/).reply((config) => {\r\n  const { contactId } = config.url.match(/\\/api\\/chat\\/chats\\/(?<contactId>[^/]+)/).groups;\r\n  const contact = _.find(contactsDB, { id: contactId });\r\n\r\n  if (!contact) {\r\n    return [404, 'Requested data do not exist.'];\r\n  }\r\n\r\n  const data = _.find(chatsDB, { contactId })?.messages;\r\n\r\n  if (data) {\r\n    return [200, data];\r\n  }\r\n\r\n  return [200, []];\r\n});\r\n\r\nmock.onPost(/\\/api\\/chat\\/chats\\/[^/]+/).reply(({ url, data: value }) => {\r\n  const { contactId } = url.match(/\\/api\\/chat\\/chats\\/(?<contactId>[^/]+)/).groups;\r\n  const contact = _.find(contactsDB, { id: contactId });\r\n\r\n  if (!contact) {\r\n    return [404, 'Requested data do not exist.'];\r\n  }\r\n\r\n  const contactChat = _.find(chatsDB, { contactId });\r\n\r\n  if (!contactChat) {\r\n    createNewChat(contactId);\r\n  }\r\n\r\n  const newMessage = createNewMessage(value, contactId);\r\n\r\n  return [200, newMessage];\r\n});\r\n\r\nmock.onGet('/api/chat/user').reply((config) => {\r\n  return [200, userDB];\r\n});\r\n\r\nmock.onPost('/api/chat/user').reply(({ data }) => {\r\n  const userData = JSON.parse(data);\r\n  userDB = _.merge({}, userDB, userData);\r\n  return [200, userDB];\r\n});\r\n\r\nfunction createNewMessage(value, contactId) {\r\n  const message = {\r\n    id: FuseUtils.generateGUID(),\r\n    contactId: userDB.id,\r\n    value,\r\n    createdAt: new Date().toISOString(),\r\n  };\r\n\r\n  const selectedChat = _.find(chatsDB, { contactId });\r\n  const userSelectedChat = _.find(userChatListDB, { contactId });\r\n\r\n  selectedChat.messages.push(message);\r\n  selectedChat.lastMessage = value;\r\n  selectedChat.lastMessageAt = message.createdAt;\r\n  userSelectedChat.lastMessage = value;\r\n  userSelectedChat.lastMessageAt = message.createdAt;\r\n\r\n  return message;\r\n}\r\n\r\nfunction createNewChat(contactId) {\r\n  const newChat = {\r\n    id: FuseUtils.generateGUID(),\r\n    contactId,\r\n    unreadCount: 0,\r\n    muted: false,\r\n    lastMessage: '',\r\n    lastMessageAt: '',\r\n  };\r\n\r\n  userChatListDB.push(newChat);\r\n\r\n  const newMessageData = {\r\n    ...newChat,\r\n    messages: [],\r\n  };\r\n\r\n  chatsDB.push(newMessageData);\r\n\r\n  return newMessageData;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}