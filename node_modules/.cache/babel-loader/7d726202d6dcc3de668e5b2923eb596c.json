{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\third-party-components\\\\react-table\\\\examples\\\\simple.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport MaUTable from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { useTable } from 'react-table';\nimport sampleData from './sampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(MaUTable, { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 16\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Table, \"Xnx1aw5Ajdh27qgCo7ZNFYuAvQ0=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction App() {\n  _s2();\n\n  const columns = useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = useMemo(() => sampleData, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useMemo","MaUTable","TableBody","TableCell","TableHead","TableRow","useTable","sampleData","Table","columns","data","getTableProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","App","Header","accessor"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/third-party-components/react-table/examples/simple.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport MaUTable from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { useTable } from 'react-table';\r\nimport sampleData from './sampleData';\r\n\r\nfunction Table({ columns, data }) {\r\n\t// Use the state and functions returned from useTable to build your UI\r\n\tconst { getTableProps, headerGroups, rows, prepareRow } = useTable({\r\n\t\tcolumns,\r\n\t\tdata\r\n\t});\r\n\r\n\t// Render the UI for your table\r\n\treturn (\r\n\t\t<MaUTable {...getTableProps()}>\r\n\t\t\t<TableHead>\r\n\t\t\t\t{headerGroups.map(headerGroup => (\r\n\t\t\t\t\t<TableRow {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t{headerGroup.headers.map(column => (\r\n\t\t\t\t\t\t\t<TableCell {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t))}\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>\r\n\t\t\t\t{rows.map((row, i) => {\r\n\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TableRow {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t{row.cells.map(cell => {\r\n\t\t\t\t\t\t\t\treturn <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</TableBody>\r\n\t\t</MaUTable>\r\n\t);\r\n}\r\n\r\nfunction App() {\r\n\tconst columns = useMemo(\r\n\t\t() => [\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Name',\r\n\t\t\t\tcolumns: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: 'First Name',\r\n\t\t\t\t\t\taccessor: 'firstName'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: 'Last Name',\r\n\t\t\t\t\t\taccessor: 'lastName'\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Info',\r\n\t\t\t\tcolumns: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: 'Age',\r\n\t\t\t\t\t\taccessor: 'age'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: 'Visits',\r\n\t\t\t\t\t\taccessor: 'visits'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\t\taccessor: 'status'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tHeader: 'Profile Progress',\r\n\t\t\t\t\t\taccessor: 'progress'\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\t\t[]\r\n\t);\r\n\r\n\tconst data = useMemo(() => sampleData, []);\r\n\r\n\treturn <Table columns={columns} data={data} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,KAAT,OAAkC;EAAA;;EAAA,IAAnB;IAAEC,OAAF;IAAWC;EAAX,CAAmB;EACjC;EACA,MAAM;IAAEC,aAAF;IAAiBC,YAAjB;IAA+BC,IAA/B;IAAqCC;EAArC,IAAoDR,QAAQ,CAAC;IAClEG,OADkE;IAElEC;EAFkE,CAAD,CAAlE,CAFiC,CAOjC;;EACA,oBACC,QAAC,QAAD,OAAcC,aAAa,EAA3B;IAAA,wBACC,QAAC,SAAD;MAAA,UACEC,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBAC5B,QAAC,QAAD,OAAcA,WAAW,CAACC,mBAAZ,EAAd;QAAA,UACED,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC9B,QAAC,SAAD,OAAeA,MAAM,CAACC,cAAP,EAAf;UAAA,UAAyCD,MAAM,CAACE,MAAP,CAAc,QAAd;QAAzC;UAAA;UAAA;UAAA;QAAA,QADA;MADF;QAAA;QAAA;QAAA;MAAA,QADA;IADF;MAAA;MAAA;MAAA;IAAA,QADD,eAUC,QAAC,SAAD;MAAA,UACER,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;QACrBT,UAAU,CAACQ,GAAD,CAAV;QACA,oBACC,QAAC,QAAD,OAAcA,GAAG,CAACE,WAAJ,EAAd;UAAA,UACEF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAcW,IAAI,IAAI;YACtB,oBAAO,QAAC,SAAD,OAAeA,IAAI,CAACC,YAAL,EAAf;cAAA,UAAqCD,IAAI,CAACL,MAAL,CAAY,MAAZ;YAArC;cAAA;cAAA;cAAA;YAAA,QAAP;UACA,CAFA;QADF;UAAA;UAAA;UAAA;QAAA,QADD;MAOA,CATA;IADF;MAAA;MAAA;MAAA;IAAA,QAVD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAyBA;;GAjCQb,K;UAEkDF,Q;;;KAFlDE,K;;AAmCT,SAASoB,GAAT,GAAe;EAAA;;EACd,MAAMnB,OAAO,GAAGT,OAAO,CACtB,MAAM,CACL;IACC6B,MAAM,EAAE,MADT;IAECpB,OAAO,EAAE,CACR;MACCoB,MAAM,EAAE,YADT;MAECC,QAAQ,EAAE;IAFX,CADQ,EAKR;MACCD,MAAM,EAAE,WADT;MAECC,QAAQ,EAAE;IAFX,CALQ;EAFV,CADK,EAcL;IACCD,MAAM,EAAE,MADT;IAECpB,OAAO,EAAE,CACR;MACCoB,MAAM,EAAE,KADT;MAECC,QAAQ,EAAE;IAFX,CADQ,EAKR;MACCD,MAAM,EAAE,QADT;MAECC,QAAQ,EAAE;IAFX,CALQ,EASR;MACCD,MAAM,EAAE,QADT;MAECC,QAAQ,EAAE;IAFX,CATQ,EAaR;MACCD,MAAM,EAAE,kBADT;MAECC,QAAQ,EAAE;IAFX,CAbQ;EAFV,CAdK,CADgB,EAqCtB,EArCsB,CAAvB;EAwCA,MAAMpB,IAAI,GAAGV,OAAO,CAAC,MAAMO,UAAP,EAAmB,EAAnB,CAApB;EAEA,oBAAO,QAAC,KAAD;IAAO,OAAO,EAAEE,OAAhB;IAAyB,IAAI,EAAEC;EAA/B;IAAA;IAAA;IAAA;EAAA,QAAP;AACA;;IA5CQkB,G;;MAAAA,G;AA8CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}