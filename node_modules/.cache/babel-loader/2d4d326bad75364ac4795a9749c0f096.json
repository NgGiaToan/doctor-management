{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanParameterPrefixes = void 0;\n\nvar BooleanParameterPrefixes = function BooleanParameterPrefixes(options) {\n  var prefixes = options.prefixes || ['is', 'has'];\n  var regexp = new RegExp(\"^(\".concat(prefixes.join('|'), \")[A-Z-_]\"));\n  var wrappedPrefixes = prefixes.map(function (p) {\n    return \"`\".concat(p, \"`\");\n  });\n  var prefixesString = wrappedPrefixes.length === 1 ? wrappedPrefixes[0] : wrappedPrefixes.slice(0, -1).join(', ') + ' or ' + wrappedPrefixes[prefixes.length - 1];\n  return {\n    Parameter: {\n      Schema: function Schema(schema, _ref, parents) {\n        var report = _ref.report,\n            parentLocations = _ref.parentLocations;\n\n        if (schema.type === 'boolean' && !regexp.test(parents.Parameter.name)) {\n          report({\n            message: \"Boolean parameter `\".concat(parents.Parameter.name, \"` should have \").concat(prefixesString, \" prefix.\"),\n            location: parentLocations.Parameter.child(['name'])\n          });\n        }\n      }\n    }\n  };\n};\n\nexports.BooleanParameterPrefixes = BooleanParameterPrefixes;","map":null,"metadata":{},"sourceType":"script"}