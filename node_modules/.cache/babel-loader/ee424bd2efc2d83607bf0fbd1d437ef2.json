{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createReducer from './rootReducer';\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default;\n\n    store.replaceReducer(newRootReducer.createReducer());\n  });\n}\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  const {\n    createLogger\n  } = require(`redux-logger`);\n\n  const logger = createLogger({\n    collapsed: (getState, action, logEntry) => !logEntry.error\n  });\n  middlewares.push(logger);\n}\n\nconst store = configureStore({\n  reducer: createReducer(),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false\n  }).concat(middlewares),\n  devTools: process.env.NODE_ENV === 'development'\n});\nstore.asyncReducers = {};\nexport const injectReducer = (key, reducer) => {\n  if (store.asyncReducers[key]) {\n    return false;\n  }\n\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(createReducer(store.asyncReducers));\n  return store;\n};\nexport default store;","map":{"version":3,"names":["configureStore","createReducer","process","env","NODE_ENV","module","hot","accept","newRootReducer","require","default","store","replaceReducer","middlewares","createLogger","logger","collapsed","getState","action","logEntry","error","push","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","concat","devTools","asyncReducers","injectReducer","key"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport createReducer from './rootReducer';\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n  module.hot.accept('./rootReducer', () => {\r\n    const newRootReducer = require('./rootReducer').default;\r\n    store.replaceReducer(newRootReducer.createReducer());\r\n  });\r\n}\r\n\r\nconst middlewares = [];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const { createLogger } = require(`redux-logger`);\r\n  const logger = createLogger({ collapsed: (getState, action, logEntry) => !logEntry.error });\r\n\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: createReducer(),\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      immutableCheck: false,\r\n      serializableCheck: false,\r\n    }).concat(middlewares),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nstore.asyncReducers = {};\r\n\r\nexport const injectReducer = (key, reducer) => {\r\n  if (store.asyncReducers[key]) {\r\n    return false;\r\n  }\r\n  store.asyncReducers[key] = reducer;\r\n  store.replaceReducer(createReducer(store.asyncReducers));\r\n  return store;\r\n};\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,aAAP,MAA0B,eAA1B;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CC,MAAM,CAACC,GAArD,EAA0D;EACxDD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,eAAlB,EAAmC,MAAM;IACvC,MAAMC,cAAc,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,OAAhD;;IACAC,KAAK,CAACC,cAAN,CAAqBJ,cAAc,CAACP,aAAf,EAArB;EACD,CAHD;AAID;;AAED,MAAMY,WAAW,GAAG,EAApB;;AAEA,IAAIX,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;EAC1C,MAAM;IAAEU;EAAF,IAAmBL,OAAO,CAAE,cAAF,CAAhC;;EACA,MAAMM,MAAM,GAAGD,YAAY,CAAC;IAAEE,SAAS,EAAE,CAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,KAAgC,CAACA,QAAQ,CAACC;EAAvD,CAAD,CAA3B;EAEAP,WAAW,CAACQ,IAAZ,CAAiBN,MAAjB;AACD;;AAED,MAAMJ,KAAK,GAAGX,cAAc,CAAC;EAC3BsB,OAAO,EAAErB,aAAa,EADK;EAE3BsB,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;IACnBC,cAAc,EAAE,KADG;IAEnBC,iBAAiB,EAAE;EAFA,CAAD,CAApB,CAGGC,MAHH,CAGUd,WAHV,CAHyB;EAO3Be,QAAQ,EAAE1B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAPR,CAAD,CAA5B;AAUAO,KAAK,CAACkB,aAAN,GAAsB,EAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMT,OAAN,KAAkB;EAC7C,IAAIX,KAAK,CAACkB,aAAN,CAAoBE,GAApB,CAAJ,EAA8B;IAC5B,OAAO,KAAP;EACD;;EACDpB,KAAK,CAACkB,aAAN,CAAoBE,GAApB,IAA2BT,OAA3B;EACAX,KAAK,CAACC,cAAN,CAAqBX,aAAa,CAACU,KAAK,CAACkB,aAAP,CAAlC;EACA,OAAOlB,KAAP;AACD,CAPM;AASP,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}