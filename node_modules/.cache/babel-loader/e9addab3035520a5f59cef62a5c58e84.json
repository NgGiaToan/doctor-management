{"ast":null,"code":"Prism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;","map":{"version":3,"names":["Prism","languages","scss","extend","pattern","lookbehind","inside","alias","insertBefore","rest"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/prismjs/components/prism-scss.js"],"sourcesContent":["Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n\t\t{\n\t\t\tpattern: /( )(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'module-modifier': {\n\t\tpattern: /\\b(?:as|hide|show|with)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,KAAvB,EAA8B;EACpD,WAAW;IACVC,OAAO,EAAE,sCADC;IAEVC,UAAU,EAAE;EAFF,CADyC;EAKpD,UAAU;IACTD,OAAO,EAAE,qDADA;IAETE,MAAM,EAAE;MACP,QAAQ,SADD,CAEP;;IAFO;EAFC,CAL0C;EAYpD;EACA,OAAO,yBAb6C;EAcpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,YAAY;IACX;IACAF,OAAO,EAAE,gGAFE;IAGXE,MAAM,EAAE;MACP,UAAU;QACTF,OAAO,EAAE,GADA;QAETG,KAAK,EAAE;MAFE,CADH;MAKP,eAAe,SALR;MAMP,YAAY;IANL;EAHG,CArBwC;EAiCpD,YAAY;IACXH,OAAO,EAAE,0CADE;IAEXE,MAAM,EAAE;MACP,YAAY;IADL;EAFG;AAjCwC,CAA9B,CAAvB;AAyCAN,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;EAC9C,WAAW,CACV,mHADU,EAEV;IACCJ,OAAO,EAAE,0BADV;IAECC,UAAU,EAAE;EAFb,CAFU;AADmC,CAA/C;AAUAL,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,WAArC,EAAkD;EACjD;EACA,YAAY;AAFqC,CAAlD;AAKAR,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;EAChD,mBAAmB;IAClBJ,OAAO,EAAE,4BADS;IAElBG,KAAK,EAAE;EAFW,CAD6B;EAKhD,eAAe;IACdH,OAAO,EAAE,SADK;IAEdG,KAAK,EAAE;EAFO,CALiC;EAShD,aAAa;IACZH,OAAO,EAAE,4BADG;IAEZG,KAAK,EAAE;EAFK,CATmC;EAahD,WAAW,oBAbqC;EAchD,QAAQ;IACPH,OAAO,EAAE,UADF;IAEPG,KAAK,EAAE;EAFA,CAdwC;EAkBhD,YAAY;IACXH,OAAO,EAAE,iDADE;IAEXC,UAAU,EAAE;EAFD;AAlBoC,CAAjD;AAwBAL,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqB,QAArB,EAA+BI,MAA/B,CAAsCG,IAAtC,GAA6CT,KAAK,CAACC,SAAN,CAAgBC,IAA7D"},"metadata":{},"sourceType":"script"}