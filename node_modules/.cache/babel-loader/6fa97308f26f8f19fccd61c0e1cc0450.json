{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reportUnresolvedRef = exports.NoUnresolvedRefs = void 0;\n\nconst resolve_1 = require(\"../resolve\");\n\nconst NoUnresolvedRefs = () => {\n  return {\n    ref: {\n      leave(_, _ref, resolved) {\n        let {\n          report,\n          location\n        } = _ref;\n        if (resolved.node !== undefined) return;\n        reportUnresolvedRef(resolved, report, location);\n      }\n\n    },\n\n    DiscriminatorMapping(mapping, _ref2) {\n      let {\n        report,\n        resolve,\n        location\n      } = _ref2;\n\n      for (const mappingName of Object.keys(mapping)) {\n        const resolved = resolve({\n          $ref: mapping[mappingName]\n        });\n        if (resolved.node !== undefined) return;\n        reportUnresolvedRef(resolved, report, location.child(mappingName));\n      }\n    }\n\n  };\n};\n\nexports.NoUnresolvedRefs = NoUnresolvedRefs;\n\nfunction reportUnresolvedRef(resolved, report, location) {\n  var _a;\n\n  const error = resolved.error;\n\n  if (error instanceof resolve_1.YamlParseError) {\n    report({\n      message: 'Failed to parse: ' + error.message,\n      location: {\n        source: error.source,\n        pointer: undefined,\n        start: {\n          col: error.col,\n          line: error.line\n        }\n      }\n    });\n  }\n\n  const message = (_a = resolved.error) === null || _a === void 0 ? void 0 : _a.message;\n  report({\n    location,\n    message: `Can't resolve $ref${message ? ': ' + message : ''}`\n  });\n}\n\nexports.reportUnresolvedRef = reportUnresolvedRef;","map":{"version":3,"names":["Object","defineProperty","exports","value","reportUnresolvedRef","NoUnresolvedRefs","resolve_1","require","ref","leave","_","resolved","report","location","node","undefined","DiscriminatorMapping","mapping","resolve","mappingName","keys","$ref","child","_a","error","YamlParseError","message","source","pointer","start","col","line"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/no-unresolved-refs.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportUnresolvedRef = exports.NoUnresolvedRefs = void 0;\nconst resolve_1 = require(\"../resolve\");\nconst NoUnresolvedRefs = () => {\n    return {\n        ref: {\n            leave(_, { report, location }, resolved) {\n                if (resolved.node !== undefined)\n                    return;\n                reportUnresolvedRef(resolved, report, location);\n            },\n        },\n        DiscriminatorMapping(mapping, { report, resolve, location }) {\n            for (const mappingName of Object.keys(mapping)) {\n                const resolved = resolve({ $ref: mapping[mappingName] });\n                if (resolved.node !== undefined)\n                    return;\n                reportUnresolvedRef(resolved, report, location.child(mappingName));\n            }\n        },\n    };\n};\nexports.NoUnresolvedRefs = NoUnresolvedRefs;\nfunction reportUnresolvedRef(resolved, report, location) {\n    var _a;\n    const error = resolved.error;\n    if (error instanceof resolve_1.YamlParseError) {\n        report({\n            message: 'Failed to parse: ' + error.message,\n            location: {\n                source: error.source,\n                pointer: undefined,\n                start: {\n                    col: error.col,\n                    line: error.line,\n                },\n            },\n        });\n    }\n    const message = (_a = resolved.error) === null || _a === void 0 ? void 0 : _a.message;\n    report({\n        location,\n        message: `Can't resolve $ref${message ? ': ' + message : ''}`,\n    });\n}\nexports.reportUnresolvedRef = reportUnresolvedRef;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8BF,OAAO,CAACG,gBAAR,GAA2B,KAAK,CAA9D;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMF,gBAAgB,GAAG,MAAM;EAC3B,OAAO;IACHG,GAAG,EAAE;MACDC,KAAK,CAACC,CAAD,QAA0BC,QAA1B,EAAoC;QAAA,IAAhC;UAAEC,MAAF;UAAUC;QAAV,CAAgC;QACrC,IAAIF,QAAQ,CAACG,IAAT,KAAkBC,SAAtB,EACI;QACJX,mBAAmB,CAACO,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,CAAnB;MACH;;IALA,CADF;;IAQHG,oBAAoB,CAACC,OAAD,SAAyC;MAAA,IAA/B;QAAEL,MAAF;QAAUM,OAAV;QAAmBL;MAAnB,CAA+B;;MACzD,KAAK,MAAMM,WAAX,IAA0BnB,MAAM,CAACoB,IAAP,CAAYH,OAAZ,CAA1B,EAAgD;QAC5C,MAAMN,QAAQ,GAAGO,OAAO,CAAC;UAAEG,IAAI,EAAEJ,OAAO,CAACE,WAAD;QAAf,CAAD,CAAxB;QACA,IAAIR,QAAQ,CAACG,IAAT,KAAkBC,SAAtB,EACI;QACJX,mBAAmB,CAACO,QAAD,EAAWC,MAAX,EAAmBC,QAAQ,CAACS,KAAT,CAAeH,WAAf,CAAnB,CAAnB;MACH;IACJ;;EAfE,CAAP;AAiBH,CAlBD;;AAmBAjB,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;;AACA,SAASD,mBAAT,CAA6BO,QAA7B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD;EACrD,IAAIU,EAAJ;;EACA,MAAMC,KAAK,GAAGb,QAAQ,CAACa,KAAvB;;EACA,IAAIA,KAAK,YAAYlB,SAAS,CAACmB,cAA/B,EAA+C;IAC3Cb,MAAM,CAAC;MACHc,OAAO,EAAE,sBAAsBF,KAAK,CAACE,OADlC;MAEHb,QAAQ,EAAE;QACNc,MAAM,EAAEH,KAAK,CAACG,MADR;QAENC,OAAO,EAAEb,SAFH;QAGNc,KAAK,EAAE;UACHC,GAAG,EAAEN,KAAK,CAACM,GADR;UAEHC,IAAI,EAAEP,KAAK,CAACO;QAFT;MAHD;IAFP,CAAD,CAAN;EAWH;;EACD,MAAML,OAAO,GAAG,CAACH,EAAE,GAAGZ,QAAQ,CAACa,KAAf,MAA0B,IAA1B,IAAkCD,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACG,OAA9E;EACAd,MAAM,CAAC;IACHC,QADG;IAEHa,OAAO,EAAG,qBAAoBA,OAAO,GAAG,OAAOA,OAAV,GAAoB,EAAG;EAFzD,CAAD,CAAN;AAIH;;AACDxB,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B"},"metadata":{},"sourceType":"script"}