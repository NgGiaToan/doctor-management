{"ast":null,"code":"import FuseUtils from '@fuse/utils/FuseUtils';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport jwtServiceConfig from './jwtServiceConfig';\n/* eslint-disable camelcase */\n\nclass JwtService extends FuseUtils.EventEmitter {\n  constructor() {\n    super(...arguments);\n\n    this.setInterceptors = () => {\n      axios.interceptors.response.use(response => {\n        return response;\n      }, err => {\n        return new Promise((resolve, reject) => {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            this.emit('onAutoLogout', 'Invalid access_token');\n            this.setSession(null);\n          }\n\n          throw err;\n        });\n      });\n    };\n\n    this.handleAuthentication = () => {\n      const access_token = this.getAccessToken();\n\n      if (!access_token) {\n        this.emit('onNoAccessToken');\n        return;\n      }\n\n      if (this.isAuthTokenValid(access_token)) {\n        this.setSession(access_token);\n        this.emit('onAutoLogin', true);\n      } else {\n        this.setSession(null);\n        this.emit('onAutoLogout', 'access_token expired');\n      }\n    };\n\n    this.createUser = data => {\n      return new Promise((resolve, reject) => {\n        axios.post(jwtServiceConfig.signUp, data).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n            this.emit('onLogin', response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    this.signInWithEmailAndPassword = (email, password) => {\n      return new Promise((resolve, reject) => {\n        axios.get(jwtServiceConfig.signIn, {\n          data: {\n            email,\n            password\n          }\n        }).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n            this.emit('onLogin', response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    this.signInWithToken = () => {\n      return new Promise((resolve, reject) => {\n        axios.get(jwtServiceConfig.accessToken, {\n          data: {\n            access_token: this.getAccessToken()\n          }\n        }).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            this.logout();\n            reject(new Error('Failed to login with token.'));\n          }\n        }).catch(error => {\n          this.logout();\n          reject(new Error('Failed to login with token.'));\n        });\n      });\n    };\n\n    this.updateUserData = user => {\n      return axios.post(jwtServiceConfig.updateUser, {\n        user\n      });\n    };\n\n    this.setSession = access_token => {\n      if (access_token) {\n        localStorage.setItem('jwt_access_token', access_token);\n        axios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n      } else {\n        localStorage.removeItem('jwt_access_token');\n        delete axios.defaults.headers.common.Authorization;\n      }\n    };\n\n    this.logout = () => {\n      this.setSession(null);\n      this.emit('onLogout', 'Logged out');\n    };\n\n    this.isAuthTokenValid = access_token => {\n      if (!access_token) {\n        return false;\n      }\n\n      const decoded = jwtDecode(access_token);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.getAccessToken = () => {\n      return window.localStorage.getItem('jwt_access_token');\n    };\n  }\n\n  init() {\n    this.setInterceptors();\n    this.handleAuthentication();\n  }\n\n}\n\nconst instance = new JwtService();\nexport default instance;","map":{"version":3,"names":["FuseUtils","axios","jwtDecode","jwtServiceConfig","JwtService","EventEmitter","setInterceptors","interceptors","response","use","err","Promise","resolve","reject","status","config","__isRetryRequest","emit","setSession","handleAuthentication","access_token","getAccessToken","isAuthTokenValid","createUser","data","post","signUp","then","user","error","signInWithEmailAndPassword","email","password","get","signIn","signInWithToken","accessToken","logout","Error","catch","updateUserData","updateUser","localStorage","setItem","defaults","headers","common","Authorization","removeItem","decoded","currentTime","Date","now","exp","console","warn","window","getItem","init","instance"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/ui/doctor-management-fe/src/app/auth/services/jwtService/jwtService.js"],"sourcesContent":["import FuseUtils from '@fuse/utils/FuseUtils';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport jwtServiceConfig from './jwtServiceConfig';\r\n\r\n/* eslint-disable camelcase */\r\n\r\nclass JwtService extends FuseUtils.EventEmitter {\r\n  init() {\r\n    this.setInterceptors();\r\n    this.handleAuthentication();\r\n  }\r\n\r\n  setInterceptors = () => {\r\n    axios.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (err) => {\r\n        return new Promise((resolve, reject) => {\r\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\r\n            // if you ever get an unauthorized response, logout the user\r\n            this.emit('onAutoLogout', 'Invalid access_token');\r\n            this.setSession(null);\r\n          }\r\n          throw err;\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleAuthentication = () => {\r\n    const access_token = this.getAccessToken();\r\n\r\n    if (!access_token) {\r\n      this.emit('onNoAccessToken');\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.isAuthTokenValid(access_token)) {\r\n      this.setSession(access_token);\r\n      this.emit('onAutoLogin', true);\r\n    } else {\r\n      this.setSession(null);\r\n      this.emit('onAutoLogout', 'access_token expired');\r\n    }\r\n  };\r\n\r\n  createUser = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post(jwtServiceConfig.signUp, data).then((response) => {\r\n        if (response.data.user) {\r\n          this.setSession(response.data.access_token);\r\n          resolve(response.data.user);\r\n          this.emit('onLogin', response.data.user);\r\n        } else {\r\n          reject(response.data.error);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  signInWithEmailAndPassword = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(jwtServiceConfig.signIn, {\r\n          data: {\r\n            email,\r\n            password,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.user) {\r\n            this.setSession(response.data.access_token);\r\n            resolve(response.data.user);\r\n            this.emit('onLogin', response.data.user);\r\n          } else {\r\n            reject(response.data.error);\r\n          }\r\n        });\r\n    });\r\n  };\r\n\r\n  signInWithToken = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(jwtServiceConfig.accessToken, {\r\n          data: {\r\n            access_token: this.getAccessToken(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.user) {\r\n            this.setSession(response.data.access_token);\r\n            resolve(response.data.user);\r\n          } else {\r\n            this.logout();\r\n            reject(new Error('Failed to login with token.'));\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.logout();\r\n          reject(new Error('Failed to login with token.'));\r\n        });\r\n    });\r\n  };\r\n\r\n  updateUserData = (user) => {\r\n    return axios.post(jwtServiceConfig.updateUser, {\r\n      user,\r\n    });\r\n  };\r\n\r\n  setSession = (access_token) => {\r\n    if (access_token) {\r\n      localStorage.setItem('jwt_access_token', access_token);\r\n      axios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\r\n    } else {\r\n      localStorage.removeItem('jwt_access_token');\r\n      delete axios.defaults.headers.common.Authorization;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    this.setSession(null);\r\n    this.emit('onLogout', 'Logged out');\r\n  };\r\n\r\n  isAuthTokenValid = (access_token) => {\r\n    if (!access_token) {\r\n      return false;\r\n    }\r\n    const decoded = jwtDecode(access_token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n      console.warn('access token expired');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  getAccessToken = () => {\r\n    return window.localStorage.getItem('jwt_access_token');\r\n  };\r\n}\r\n\r\nconst instance = new JwtService();\r\n\r\nexport default instance;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}