{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\lists\\\\CheckboxListSecondary.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckboxListSecondary() {\n  _s();\n\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: [0, 1, 2, 3].map(value => {\n      const labelId = `checkbox-list-secondary-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"end\",\n          onChange: handleToggle(value),\n          checked: checked.indexOf(value) !== -1,\n          inputProps: {\n            'aria-labelledby': labelId\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this),\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: `Avatar n°${value + 1}`,\n              src: `/material-ui-static/images/avatar/${value + 1}.jpg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `Line item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxListSecondary, \"/QTm1xQsB7RZxmL77nUYHlkFXa0=\");\n\n_c = CheckboxListSecondary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxListSecondary\");","map":{"version":3,"names":["React","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Checkbox","Avatar","CheckboxListSecondary","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","width","maxWidth","bgcolor","map","labelId"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/lists/CheckboxListSecondary.js"],"sourcesContent":["import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport default function CheckboxListSecondary() {\r\n  const [checked, setChecked] = React.useState([1]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List dense sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n      {[0, 1, 2, 3].map((value) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem\r\n            key={value}\r\n            secondaryAction={\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value)}\r\n                checked={checked.indexOf(value) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            }\r\n            disablePadding\r\n          >\r\n            <ListItemButton>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt={`Avatar n°${value + 1}`}\r\n                  src={`/material-ui-static/images/avatar/${value + 1}.jpg`}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,eAAe,SAASC,qBAAT,GAAiC;EAAA;;EAC9C,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACW,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B;;EAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM;IACpC,MAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;IACA,MAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;IAEA,IAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;MACvBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;IACD,CAFD,MAEO;MACLG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;IACD;;IAEDJ,UAAU,CAACM,UAAD,CAAV;EACD,CAXD;;EAaA,oBACE,QAAC,IAAD;IAAM,KAAK,MAAX;IAAY,EAAE,EAAE;MAAEG,KAAK,EAAE,MAAT;MAAiBC,QAAQ,EAAE,GAA3B;MAAgCC,OAAO,EAAE;IAAzC,CAAhB;IAAA,UACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaC,GAAb,CAAkBT,KAAD,IAAW;MAC3B,MAAMU,OAAO,GAAI,iCAAgCV,KAAM,EAAvD;MACA,oBACE,QAAC,QAAD;QAEE,eAAe,eACb,QAAC,QAAD;UACE,IAAI,EAAC,KADP;UAEE,QAAQ,EAAED,YAAY,CAACC,KAAD,CAFxB;UAGE,OAAO,EAAEJ,OAAO,CAACM,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAHvC;UAIE,UAAU,EAAE;YAAE,mBAAmBU;UAArB;QAJd;UAAA;UAAA;UAAA;QAAA,QAHJ;QAUE,cAAc,MAVhB;QAAA,uBAYE,QAAC,cAAD;UAAA,wBACE,QAAC,cAAD;YAAA,uBACE,QAAC,MAAD;cACE,GAAG,EAAG,YAAWV,KAAK,GAAG,CAAE,EAD7B;cAEE,GAAG,EAAG,qCAAoCA,KAAK,GAAG,CAAE;YAFtD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAOE,QAAC,YAAD;YAAc,EAAE,EAAEU,OAAlB;YAA2B,OAAO,EAAG,aAAYV,KAAK,GAAG,CAAE;UAA3D;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA;MAZF,GACOA,KADP;QAAA;QAAA;QAAA;MAAA,QADF;IAwBD,CA1BA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD;;GA/CuBL,qB;;KAAAA,qB"},"metadata":{},"sourceType":"module"}