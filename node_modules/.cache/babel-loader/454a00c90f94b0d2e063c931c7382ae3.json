{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport _ from '@lodash';\nimport { selectFaqCategories } from './faqCategoriesSlice';\nexport const getFaqs = createAsyncThunk('helpCenterApp/faqs/getFaqs', async () => {\n  const response = await axios.get('api/help-center/faqs');\n  const data = await response.data;\n  return data;\n});\nconst faqsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectFaqs,\n  selectById: selectFaqById\n} = faqsAdapter.getSelectors(state => state.helpCenterApp.faqs);\nconst faqsSlice = createSlice({\n  name: 'helpCenterApp/faqs',\n  initialState: faqsAdapter.getInitialState({}),\n  reducers: {},\n  extraReducers: {\n    [getFaqs.fulfilled]: faqsAdapter.setAll\n  }\n});\nexport const selectGroupedFaqs = createSelector([selectFaqs, selectFaqCategories], (faqs, categories) => {\n  return categories.map(category => ({ ...category,\n    faqs: _.filter(faqs, {\n      categoryId: category.id\n    })\n  }));\n});\nexport default faqsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSelector","createSlice","axios","_","selectFaqCategories","getFaqs","response","get","data","faqsAdapter","selectAll","selectFaqs","selectById","selectFaqById","getSelectors","state","helpCenterApp","faqs","faqsSlice","name","initialState","getInitialState","reducers","extraReducers","fulfilled","setAll","selectGroupedFaqs","categories","map","category","filter","categoryId","id","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/help-center/store/faqsSlice.js"],"sourcesContent":["import {\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSelector,\r\n  createSlice,\r\n} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport _ from '@lodash';\r\nimport { selectFaqCategories } from './faqCategoriesSlice';\r\n\r\nexport const getFaqs = createAsyncThunk('helpCenterApp/faqs/getFaqs', async () => {\r\n  const response = await axios.get('api/help-center/faqs');\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nconst faqsAdapter = createEntityAdapter({});\r\n\r\nexport const { selectAll: selectFaqs, selectById: selectFaqById } = faqsAdapter.getSelectors(\r\n  (state) => state.helpCenterApp.faqs\r\n);\r\n\r\nconst faqsSlice = createSlice({\r\n  name: 'helpCenterApp/faqs',\r\n  initialState: faqsAdapter.getInitialState({}),\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getFaqs.fulfilled]: faqsAdapter.setAll,\r\n  },\r\n});\r\n\r\nexport const selectGroupedFaqs = createSelector(\r\n  [selectFaqs, selectFaqCategories],\r\n  (faqs, categories) => {\r\n    return categories.map((category) => ({\r\n      ...category,\r\n      faqs: _.filter(faqs, { categoryId: category.id }),\r\n    }));\r\n  }\r\n);\r\n\r\nexport default faqsSlice.reducer;\r\n"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAEA,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,4BAAD,EAA+B,YAAY;EAChF,MAAMQ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,sBAAV,CAAvB;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALsC,CAAhC;AAOP,MAAMC,WAAW,GAAGV,mBAAmB,CAAC,EAAD,CAAvC;AAEA,OAAO,MAAM;EAAEW,SAAS,EAAEC,UAAb;EAAyBC,UAAU,EAAEC;AAArC,IAAuDJ,WAAW,CAACK,YAAZ,CACjEC,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,IADmC,CAA7D;AAIP,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,oBADsB;EAE5BC,YAAY,EAAEX,WAAW,CAACY,eAAZ,CAA4B,EAA5B,CAFc;EAG5BC,QAAQ,EAAE,EAHkB;EAI5BC,aAAa,EAAE;IACb,CAAClB,OAAO,CAACmB,SAAT,GAAqBf,WAAW,CAACgB;EADpB;AAJa,CAAD,CAA7B;AASA,OAAO,MAAMC,iBAAiB,GAAG1B,cAAc,CAC7C,CAACW,UAAD,EAAaP,mBAAb,CAD6C,EAE7C,CAACa,IAAD,EAAOU,UAAP,KAAsB;EACpB,OAAOA,UAAU,CAACC,GAAX,CAAgBC,QAAD,KAAe,EACnC,GAAGA,QADgC;IAEnCZ,IAAI,EAAEd,CAAC,CAAC2B,MAAF,CAASb,IAAT,EAAe;MAAEc,UAAU,EAAEF,QAAQ,CAACG;IAAvB,CAAf;EAF6B,CAAf,CAAf,CAAP;AAID,CAP4C,CAAxC;AAUP,eAAed,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}