{"ast":null,"code":"import { traverse, clearCache } from './traverse';\nimport { sampleArray, sampleBoolean, sampleNumber, sampleObject, sampleString } from './samplers/index';\nexport var _samplers = {};\nconst defaults = {\n  skipReadOnly: false,\n  maxSampleDepth: 15\n};\nexport function sample(schema, options, spec) {\n  let opts = Object.assign({}, defaults, options);\n  clearCache();\n  return traverse(schema, opts, spec).value;\n}\n;\nexport function _registerSampler(type, sampler) {\n  _samplers[type] = sampler;\n}\n;\nexport { inferType } from './infer';\n\n_registerSampler('array', sampleArray);\n\n_registerSampler('boolean', sampleBoolean);\n\n_registerSampler('integer', sampleNumber);\n\n_registerSampler('number', sampleNumber);\n\n_registerSampler('object', sampleObject);\n\n_registerSampler('string', sampleString);","map":{"version":3,"names":["traverse","clearCache","sampleArray","sampleBoolean","sampleNumber","sampleObject","sampleString","_samplers","defaults","skipReadOnly","maxSampleDepth","sample","schema","options","spec","opts","Object","assign","value","_registerSampler","type","sampler","inferType"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/openapi-sampler/src/openapi-sampler.js"],"sourcesContent":["import { traverse, clearCache } from './traverse';\nimport { sampleArray, sampleBoolean, sampleNumber, sampleObject, sampleString } from './samplers/index';\n\nexport var _samplers = {};\n\nconst defaults = {\n  skipReadOnly: false,\n  maxSampleDepth: 15,\n};\n\nexport function sample(schema, options, spec) {\n  let opts = Object.assign({}, defaults, options);\n  clearCache();\n  return traverse(schema, opts, spec).value;\n};\n\nexport function _registerSampler(type, sampler) {\n  _samplers[type] = sampler;\n};\n\nexport { inferType } from './infer';\n\n_registerSampler('array', sampleArray);\n_registerSampler('boolean', sampleBoolean);\n_registerSampler('integer', sampleNumber);\n_registerSampler('number', sampleNumber);\n_registerSampler('object', sampleObject);\n_registerSampler('string', sampleString);\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,YAArC;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,YAArC,EAAmDC,YAAnD,EAAiEC,YAAjE,QAAqF,kBAArF;AAEA,OAAO,IAAIC,SAAS,GAAG,EAAhB;AAEP,MAAMC,QAAQ,GAAG;EACfC,YAAY,EAAE,KADC;EAEfC,cAAc,EAAE;AAFD,CAAjB;AAKA,OAAO,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,IAAjC,EAAuC;EAC5C,IAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,QAAlB,EAA4BK,OAA5B,CAAX;EACAZ,UAAU;EACV,OAAOD,QAAQ,CAACY,MAAD,EAASG,IAAT,EAAeD,IAAf,CAAR,CAA6BI,KAApC;AACD;AAAA;AAED,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;EAC9Cd,SAAS,CAACa,IAAD,CAAT,GAAkBC,OAAlB;AACD;AAAA;AAED,SAASC,SAAT,QAA0B,SAA1B;;AAEAH,gBAAgB,CAAC,OAAD,EAAUjB,WAAV,CAAhB;;AACAiB,gBAAgB,CAAC,SAAD,EAAYhB,aAAZ,CAAhB;;AACAgB,gBAAgB,CAAC,SAAD,EAAYf,YAAZ,CAAhB;;AACAe,gBAAgB,CAAC,QAAD,EAAWf,YAAX,CAAhB;;AACAe,gBAAgB,CAAC,QAAD,EAAWd,YAAX,CAAhB;;AACAc,gBAAgB,CAAC,QAAD,EAAWb,YAAX,CAAhB"},"metadata":{},"sourceType":"module"}