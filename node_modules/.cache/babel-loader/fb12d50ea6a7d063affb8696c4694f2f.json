{"ast":null,"code":"import _defineProperty from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import _regeneratorRuntime from\"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createEntityAdapter,createSlice}from'@reduxjs/toolkit';import axios from'axios';import _ from'@lodash';import{removeList}from'./listsSlice';import{removeCard,updateCard}from'./cardSlice';import CardModel from'../model/CardModel';export var getCards=createAsyncThunk('scrumboardApp/cards/getCards',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(boardId){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/scrumboard/boards/\".concat(boardId,\"/cards\"));case 2:response=_context.sent;_context.next=5;return response.data;case 5:data=_context.sent;return _context.abrupt(\"return\",data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var newCard=createAsyncThunk('scrumboardApp/cards/newCard',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2,_ref3){var listId,newData,dispatch,getState,board,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:listId=_ref2.listId,newData=_ref2.newData;dispatch=_ref3.dispatch,getState=_ref3.getState;board=getState().scrumboardApp.board;_context2.next=5;return axios.post(\"/api/scrumboard/boards/\".concat(board.id,\"/lists/\").concat(listId,\"/cards\"),CardModel(newData));case 5:response=_context2.sent;_context2.next=8;return response.data;case 8:data=_context2.sent;return _context2.abrupt(\"return\",data);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref4.apply(this,arguments);};}());var cardsAdapter=createEntityAdapter({});var _cardsAdapter$getSele=cardsAdapter.getSelectors(function(state){return state.scrumboardApp.cards;}),selectCards=_cardsAdapter$getSele.selectAll,selectCardById=_cardsAdapter$getSele.selectById;export{selectCards,selectCardById};var cardsSlice=createSlice({name:'scrumboardApp/cards',initialState:cardsAdapter.getInitialState({}),reducers:{resetCards:function resetCards(state,action){}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getCards.fulfilled,cardsAdapter.setAll),_defineProperty(_extraReducers,removeList.fulfilled,function(state,action){var listId=action.payload;var _cardsAdapter$getSele2=cardsAdapter.getSelectors(),selectAll=_cardsAdapter$getSele2.selectAll;var cards=selectAll(state);var removedCardIds=_.map(_.filter(cards,{listId:listId}),'id');return cardsAdapter.removeMany(state,removedCardIds);}),_defineProperty(_extraReducers,newCard.fulfilled,cardsAdapter.addOne),_defineProperty(_extraReducers,updateCard.fulfilled,cardsAdapter.setOne),_defineProperty(_extraReducers,removeCard.fulfilled,cardsAdapter.removeOne),_extraReducers)});var resetCards=cardsSlice.actions.resetCards;export{resetCards};export default cardsSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}