{"ast":null,"code":"import _slicedToArray from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{useTheme}from'@mui/material/styles';function useThemeMediaQuery(themeCallbackFunc){var theme=useTheme();var query=themeCallbackFunc(theme).replace('@media ','');var _useState=useState(getMatches(query)),_useState2=_slicedToArray(_useState,2),matches=_useState2[0],setMatches=_useState2[1];function getMatches(q){return window.matchMedia(q).matches;}useEffect(function(){var mediaQuery=window.matchMedia(query);// Update the state with the current value\nsetMatches(getMatches(query));// Create an event listener\nvar handler=function handler(event){return setMatches(event.matches);};// Attach the event listener to know when the matches value changes\nmediaQuery.addEventListener('change',handler);// Remove the event listener on cleanup\nreturn function(){return mediaQuery.removeEventListener('change',handler);};},[query]// Empty array ensures effect is only run on mount and unmount\n);return matches;}export default useThemeMediaQuery;","map":null,"metadata":{},"sourceType":"module"}