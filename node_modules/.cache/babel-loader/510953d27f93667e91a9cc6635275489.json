{"ast":null,"code":"/* eslint import/no-extraneous-dependencies: off */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport history from '@history';\nimport _ from '@lodash';\nimport { setInitialSettings } from 'app/store/fuse/settingsSlice';\nimport { showMessage } from 'app/store/fuse/messageSlice';\nimport settingsConfig from 'app/configs/settingsConfig';\nimport jwtService from '../auth/services/jwtService';\nexport const setUser = createAsyncThunk('user/setUser', async (user, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n\n  /*\r\n    You can redirect the logged-in user to a specific route depending on his role\r\n    */\n  if (user.loginRedirectUrl) {\n    settingsConfig.loginRedirectUrl = user.loginRedirectUrl; // for example 'apps/academy'\n  }\n\n  return user;\n});\nexport const updateUserSettings = createAsyncThunk('user/updateSettings', async (settings, _ref2) => {\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  const {\n    user\n  } = getState();\n\n  const newUser = _.merge({}, user, {\n    data: {\n      settings\n    }\n  });\n\n  dispatch(updateUserData(newUser));\n  return newUser;\n});\nexport const updateUserShortcuts = createAsyncThunk('user/updateShortucts', async (shortcuts, _ref3) => {\n  let {\n    dispatch,\n    getState\n  } = _ref3;\n  const {\n    user\n  } = getState();\n  const newUser = { ...user,\n    data: { ...user.data,\n      shortcuts\n    }\n  };\n  dispatch(updateUserData(newUser));\n  return newUser;\n});\nexport const logoutUser = () => async (dispatch, getState) => {\n  const {\n    user\n  } = getState();\n\n  if (!user.role || user.role.length === 0) {\n    // is guest\n    return null;\n  }\n\n  history.push({\n    pathname: '/'\n  });\n  dispatch(setInitialSettings());\n  return dispatch(userLoggedOut());\n};\nexport const updateUserData = user => async (dispatch, getState) => {\n  if (!user.role || user.role.length === 0) {\n    // is guest\n    return;\n  }\n\n  jwtService.updateUserData(user).then(() => {\n    dispatch(showMessage({\n      message: 'User data saved with api'\n    }));\n  }).catch(error => {\n    dispatch(showMessage({\n      message: error.message\n    }));\n  });\n};\nconst initialState = {\n  role: [],\n  // guest\n  data: {\n    displayName: 'John Doe',\n    photoURL: 'assets/images/avatars/brian-hughes.jpg',\n    email: 'johndoe@withinpixels.com',\n    shortcuts: ['apps.calendar', 'apps.mailbox', 'apps.contacts', 'apps.tasks']\n  }\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    userLoggedOut: (state, action) => initialState\n  },\n  extraReducers: {\n    [updateUserSettings.fulfilled]: (state, action) => action.payload,\n    [updateUserShortcuts.fulfilled]: (state, action) => action.payload,\n    [setUser.fulfilled]: (state, action) => action.payload\n  }\n});\nexport const {\n  userLoggedOut\n} = userSlice.actions;\nexport const selectUser = _ref4 => {\n  let {\n    user\n  } = _ref4;\n  return user;\n};\nexport const selectUserShortcuts = _ref5 => {\n  let {\n    user\n  } = _ref5;\n  return user.data.shortcuts;\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","history","_","setInitialSettings","showMessage","settingsConfig","jwtService","setUser","user","dispatch","getState","loginRedirectUrl","updateUserSettings","settings","newUser","merge","data","updateUserData","updateUserShortcuts","shortcuts","logoutUser","role","length","push","pathname","userLoggedOut","then","message","catch","error","initialState","displayName","photoURL","email","userSlice","name","reducers","state","action","extraReducers","fulfilled","payload","actions","selectUser","selectUserShortcuts","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/store/userSlice.js"],"sourcesContent":["/* eslint import/no-extraneous-dependencies: off */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport history from '@history';\r\nimport _ from '@lodash';\r\nimport { setInitialSettings } from 'app/store/fuse/settingsSlice';\r\nimport { showMessage } from 'app/store/fuse/messageSlice';\r\nimport settingsConfig from 'app/configs/settingsConfig';\r\nimport jwtService from '../auth/services/jwtService';\r\n\r\nexport const setUser = createAsyncThunk('user/setUser', async (user, { dispatch, getState }) => {\r\n  /*\r\n    You can redirect the logged-in user to a specific route depending on his role\r\n    */\r\n  if (user.loginRedirectUrl) {\r\n    settingsConfig.loginRedirectUrl = user.loginRedirectUrl; // for example 'apps/academy'\r\n  }\r\n\r\n  return user;\r\n});\r\n\r\nexport const updateUserSettings = createAsyncThunk(\r\n  'user/updateSettings',\r\n  async (settings, { dispatch, getState }) => {\r\n    const { user } = getState();\r\n    const newUser = _.merge({}, user, { data: { settings } });\r\n\r\n    dispatch(updateUserData(newUser));\r\n\r\n    return newUser;\r\n  }\r\n);\r\n\r\nexport const updateUserShortcuts = createAsyncThunk(\r\n  'user/updateShortucts',\r\n  async (shortcuts, { dispatch, getState }) => {\r\n    const { user } = getState();\r\n    const newUser = {\r\n      ...user,\r\n      data: {\r\n        ...user.data,\r\n        shortcuts,\r\n      },\r\n    };\r\n\r\n    dispatch(updateUserData(newUser));\r\n\r\n    return newUser;\r\n  }\r\n);\r\n\r\nexport const logoutUser = () => async (dispatch, getState) => {\r\n  const { user } = getState();\r\n\r\n  if (!user.role || user.role.length === 0) {\r\n    // is guest\r\n    return null;\r\n  }\r\n\r\n  history.push({\r\n    pathname: '/',\r\n  });\r\n\r\n  dispatch(setInitialSettings());\r\n\r\n  return dispatch(userLoggedOut());\r\n};\r\n\r\nexport const updateUserData = (user) => async (dispatch, getState) => {\r\n  if (!user.role || user.role.length === 0) {\r\n    // is guest\r\n    return;\r\n  }\r\n\r\n  jwtService\r\n    .updateUserData(user)\r\n    .then(() => {\r\n      dispatch(showMessage({ message: 'User data saved with api' }));\r\n    })\r\n    .catch((error) => {\r\n      dispatch(showMessage({ message: error.message }));\r\n    });\r\n};\r\n\r\nconst initialState = {\r\n  role: [], // guest\r\n  data: {\r\n    displayName: 'John Doe',\r\n    photoURL: 'assets/images/avatars/brian-hughes.jpg',\r\n    email: 'johndoe@withinpixels.com',\r\n    shortcuts: ['apps.calendar', 'apps.mailbox', 'apps.contacts', 'apps.tasks'],\r\n  },\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    userLoggedOut: (state, action) => initialState,\r\n  },\r\n  extraReducers: {\r\n    [updateUserSettings.fulfilled]: (state, action) => action.payload,\r\n    [updateUserShortcuts.fulfilled]: (state, action) => action.payload,\r\n    [setUser.fulfilled]: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { userLoggedOut } = userSlice.actions;\r\n\r\nexport const selectUser = ({ user }) => user;\r\n\r\nexport const selectUserShortcuts = ({ user }) => user.data.shortcuts;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}