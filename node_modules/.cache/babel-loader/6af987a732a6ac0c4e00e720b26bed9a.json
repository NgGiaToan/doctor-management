{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\n\nvar core_1 = require(\"./core\");\n\nvar draft7_1 = require(\"./vocabularies/draft7\");\n\nvar discriminator_1 = require(\"./vocabularies/discriminator\");\n\nvar draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\n\nvar META_SUPPORT_DATA = [\"/properties\"];\nvar META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\n\nvar Ajv = /*#__PURE__*/function (_core_1$default) {\n  _inherits(Ajv, _core_1$default);\n\n  var _super = _createSuper(Ajv);\n\n  function Ajv() {\n    _classCallCheck(this, Ajv);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Ajv, [{\n    key: \"_addVocabularies\",\n    value: function _addVocabularies() {\n      var _this = this;\n\n      _get(_getPrototypeOf(Ajv.prototype), \"_addVocabularies\", this).call(this);\n\n      draft7_1.default.forEach(function (v) {\n        return _this.addVocabulary(v);\n      });\n      if (this.opts.discriminator) this.addKeyword(discriminator_1.default);\n    }\n  }, {\n    key: \"_addDefaultMetaSchema\",\n    value: function _addDefaultMetaSchema() {\n      _get(_getPrototypeOf(Ajv.prototype), \"_addDefaultMetaSchema\", this).call(this);\n\n      if (!this.opts.meta) return;\n      var metaSchema = this.opts.$data ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA) : draft7MetaSchema;\n      this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n      this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n  }, {\n    key: \"defaultMeta\",\n    value: function defaultMeta() {\n      return this.opts.defaultMeta = _get(_getPrototypeOf(Ajv.prototype), \"defaultMeta\", this).call(this) || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined);\n    }\n  }]);\n\n  return Ajv;\n}(core_1.default);\n\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Ajv;\n\nvar validate_1 = require(\"./compile/validate\");\n\nObject.defineProperty(exports, \"KeywordCxt\", {\n  enumerable: true,\n  get: function get() {\n    return validate_1.KeywordCxt;\n  }\n});\n\nvar codegen_1 = require(\"./compile/codegen\");\n\nObject.defineProperty(exports, \"_\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1._;\n  }\n});\nObject.defineProperty(exports, \"str\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.str;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.stringify;\n  }\n});\nObject.defineProperty(exports, \"nil\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.nil;\n  }\n});\nObject.defineProperty(exports, \"Name\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.Name;\n  }\n});\nObject.defineProperty(exports, \"CodeGen\", {\n  enumerable: true,\n  get: function get() {\n    return codegen_1.CodeGen;\n  }\n}); //# sourceMappingURL=ajv.js.map","map":null,"metadata":{},"sourceType":"script"}