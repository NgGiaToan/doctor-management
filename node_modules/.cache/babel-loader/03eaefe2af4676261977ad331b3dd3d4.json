{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\apps\\\\chat\\\\ContactAvatar.js\";\nimport { styled } from '@mui/material/styles';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport _ from '@lodash';\nimport Statuses from './Statuses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledBadge = styled(Badge)(_ref => {\n  let {\n    theme,\n    ...props\n  } = _ref;\n  return {\n    width: 40,\n    height: 40,\n    fontSize: 20,\n    '& .MuiAvatar-root': {\n      fontSize: 'inherit',\n      color: theme.palette.text.secondary,\n      fontWeight: 600\n    },\n    '& .MuiBadge-badge': {\n      backgroundColor: props.statuscolor,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        content: '\"\"'\n      }\n    }\n  };\n});\n_c = StyledBadge;\n\nfunction ContactAvatar(_ref2) {\n  let {\n    contact,\n    className\n  } = _ref2;\n\n  const status = _.find(Statuses, {\n    value: contact.status\n  });\n\n  return /*#__PURE__*/_jsxDEV(StyledBadge, {\n    className: className,\n    overlap: \"circular\",\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    variant: \"dot\",\n    statuscolor: status === null || status === void 0 ? void 0 : status.color,\n    children: /*#__PURE__*/_jsxDEV(Avatar, {\n      src: contact.avatar,\n      alt: contact.name,\n      className: \"w-full h-full\",\n      children: !contact.avatar || contact.avatar === '' ? contact.name[0] : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ContactAvatar;\nexport default ContactAvatar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledBadge\");\n$RefreshReg$(_c2, \"ContactAvatar\");","map":{"version":3,"names":["styled","Badge","Avatar","_","Statuses","StyledBadge","theme","props","width","height","fontSize","color","palette","text","secondary","fontWeight","backgroundColor","statuscolor","boxShadow","background","paper","position","top","left","borderRadius","content","ContactAvatar","contact","className","status","find","value","vertical","horizontal","avatar","name"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/chat/ContactAvatar.js"],"sourcesContent":["import { styled } from '@mui/material/styles';\r\nimport Badge from '@mui/material/Badge';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport _ from '@lodash';\r\nimport Statuses from './Statuses';\r\n\r\nconst StyledBadge = styled(Badge)(({ theme, ...props }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  fontSize: 20,\r\n  '& .MuiAvatar-root': {\r\n    fontSize: 'inherit',\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: 600,\r\n  },\r\n  '& .MuiBadge-badge': {\r\n    backgroundColor: props.statuscolor,\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContactAvatar({ contact, className }) {\r\n  const status = _.find(Statuses, { value: contact.status });\r\n\r\n  return (\r\n    <StyledBadge\r\n      className={className}\r\n      overlap=\"circular\"\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      variant=\"dot\"\r\n      statuscolor={status?.color}\r\n    >\r\n      <Avatar src={contact.avatar} alt={contact.name} className=\"w-full h-full\">\r\n        {!contact.avatar || contact.avatar === '' ? contact.name[0] : ''}\r\n      </Avatar>\r\n    </StyledBadge>\r\n  );\r\n}\r\n\r\nexport default ContactAvatar;\r\n"],"mappings":";AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACC,KAAD,CAAN,CAAc;EAAA,IAAC;IAAEK,KAAF;IAAS,GAAGC;EAAZ,CAAD;EAAA,OAA0B;IAC1DC,KAAK,EAAE,EADmD;IAE1DC,MAAM,EAAE,EAFkD;IAG1DC,QAAQ,EAAE,EAHgD;IAI1D,qBAAqB;MACnBA,QAAQ,EAAE,SADS;MAEnBC,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBC,SAFP;MAGnBC,UAAU,EAAE;IAHO,CAJqC;IAS1D,qBAAqB;MACnBC,eAAe,EAAET,KAAK,CAACU,WADJ;MAEnBC,SAAS,EAAG,aAAYZ,KAAK,CAACM,OAAN,CAAcO,UAAd,CAAyBC,KAAM,EAFpC;MAGnB,YAAY;QACVC,QAAQ,EAAE,UADA;QAEVC,GAAG,EAAE,CAFK;QAGVC,IAAI,EAAE,CAHI;QAIVf,KAAK,EAAE,MAJG;QAKVC,MAAM,EAAE,MALE;QAMVe,YAAY,EAAE,KANJ;QAOVC,OAAO,EAAE;MAPC;IAHO;EATqC,CAA1B;AAAA,CAAd,CAApB;KAAMpB,W;;AAwBN,SAASqB,aAAT,QAA+C;EAAA,IAAxB;IAAEC,OAAF;IAAWC;EAAX,CAAwB;;EAC7C,MAAMC,MAAM,GAAG1B,CAAC,CAAC2B,IAAF,CAAO1B,QAAP,EAAiB;IAAE2B,KAAK,EAAEJ,OAAO,CAACE;EAAjB,CAAjB,CAAf;;EAEA,oBACE,QAAC,WAAD;IACE,SAAS,EAAED,SADb;IAEE,OAAO,EAAC,UAFV;IAGE,YAAY,EAAE;MAAEI,QAAQ,EAAE,QAAZ;MAAsBC,UAAU,EAAE;IAAlC,CAHhB;IAIE,OAAO,EAAC,KAJV;IAKE,WAAW,EAAEJ,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAElB,KALvB;IAAA,uBAOE,QAAC,MAAD;MAAQ,GAAG,EAAEgB,OAAO,CAACO,MAArB;MAA6B,GAAG,EAAEP,OAAO,CAACQ,IAA1C;MAAgD,SAAS,EAAC,eAA1D;MAAA,UACG,CAACR,OAAO,CAACO,MAAT,IAAmBP,OAAO,CAACO,MAAR,KAAmB,EAAtC,GAA2CP,OAAO,CAACQ,IAAR,CAAa,CAAb,CAA3C,GAA6D;IADhE;MAAA;MAAA;MAAA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;MAhBQT,a;AAkBT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}