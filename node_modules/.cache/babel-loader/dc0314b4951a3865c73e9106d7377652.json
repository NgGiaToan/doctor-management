{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoveUnusedComponents = void 0;\n\nconst utils_1 = require(\"../../utils\");\n\nconst RemoveUnusedComponents = () => {\n  let components = new Map();\n\n  function registerComponent(location, componentType, name) {\n    var _a;\n\n    components.set(location.absolutePointer, {\n      used: ((_a = components.get(location.absolutePointer)) === null || _a === void 0 ? void 0 : _a.used) || false,\n      componentType,\n      name\n    });\n  }\n\n  return {\n    ref: {\n      leave(ref, _ref) {\n        let {\n          type,\n          resolve,\n          key\n        } = _ref;\n\n        if (['Schema', 'Header', 'Parameter', 'Response', 'Example', 'RequestBody'].includes(type.name)) {\n          const resolvedRef = resolve(ref);\n          if (!resolvedRef.location) return;\n          components.set(resolvedRef.location.absolutePointer, {\n            used: true,\n            name: key.toString()\n          });\n        }\n      }\n\n    },\n    DefinitionRoot: {\n      leave(root, ctx) {\n        const data = ctx.getVisitorData();\n        data.removedCount = 0;\n        components.forEach(usageInfo => {\n          const {\n            used,\n            componentType,\n            name\n          } = usageInfo;\n\n          if (!used && componentType) {\n            let componentChild = root.components[componentType];\n            delete componentChild[name];\n            data.removedCount++;\n\n            if (utils_1.isEmptyObject(componentChild)) {\n              delete root.components[componentType];\n            }\n          }\n        });\n\n        if (utils_1.isEmptyObject(root.components)) {\n          delete root.components;\n        }\n      }\n\n    },\n    NamedSchemas: {\n      Schema(schema, _ref2) {\n        let {\n          location,\n          key\n        } = _ref2;\n\n        if (!schema.allOf) {\n          registerComponent(location, 'schemas', key.toString());\n        }\n      }\n\n    },\n    NamedParameters: {\n      Parameter(_parameter, _ref3) {\n        let {\n          location,\n          key\n        } = _ref3;\n        registerComponent(location, 'parameters', key.toString());\n      }\n\n    },\n    NamedResponses: {\n      Response(_response, _ref4) {\n        let {\n          location,\n          key\n        } = _ref4;\n        registerComponent(location, 'responses', key.toString());\n      }\n\n    },\n    NamedExamples: {\n      Example(_example, _ref5) {\n        let {\n          location,\n          key\n        } = _ref5;\n        registerComponent(location, 'examples', key.toString());\n      }\n\n    },\n    NamedRequestBodies: {\n      RequestBody(_requestBody, _ref6) {\n        let {\n          location,\n          key\n        } = _ref6;\n        registerComponent(location, 'requestBodies', key.toString());\n      }\n\n    },\n    NamedHeaders: {\n      Header(_header, _ref7) {\n        let {\n          location,\n          key\n        } = _ref7;\n        registerComponent(location, 'headers', key.toString());\n      }\n\n    }\n  };\n};\n\nexports.RemoveUnusedComponents = RemoveUnusedComponents;","map":{"version":3,"names":["Object","defineProperty","exports","value","RemoveUnusedComponents","utils_1","require","components","Map","registerComponent","location","componentType","name","_a","set","absolutePointer","used","get","ref","leave","type","resolve","key","includes","resolvedRef","toString","DefinitionRoot","root","ctx","data","getVisitorData","removedCount","forEach","usageInfo","componentChild","isEmptyObject","NamedSchemas","Schema","schema","allOf","NamedParameters","Parameter","_parameter","NamedResponses","Response","_response","NamedExamples","Example","_example","NamedRequestBodies","RequestBody","_requestBody","NamedHeaders","Header","_header"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/oas3/remove-unused-components.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoveUnusedComponents = void 0;\nconst utils_1 = require(\"../../utils\");\nconst RemoveUnusedComponents = () => {\n    let components = new Map();\n    function registerComponent(location, componentType, name) {\n        var _a;\n        components.set(location.absolutePointer, {\n            used: ((_a = components.get(location.absolutePointer)) === null || _a === void 0 ? void 0 : _a.used) || false,\n            componentType,\n            name,\n        });\n    }\n    return {\n        ref: {\n            leave(ref, { type, resolve, key }) {\n                if (['Schema', 'Header', 'Parameter', 'Response', 'Example', 'RequestBody'].includes(type.name)) {\n                    const resolvedRef = resolve(ref);\n                    if (!resolvedRef.location)\n                        return;\n                    components.set(resolvedRef.location.absolutePointer, {\n                        used: true,\n                        name: key.toString(),\n                    });\n                }\n            }\n        },\n        DefinitionRoot: {\n            leave(root, ctx) {\n                const data = ctx.getVisitorData();\n                data.removedCount = 0;\n                components.forEach(usageInfo => {\n                    const { used, componentType, name } = usageInfo;\n                    if (!used && componentType) {\n                        let componentChild = root.components[componentType];\n                        delete componentChild[name];\n                        data.removedCount++;\n                        if (utils_1.isEmptyObject(componentChild)) {\n                            delete root.components[componentType];\n                        }\n                    }\n                });\n                if (utils_1.isEmptyObject(root.components)) {\n                    delete root.components;\n                }\n            },\n        },\n        NamedSchemas: {\n            Schema(schema, { location, key }) {\n                if (!schema.allOf) {\n                    registerComponent(location, 'schemas', key.toString());\n                }\n            },\n        },\n        NamedParameters: {\n            Parameter(_parameter, { location, key }) {\n                registerComponent(location, 'parameters', key.toString());\n            },\n        },\n        NamedResponses: {\n            Response(_response, { location, key }) {\n                registerComponent(location, 'responses', key.toString());\n            },\n        },\n        NamedExamples: {\n            Example(_example, { location, key }) {\n                registerComponent(location, 'examples', key.toString());\n            },\n        },\n        NamedRequestBodies: {\n            RequestBody(_requestBody, { location, key }) {\n                registerComponent(location, 'requestBodies', key.toString());\n            },\n        },\n        NamedHeaders: {\n            Header(_header, { location, key }) {\n                registerComponent(location, 'headers', key.toString());\n            },\n        },\n    };\n};\nexports.RemoveUnusedComponents = RemoveUnusedComponents;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}