{"ast":null,"code":"import _ from '@lodash';\nimport FuseUtils from '@fuse/utils';\nimport mockApi from '../mock-api.json';\nimport mock from '../mock';\nlet productsDB = mockApi.components.examples.ecommerce_products.value;\nlet ordersDB = mockApi.components.examples.ecommerce_orders.value;\nmock.onGet('/api/ecommerce/products').reply(config => {\n  return [200, productsDB];\n});\nmock.onPost('/api/ecommerce/products').reply(_ref => {\n  let {\n    data\n  } = _ref;\n  const newProduct = {\n    id: FuseUtils.generateGUID(),\n    ...JSON.parse(data)\n  };\n  productsDB.push(newProduct);\n  return [200, newProduct];\n});\nmock.onDelete('/api/ecommerce/products').reply(_ref2 => {\n  let {\n    data\n  } = _ref2;\n  const ids = JSON.parse(data);\n  productsDB = productsDB.filter(item => ids.includes(item.id));\n  return [200, productsDB];\n});\nmock.onGet(/\\/api\\/ecommerce\\/products\\/[^/]+/).reply(_ref3 => {\n  let {\n    url,\n    data\n  } = _ref3;\n  const {\n    id\n  } = url.match(/\\/api\\/ecommerce\\/products\\/(?<id>[^/]+)/).groups;\n  return [200, _.find(productsDB, {\n    id\n  })];\n});\nmock.onPut(/\\/api\\/ecommerce\\/products\\/[^/]+/).reply(_ref4 => {\n  let {\n    url,\n    data\n  } = _ref4;\n  const {\n    id\n  } = url.match(/\\/api\\/ecommerce\\/products\\/(?<id>[^/]+)/).groups;\n\n  _.assign(_.find(productsDB, {\n    id\n  }), JSON.parse(data));\n\n  return [200, _.find(productsDB, {\n    id\n  })];\n});\nmock.onDelete(/\\/api\\/ecommerce\\/products\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/ecommerce\\/products\\/(?<id>[^/]+)/).groups;\n\n  _.remove(productsDB, {\n    id\n  });\n\n  return [200, id];\n});\nmock.onGet('/api/ecommerce/orders').reply(config => {\n  return [200, ordersDB];\n});\nmock.onPost('/api/ecommerce/orders').reply(_ref5 => {\n  let {\n    data\n  } = _ref5;\n  const newOrder = {\n    id: FuseUtils.generateGUID(),\n    ...JSON.parse(data)\n  };\n  ordersDB.push(newOrder);\n  return [200, newOrder];\n});\nmock.onDelete('/api/ecommerce/orders').reply(_ref6 => {\n  let {\n    data\n  } = _ref6;\n  const ids = JSON.parse(data);\n  ordersDB = ordersDB.filter(item => ids.includes(item.id));\n  return [200, ordersDB];\n});\nmock.onGet(/\\/api\\/ecommerce\\/orders\\/[^/]+/).reply(_ref7 => {\n  let {\n    url,\n    data\n  } = _ref7;\n  const {\n    id\n  } = url.match(/\\/api\\/ecommerce\\/orders\\/(?<id>[^/]+)/).groups;\n  return [200, _.find(ordersDB, {\n    id\n  })];\n});\nmock.onPut(/\\/api\\/ecommerce\\/orders\\/[^/]+/).reply(_ref8 => {\n  let {\n    url,\n    data\n  } = _ref8;\n  const {\n    id\n  } = url.match(/\\/api\\/ecommerce\\/orders\\/(?<id>[^/]+)/).groups;\n\n  _.assign(_.find(ordersDB, {\n    id\n  }), JSON.parse(data));\n\n  return [200, _.find(ordersDB, {\n    id\n  })];\n});\nmock.onDelete(/\\/api\\/ecommerce\\/orders\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/ecommerce\\/orders\\/(?<id>[^/]+)/).groups;\n\n  _.remove(ordersDB, {\n    id\n  });\n\n  return [200, id];\n});","map":{"version":3,"names":["_","FuseUtils","mockApi","mock","productsDB","components","examples","ecommerce_products","value","ordersDB","ecommerce_orders","onGet","reply","config","onPost","data","newProduct","id","generateGUID","JSON","parse","push","onDelete","ids","filter","item","includes","url","match","groups","find","onPut","assign","remove","newOrder"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/ecommerce-api.js"],"sourcesContent":["import _ from '@lodash';\r\nimport FuseUtils from '@fuse/utils';\r\nimport mockApi from '../mock-api.json';\r\nimport mock from '../mock';\r\n\r\nlet productsDB = mockApi.components.examples.ecommerce_products.value;\r\nlet ordersDB = mockApi.components.examples.ecommerce_orders.value;\r\n\r\nmock.onGet('/api/ecommerce/products').reply((config) => {\r\n  return [200, productsDB];\r\n});\r\n\r\nmock.onPost('/api/ecommerce/products').reply(({ data }) => {\r\n  const newProduct = { id: FuseUtils.generateGUID(), ...JSON.parse(data) };\r\n\r\n  productsDB.push(newProduct);\r\n\r\n  return [200, newProduct];\r\n});\r\n\r\nmock.onDelete('/api/ecommerce/products').reply(({ data }) => {\r\n  const ids = JSON.parse(data);\r\n  productsDB = productsDB.filter((item) => ids.includes(item.id));\r\n\r\n  return [200, productsDB];\r\n});\r\n\r\nmock.onGet(/\\/api\\/ecommerce\\/products\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/ecommerce\\/products\\/(?<id>[^/]+)/).groups;\r\n\r\n  return [200, _.find(productsDB, { id })];\r\n});\r\n\r\nmock.onPut(/\\/api\\/ecommerce\\/products\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/ecommerce\\/products\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.assign(_.find(productsDB, { id }), JSON.parse(data));\r\n\r\n  return [200, _.find(productsDB, { id })];\r\n});\r\n\r\nmock.onDelete(/\\/api\\/ecommerce\\/products\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/ecommerce\\/products\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.remove(productsDB, { id });\r\n\r\n  return [200, id];\r\n});\r\n\r\nmock.onGet('/api/ecommerce/orders').reply((config) => {\r\n  return [200, ordersDB];\r\n});\r\n\r\nmock.onPost('/api/ecommerce/orders').reply(({ data }) => {\r\n  const newOrder = { id: FuseUtils.generateGUID(), ...JSON.parse(data) };\r\n\r\n  ordersDB.push(newOrder);\r\n\r\n  return [200, newOrder];\r\n});\r\n\r\nmock.onDelete('/api/ecommerce/orders').reply(({ data }) => {\r\n  const ids = JSON.parse(data);\r\n  ordersDB = ordersDB.filter((item) => ids.includes(item.id));\r\n\r\n  return [200, ordersDB];\r\n});\r\n\r\nmock.onGet(/\\/api\\/ecommerce\\/orders\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/ecommerce\\/orders\\/(?<id>[^/]+)/).groups;\r\n\r\n  return [200, _.find(ordersDB, { id })];\r\n});\r\n\r\nmock.onPut(/\\/api\\/ecommerce\\/orders\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/ecommerce\\/orders\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.assign(_.find(ordersDB, { id }), JSON.parse(data));\r\n\r\n  return [200, _.find(ordersDB, { id })];\r\n});\r\n\r\nmock.onDelete(/\\/api\\/ecommerce\\/orders\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/ecommerce\\/orders\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.remove(ordersDB, { id });\r\n\r\n  return [200, id];\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}