{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoAmbiguousPaths = void 0;\n\nconst NoAmbiguousPaths = () => {\n  return {\n    PathMap(pathMap, _ref) {\n      let {\n        report,\n        location\n      } = _ref;\n      const seenPaths = [];\n\n      for (const currentPath of Object.keys(pathMap)) {\n        const ambiguousPath = seenPaths.find(seenPath => arePathsAmbiguous(seenPath, currentPath));\n\n        if (ambiguousPath) {\n          report({\n            message: `Paths should resolve unambiguously. Found two ambiguous paths: \\`${ambiguousPath}\\` and \\`${currentPath}\\`.`,\n            location: location.child([currentPath]).key()\n          });\n        }\n\n        seenPaths.push(currentPath);\n      }\n    }\n\n  };\n};\n\nexports.NoAmbiguousPaths = NoAmbiguousPaths;\n\nfunction arePathsAmbiguous(a, b) {\n  const partsA = a.split('/');\n  const partsB = b.split('/');\n  if (partsA.length !== partsB.length) return false;\n  let aVars = 0;\n  let bVars = 0;\n  let ambiguous = true;\n\n  for (let i = 0; i < partsA.length; i++) {\n    const aIsVar = partsA[i].match(/^{.+?}$/);\n    const bIsVar = partsB[i].match(/^{.+?}$/);\n\n    if (aIsVar || bIsVar) {\n      if (aIsVar) aVars++;\n      if (bIsVar) bVars++;\n      continue;\n    } else if (partsA[i] !== partsB[i]) {\n      ambiguous = false;\n    }\n  }\n\n  return ambiguous && aVars === bVars;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","NoAmbiguousPaths","PathMap","pathMap","report","location","seenPaths","currentPath","keys","ambiguousPath","find","seenPath","arePathsAmbiguous","message","child","key","push","a","b","partsA","split","partsB","length","aVars","bVars","ambiguous","i","aIsVar","match","bIsVar"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/common/no-ambiguous-paths.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoAmbiguousPaths = void 0;\nconst NoAmbiguousPaths = () => {\n    return {\n        PathMap(pathMap, { report, location }) {\n            const seenPaths = [];\n            for (const currentPath of Object.keys(pathMap)) {\n                const ambiguousPath = seenPaths.find((seenPath) => arePathsAmbiguous(seenPath, currentPath));\n                if (ambiguousPath) {\n                    report({\n                        message: `Paths should resolve unambiguously. Found two ambiguous paths: \\`${ambiguousPath}\\` and \\`${currentPath}\\`.`,\n                        location: location.child([currentPath]).key(),\n                    });\n                }\n                seenPaths.push(currentPath);\n            }\n        },\n    };\n};\nexports.NoAmbiguousPaths = NoAmbiguousPaths;\nfunction arePathsAmbiguous(a, b) {\n    const partsA = a.split('/');\n    const partsB = b.split('/');\n    if (partsA.length !== partsB.length)\n        return false;\n    let aVars = 0;\n    let bVars = 0;\n    let ambiguous = true;\n    for (let i = 0; i < partsA.length; i++) {\n        const aIsVar = partsA[i].match(/^{.+?}$/);\n        const bIsVar = partsB[i].match(/^{.+?}$/);\n        if (aIsVar || bIsVar) {\n            if (aIsVar)\n                aVars++;\n            if (bIsVar)\n                bVars++;\n            continue;\n        }\n        else if (partsA[i] !== partsB[i]) {\n            ambiguous = false;\n        }\n    }\n    return ambiguous && aVars === bVars;\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMA,gBAAgB,GAAG,MAAM;EAC3B,OAAO;IACHC,OAAO,CAACC,OAAD,QAAgC;MAAA,IAAtB;QAAEC,MAAF;QAAUC;MAAV,CAAsB;MACnC,MAAMC,SAAS,GAAG,EAAlB;;MACA,KAAK,MAAMC,WAAX,IAA0BV,MAAM,CAACW,IAAP,CAAYL,OAAZ,CAA1B,EAAgD;QAC5C,MAAMM,aAAa,GAAGH,SAAS,CAACI,IAAV,CAAgBC,QAAD,IAAcC,iBAAiB,CAACD,QAAD,EAAWJ,WAAX,CAA9C,CAAtB;;QACA,IAAIE,aAAJ,EAAmB;UACfL,MAAM,CAAC;YACHS,OAAO,EAAG,oEAAmEJ,aAAc,YAAWF,WAAY,KAD/G;YAEHF,QAAQ,EAAEA,QAAQ,CAACS,KAAT,CAAe,CAACP,WAAD,CAAf,EAA8BQ,GAA9B;UAFP,CAAD,CAAN;QAIH;;QACDT,SAAS,CAACU,IAAV,CAAeT,WAAf;MACH;IACJ;;EAbE,CAAP;AAeH,CAhBD;;AAiBAR,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B;;AACA,SAASW,iBAAT,CAA2BK,CAA3B,EAA8BC,CAA9B,EAAiC;EAC7B,MAAMC,MAAM,GAAGF,CAAC,CAACG,KAAF,CAAQ,GAAR,CAAf;EACA,MAAMC,MAAM,GAAGH,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAf;EACA,IAAID,MAAM,CAACG,MAAP,KAAkBD,MAAM,CAACC,MAA7B,EACI,OAAO,KAAP;EACJ,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,SAAS,GAAG,IAAhB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACG,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;IACpC,MAAMC,MAAM,GAAGR,MAAM,CAACO,CAAD,CAAN,CAAUE,KAAV,CAAgB,SAAhB,CAAf;IACA,MAAMC,MAAM,GAAGR,MAAM,CAACK,CAAD,CAAN,CAAUE,KAAV,CAAgB,SAAhB,CAAf;;IACA,IAAID,MAAM,IAAIE,MAAd,EAAsB;MAClB,IAAIF,MAAJ,EACIJ,KAAK;MACT,IAAIM,MAAJ,EACIL,KAAK;MACT;IACH,CAND,MAOK,IAAIL,MAAM,CAACO,CAAD,CAAN,KAAcL,MAAM,CAACK,CAAD,CAAxB,EAA6B;MAC9BD,SAAS,GAAG,KAAZ;IACH;EACJ;;EACD,OAAOA,SAAS,IAAIF,KAAK,KAAKC,KAA9B;AACH"},"metadata":{},"sourceType":"script"}