{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getConfig = exports.findConfig = exports.CONFIG_FILE_NAMES = exports.loadConfig = void 0;\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst redocly_1 = require(\"../redocly\");\n\nconst utils_1 = require(\"../utils\");\n\nconst config_1 = require(\"./config\");\n\nconst utils_2 = require(\"./utils\");\n\nconst config_resolvers_1 = require(\"./config-resolvers\");\n\nfunction loadConfig() {\n  let configPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : findConfig();\n  let customExtends = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _a;\n\n  return __awaiter(this, void 0, void 0, function* () {\n    const rawConfig = yield getConfig(configPath);\n\n    if (customExtends !== undefined) {\n      rawConfig.lint = rawConfig.lint || {};\n      rawConfig.lint.extends = customExtends;\n    } else if (utils_1.isEmptyObject(rawConfig)) {// TODO: check if we can add recommended here. add message here?\n      // rawConfig.lint = { extends: ['recommended'], recommendedFallback: true };\n    }\n\n    const redoclyClient = new redocly_1.RedoclyClient();\n    const tokens = yield redoclyClient.getTokens();\n\n    if (tokens.length) {\n      if (!rawConfig.resolve) rawConfig.resolve = {};\n      if (!rawConfig.resolve.http) rawConfig.resolve.http = {};\n      rawConfig.resolve.http.headers = [...((_a = rawConfig.resolve.http.headers) !== null && _a !== void 0 ? _a : [])];\n\n      for (const item of tokens) {\n        const domain = config_1.DOMAINS[item.region];\n        rawConfig.resolve.http.headers.push({\n          matches: `https://api.${domain}/registry/**`,\n          name: 'Authorization',\n          envVariable: undefined,\n          value: item.token\n        }, //support redocly.com domain for future compatibility\n        ...(item.region === 'us' ? [{\n          matches: `https://api.redoc.ly/registry/**`,\n          name: 'Authorization',\n          envVariable: undefined,\n          value: item.token\n        }] : []));\n      }\n    }\n\n    return config_resolvers_1.resolveConfig(rawConfig, configPath);\n  });\n}\n\nexports.loadConfig = loadConfig;\nexports.CONFIG_FILE_NAMES = ['redocly.yaml', 'redocly.yml', '.redocly.yaml', '.redocly.yml'];\n\nfunction findConfig(dir) {\n  if (!fs.hasOwnProperty('existsSync')) return;\n  const existingConfigFiles = exports.CONFIG_FILE_NAMES.map(name => dir ? path.resolve(dir, name) : name).filter(fs.existsSync);\n\n  if (existingConfigFiles.length > 1) {\n    throw new Error(`\n      Multiple configuration files are not allowed. \n      Found the following files: ${existingConfigFiles.join(', ')}. \n      Please use 'redocly.yaml' instead.\n    `);\n  }\n\n  return existingConfigFiles[0];\n}\n\nexports.findConfig = findConfig;\n\nfunction getConfig() {\n  let configPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : findConfig();\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!configPath) return {};\n\n    try {\n      const rawConfig = (yield utils_1.loadYaml(configPath)) || {};\n      return utils_2.transformConfig(rawConfig);\n    } catch (e) {\n      throw new Error(`Error parsing config file at '${configPath}': ${e.message}`);\n    }\n  });\n}\n\nexports.getConfig = getConfig;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","getConfig","findConfig","CONFIG_FILE_NAMES","loadConfig","fs","require","path","redocly_1","utils_1","config_1","utils_2","config_resolvers_1","configPath","customExtends","_a","rawConfig","undefined","lint","extends","isEmptyObject","redoclyClient","RedoclyClient","tokens","getTokens","length","http","headers","item","domain","DOMAINS","region","push","matches","name","envVariable","token","resolveConfig","dir","hasOwnProperty","existingConfigFiles","map","filter","existsSync","Error","join","loadYaml","transformConfig","message"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/config/load.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getConfig = exports.findConfig = exports.CONFIG_FILE_NAMES = exports.loadConfig = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst redocly_1 = require(\"../redocly\");\nconst utils_1 = require(\"../utils\");\nconst config_1 = require(\"./config\");\nconst utils_2 = require(\"./utils\");\nconst config_resolvers_1 = require(\"./config-resolvers\");\nfunction loadConfig(configPath = findConfig(), customExtends) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const rawConfig = yield getConfig(configPath);\n        if (customExtends !== undefined) {\n            rawConfig.lint = rawConfig.lint || {};\n            rawConfig.lint.extends = customExtends;\n        }\n        else if (utils_1.isEmptyObject(rawConfig)) {\n            // TODO: check if we can add recommended here. add message here?\n            // rawConfig.lint = { extends: ['recommended'], recommendedFallback: true };\n        }\n        const redoclyClient = new redocly_1.RedoclyClient();\n        const tokens = yield redoclyClient.getTokens();\n        if (tokens.length) {\n            if (!rawConfig.resolve)\n                rawConfig.resolve = {};\n            if (!rawConfig.resolve.http)\n                rawConfig.resolve.http = {};\n            rawConfig.resolve.http.headers = [...((_a = rawConfig.resolve.http.headers) !== null && _a !== void 0 ? _a : [])];\n            for (const item of tokens) {\n                const domain = config_1.DOMAINS[item.region];\n                rawConfig.resolve.http.headers.push({\n                    matches: `https://api.${domain}/registry/**`,\n                    name: 'Authorization',\n                    envVariable: undefined,\n                    value: item.token,\n                }, \n                //support redocly.com domain for future compatibility\n                ...(item.region === 'us'\n                    ? [\n                        {\n                            matches: `https://api.redoc.ly/registry/**`,\n                            name: 'Authorization',\n                            envVariable: undefined,\n                            value: item.token,\n                        },\n                    ]\n                    : []));\n            }\n        }\n        return config_resolvers_1.resolveConfig(rawConfig, configPath);\n    });\n}\nexports.loadConfig = loadConfig;\nexports.CONFIG_FILE_NAMES = ['redocly.yaml', 'redocly.yml', '.redocly.yaml', '.redocly.yml'];\nfunction findConfig(dir) {\n    if (!fs.hasOwnProperty('existsSync'))\n        return;\n    const existingConfigFiles = exports.CONFIG_FILE_NAMES.map((name) => dir ? path.resolve(dir, name) : name).filter(fs.existsSync);\n    if (existingConfigFiles.length > 1) {\n        throw new Error(`\n      Multiple configuration files are not allowed. \n      Found the following files: ${existingConfigFiles.join(', ')}. \n      Please use 'redocly.yaml' instead.\n    `);\n    }\n    return existingConfigFiles[0];\n}\nexports.findConfig = findConfig;\nfunction getConfig(configPath = findConfig()) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!configPath)\n            return {};\n        try {\n            const rawConfig = ((yield utils_1.loadYaml(configPath)) || {});\n            return utils_2.transformConfig(rawConfig);\n        }\n        catch (e) {\n            throw new Error(`Error parsing config file at '${configPath}': ${e.message}`);\n        }\n    });\n}\nexports.getConfig = getConfig;\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IAAE,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAAEA,OAAO,CAACD,KAAD,CAAP;IAAiB,CAA5C,CAApC;EAAoF;;EAC5G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACvD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MAA8B,CAApC,CAAqC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC3F,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MAAkC,CAAxC,CAAyC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC9F,SAASF,IAAT,CAAcI,MAAd,EAAsB;MAAEA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IAAsF;;IAC9GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACH,CALM,CAAP;AAMH,CARD;;AASAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEf,KAAK,EAAE;AAAT,CAA7C;AACAe,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,iBAAR,GAA4BH,OAAO,CAACI,UAAR,GAAqB,KAAK,CAA/F;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMM,kBAAkB,GAAGN,OAAO,CAAC,oBAAD,CAAlC;;AACA,SAASF,UAAT,GAA8D;EAAA,IAA1CS,UAA0C,uEAA7BX,UAAU,EAAmB;EAAA,IAAfY,aAAe;;EAC1D,IAAIC,EAAJ;;EACA,OAAOpC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;IAChD,MAAMqC,SAAS,GAAG,MAAMf,SAAS,CAACY,UAAD,CAAjC;;IACA,IAAIC,aAAa,KAAKG,SAAtB,EAAiC;MAC7BD,SAAS,CAACE,IAAV,GAAiBF,SAAS,CAACE,IAAV,IAAkB,EAAnC;MACAF,SAAS,CAACE,IAAV,CAAeC,OAAf,GAAyBL,aAAzB;IACH,CAHD,MAIK,IAAIL,OAAO,CAACW,aAAR,CAAsBJ,SAAtB,CAAJ,EAAsC,CACvC;MACA;IACH;;IACD,MAAMK,aAAa,GAAG,IAAIb,SAAS,CAACc,aAAd,EAAtB;IACA,MAAMC,MAAM,GAAG,MAAMF,aAAa,CAACG,SAAd,EAArB;;IACA,IAAID,MAAM,CAACE,MAAX,EAAmB;MACf,IAAI,CAACT,SAAS,CAAC9B,OAAf,EACI8B,SAAS,CAAC9B,OAAV,GAAoB,EAApB;MACJ,IAAI,CAAC8B,SAAS,CAAC9B,OAAV,CAAkBwC,IAAvB,EACIV,SAAS,CAAC9B,OAAV,CAAkBwC,IAAlB,GAAyB,EAAzB;MACJV,SAAS,CAAC9B,OAAV,CAAkBwC,IAAlB,CAAuBC,OAAvB,GAAiC,CAAC,IAAI,CAACZ,EAAE,GAAGC,SAAS,CAAC9B,OAAV,CAAkBwC,IAAlB,CAAuBC,OAA7B,MAA0C,IAA1C,IAAkDZ,EAAE,KAAK,KAAK,CAA9D,GAAkEA,EAAlE,GAAuE,EAA3E,CAAD,CAAjC;;MACA,KAAK,MAAMa,IAAX,IAAmBL,MAAnB,EAA2B;QACvB,MAAMM,MAAM,GAAGnB,QAAQ,CAACoB,OAAT,CAAiBF,IAAI,CAACG,MAAtB,CAAf;QACAf,SAAS,CAAC9B,OAAV,CAAkBwC,IAAlB,CAAuBC,OAAvB,CAA+BK,IAA/B,CAAoC;UAChCC,OAAO,EAAG,eAAcJ,MAAO,cADC;UAEhCK,IAAI,EAAE,eAF0B;UAGhCC,WAAW,EAAElB,SAHmB;UAIhChC,KAAK,EAAE2C,IAAI,CAACQ;QAJoB,CAApC,EAMA;QACA,IAAIR,IAAI,CAACG,MAAL,KAAgB,IAAhB,GACE,CACE;UACIE,OAAO,EAAG,kCADd;UAEIC,IAAI,EAAE,eAFV;UAGIC,WAAW,EAAElB,SAHjB;UAIIhC,KAAK,EAAE2C,IAAI,CAACQ;QAJhB,CADF,CADF,GASE,EATN,CAPA;MAiBH;IACJ;;IACD,OAAOxB,kBAAkB,CAACyB,aAAnB,CAAiCrB,SAAjC,EAA4CH,UAA5C,CAAP;EACH,CAxCe,CAAhB;AAyCH;;AACDb,OAAO,CAACI,UAAR,GAAqBA,UAArB;AACAJ,OAAO,CAACG,iBAAR,GAA4B,CAAC,cAAD,EAAiB,aAAjB,EAAgC,eAAhC,EAAiD,cAAjD,CAA5B;;AACA,SAASD,UAAT,CAAoBoC,GAApB,EAAyB;EACrB,IAAI,CAACjC,EAAE,CAACkC,cAAH,CAAkB,YAAlB,CAAL,EACI;EACJ,MAAMC,mBAAmB,GAAGxC,OAAO,CAACG,iBAAR,CAA0BsC,GAA1B,CAA+BP,IAAD,IAAUI,GAAG,GAAG/B,IAAI,CAACrB,OAAL,CAAaoD,GAAb,EAAkBJ,IAAlB,CAAH,GAA6BA,IAAxE,EAA8EQ,MAA9E,CAAqFrC,EAAE,CAACsC,UAAxF,CAA5B;;EACA,IAAIH,mBAAmB,CAACf,MAApB,GAA6B,CAAjC,EAAoC;IAChC,MAAM,IAAImB,KAAJ,CAAW;AACzB;AACA,mCAAmCJ,mBAAmB,CAACK,IAApB,CAAyB,IAAzB,CAA+B;AAClE;AACA,KAJc,CAAN;EAKH;;EACD,OAAOL,mBAAmB,CAAC,CAAD,CAA1B;AACH;;AACDxC,OAAO,CAACE,UAAR,GAAqBA,UAArB;;AACA,SAASD,SAAT,GAA8C;EAAA,IAA3BY,UAA2B,uEAAdX,UAAU,EAAI;EAC1C,OAAOvB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;IAChD,IAAI,CAACkC,UAAL,EACI,OAAO,EAAP;;IACJ,IAAI;MACA,MAAMG,SAAS,GAAI,CAAC,MAAMP,OAAO,CAACqC,QAAR,CAAiBjC,UAAjB,CAAP,KAAwC,EAA3D;MACA,OAAOF,OAAO,CAACoC,eAAR,CAAwB/B,SAAxB,CAAP;IACH,CAHD,CAIA,OAAOxB,CAAP,EAAU;MACN,MAAM,IAAIoD,KAAJ,CAAW,iCAAgC/B,UAAW,MAAKrB,CAAC,CAACwD,OAAQ,EAArE,CAAN;IACH;EACJ,CAVe,CAAhB;AAWH;;AACDhD,OAAO,CAACC,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}