{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\snackbars\\\\IntegrationNotistack.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar('I love snacks.');\n  };\n\n  const handleClickVariant = variant => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a success message!', {\n      variant\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Show snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickVariant('success'),\n      children: \"Show success snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"EOBaWbrlhJsnjjf+SgNfGhR5FU4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = MyApp;\nexport default function IntegrationNotistack() {\n  return /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n    maxSnack: 3,\n    children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c2 = IntegrationNotistack;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"IntegrationNotistack\");","map":{"version":3,"names":["React","Button","SnackbarProvider","useSnackbar","MyApp","enqueueSnackbar","handleClick","handleClickVariant","variant","IntegrationNotistack"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/documentation/material-ui-components/components/snackbars/IntegrationNotistack.js"],"sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\nfunction MyApp() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClick = () => {\r\n    enqueueSnackbar('I love snacks.');\r\n  };\r\n\r\n  const handleClickVariant = (variant) => () => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar('This is a success message!', { variant });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClick}>Show snackbar</Button>\r\n      <Button onClick={handleClickVariant('success')}>Show success snackbar</Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <MyApp />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC;EAAF,IAAsBF,WAAW,EAAvC;;EAEA,MAAMG,WAAW,GAAG,MAAM;IACxBD,eAAe,CAAC,gBAAD,CAAf;EACD,CAFD;;EAIA,MAAME,kBAAkB,GAAIC,OAAD,IAAa,MAAM;IAC5C;IACAH,eAAe,CAAC,4BAAD,EAA+B;MAAEG;IAAF,CAA/B,CAAf;EACD,CAHD;;EAKA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,MAAD;MAAQ,OAAO,EAAEF,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,OAAO,EAAEC,kBAAkB,CAAC,SAAD,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAlBQH,K;UACqBD,W;;;KADrBC,K;AAoBT,eAAe,SAASK,oBAAT,GAAgC;EAC7C,oBACE,QAAC,gBAAD;IAAkB,QAAQ,EAAE,CAA5B;IAAA,uBACE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;MANuBA,oB"},"metadata":{},"sourceType":"module"}