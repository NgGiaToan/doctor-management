{"ast":null,"code":"import __ from 'lodash';\n/**\r\n * You can extend Lodash with mixins\r\n * And use it as below\r\n * import _ from '@lodash'\r\n */\n\nconst _ = __.runInContext();\n\n_.mixin({\n  // Immutable Set for setting state\n  setIn: (state, name, value) => {\n    return _.setWith(_.clone(state), name, value, _.clone);\n  }\n});\n\nexport default _;","map":{"version":3,"names":["__","_","runInContext","mixin","setIn","state","name","value","setWith","clone"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@lodash/@lodash.js"],"sourcesContent":["import __ from 'lodash';\r\n\r\n/**\r\n * You can extend Lodash with mixins\r\n * And use it as below\r\n * import _ from '@lodash'\r\n */\r\nconst _ = __.runInContext();\r\n\r\n_.mixin({\r\n  // Immutable Set for setting state\r\n  setIn: (state, name, value) => {\r\n    return _.setWith(_.clone(state), name, value, _.clone);\r\n  },\r\n});\r\n\r\nexport default _;\r\n"],"mappings":"AAAA,OAAOA,EAAP,MAAe,QAAf;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,CAAC,GAAGD,EAAE,CAACE,YAAH,EAAV;;AAEAD,CAAC,CAACE,KAAF,CAAQ;EACN;EACAC,KAAK,EAAE,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,KAAwB;IAC7B,OAAON,CAAC,CAACO,OAAF,CAAUP,CAAC,CAACQ,KAAF,CAAQJ,KAAR,CAAV,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCN,CAAC,CAACQ,KAAzC,CAAP;EACD;AAJK,CAAR;;AAOA,eAAeR,CAAf"},"metadata":{},"sourceType":"module"}