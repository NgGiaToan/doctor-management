{"ast":null,"code":"import mockApi from '../../mock-api.json';\nimport mock from '../../mock';\nconst widgets = mockApi.components.examples.project_dashboard_widgets.value;\nconst projects = mockApi.components.examples.project_dashboard_projects.value;\nmock.onGet('/api/dashboards/project/widgets').reply(config => {\n  return [200, widgets];\n});\nmock.onGet('/api/dashboards/project/projects').reply(config => {\n  return [200, projects];\n});","map":{"version":3,"names":["mockApi","mock","widgets","components","examples","project_dashboard_widgets","value","projects","project_dashboard_projects","onGet","reply","config"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/dashboards/project-api.js"],"sourcesContent":["import mockApi from '../../mock-api.json';\r\nimport mock from '../../mock';\r\n\r\nconst widgets = mockApi.components.examples.project_dashboard_widgets.value;\r\nconst projects = mockApi.components.examples.project_dashboard_projects.value;\r\n\r\nmock.onGet('/api/dashboards/project/widgets').reply((config) => {\r\n  return [200, widgets];\r\n});\r\n\r\nmock.onGet('/api/dashboards/project/projects').reply((config) => {\r\n  return [200, projects];\r\n});\r\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,MAAMC,OAAO,GAAGF,OAAO,CAACG,UAAR,CAAmBC,QAAnB,CAA4BC,yBAA5B,CAAsDC,KAAtE;AACA,MAAMC,QAAQ,GAAGP,OAAO,CAACG,UAAR,CAAmBC,QAAnB,CAA4BI,0BAA5B,CAAuDF,KAAxE;AAEAL,IAAI,CAACQ,KAAL,CAAW,iCAAX,EAA8CC,KAA9C,CAAqDC,MAAD,IAAY;EAC9D,OAAO,CAAC,GAAD,EAAMT,OAAN,CAAP;AACD,CAFD;AAIAD,IAAI,CAACQ,KAAL,CAAW,kCAAX,EAA+CC,KAA/C,CAAsDC,MAAD,IAAY;EAC/D,OAAO,CAAC,GAAD,EAAMJ,QAAN,CAAP;AACD,CAFD"},"metadata":{},"sourceType":"module"}