{"ast":null,"code":"import _ from '@lodash';\nimport FuseUtils from '@fuse/utils';\nimport mockApi from '../mock-api.json';\nimport mock from '../mock';\nlet tasksDB = mockApi.components.examples.tasks.value;\nconst tagsDB = mockApi.components.examples.tasks_tags.value;\nmock.onGet('/api/tasks').reply(config => {\n  return [200, tasksDB];\n});\nmock.onPost('/api/tasks').reply(_ref => {\n  let {\n    data\n  } = _ref;\n  const newtask = {\n    id: FuseUtils.generateGUID(),\n    ...JSON.parse(data)\n  };\n  tasksDB.push(newtask);\n  return [200, newtask];\n});\nmock.onPost('/api/tasks/reorder').reply(_ref2 => {\n  let {\n    data\n  } = _ref2;\n  const {\n    startIndex,\n    endIndex\n  } = JSON.parse(data);\n\n  const ordered = _.merge([], tasksDB);\n\n  const [removed] = ordered.splice(startIndex, 1);\n  ordered.splice(endIndex, 0, removed);\n  tasksDB = ordered;\n  return [200, tasksDB];\n});\nmock.onGet(/\\/api\\/tasks\\/(?!tags)[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/tasks\\/(?<id>[^/]+)/).groups;\n\n  const task = _.find(tasksDB, {\n    id\n  });\n\n  if (task) {\n    return [200, task];\n  }\n\n  return [404, 'Requested task do not exist.'];\n});\nmock.onPut(/\\/api\\/tasks\\/[^/]+/).reply(_ref3 => {\n  let {\n    url,\n    data\n  } = _ref3;\n  const {\n    id\n  } = url.match(/\\/api\\/tasks\\/(?<id>[^/]+)/).groups;\n\n  _.assign(_.find(tasksDB, {\n    id\n  }), JSON.parse(data));\n\n  return [200, _.find(tasksDB, {\n    id\n  })];\n});\nmock.onDelete(/\\/api\\/tasks\\/[^/]+/).reply(config => {\n  const {\n    id\n  } = config.url.match(/\\/api\\/tasks\\/(?<id>[^/]+)/).groups;\n\n  _.remove(tasksDB, {\n    id\n  });\n\n  return [200, id];\n});\nmock.onGet('/api/tasks/tags').reply(config => {\n  return [200, tagsDB];\n});","map":{"version":3,"names":["_","FuseUtils","mockApi","mock","tasksDB","components","examples","tasks","value","tagsDB","tasks_tags","onGet","reply","config","onPost","data","newtask","id","generateGUID","JSON","parse","push","startIndex","endIndex","ordered","merge","removed","splice","url","match","groups","task","find","onPut","assign","onDelete","remove"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/@mock-api/api/tasks-api.js"],"sourcesContent":["import _ from '@lodash';\r\nimport FuseUtils from '@fuse/utils';\r\nimport mockApi from '../mock-api.json';\r\nimport mock from '../mock';\r\n\r\nlet tasksDB = mockApi.components.examples.tasks.value;\r\nconst tagsDB = mockApi.components.examples.tasks_tags.value;\r\n\r\nmock.onGet('/api/tasks').reply((config) => {\r\n  return [200, tasksDB];\r\n});\r\n\r\nmock.onPost('/api/tasks').reply(({ data }) => {\r\n  const newtask = { id: FuseUtils.generateGUID(), ...JSON.parse(data) };\r\n\r\n  tasksDB.push(newtask);\r\n\r\n  return [200, newtask];\r\n});\r\n\r\nmock.onPost('/api/tasks/reorder').reply(({ data }) => {\r\n  const { startIndex, endIndex } = JSON.parse(data);\r\n  const ordered = _.merge([], tasksDB);\r\n\r\n  const [removed] = ordered.splice(startIndex, 1);\r\n\r\n  ordered.splice(endIndex, 0, removed);\r\n\r\n  tasksDB = ordered;\r\n\r\n  return [200, tasksDB];\r\n});\r\n\r\nmock.onGet(/\\/api\\/tasks\\/(?!tags)[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/tasks\\/(?<id>[^/]+)/).groups;\r\n  const task = _.find(tasksDB, { id });\r\n\r\n  if (task) {\r\n    return [200, task];\r\n  }\r\n\r\n  return [404, 'Requested task do not exist.'];\r\n});\r\n\r\nmock.onPut(/\\/api\\/tasks\\/[^/]+/).reply(({ url, data }) => {\r\n  const { id } = url.match(/\\/api\\/tasks\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.assign(_.find(tasksDB, { id }), JSON.parse(data));\r\n\r\n  return [200, _.find(tasksDB, { id })];\r\n});\r\n\r\nmock.onDelete(/\\/api\\/tasks\\/[^/]+/).reply((config) => {\r\n  const { id } = config.url.match(/\\/api\\/tasks\\/(?<id>[^/]+)/).groups;\r\n\r\n  _.remove(tasksDB, { id });\r\n\r\n  return [200, id];\r\n});\r\n\r\nmock.onGet('/api/tasks/tags').reply((config) => {\r\n  return [200, tagsDB];\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}