{"ast":null,"code":"'use strict';\n\nimport { ensureMinLength, toRFCDateTime, uuid } from '../utils';\nconst passwordSymbols = 'qwerty!@#$%^123456';\n\nfunction emailSample() {\n  return 'user@example.com';\n}\n\nfunction idnEmailSample() {\n  return 'пошта@укр.нет';\n}\n\nfunction passwordSample(min, max) {\n  let res = 'pa$$word';\n\n  if (min > res.length) {\n    res += '_';\n    res += ensureMinLength(passwordSymbols, min - res.length).substring(0, min - res.length);\n  }\n\n  return res;\n}\n\nfunction commonDateTimeSample(_ref) {\n  let {\n    min,\n    max,\n    omitTime,\n    omitDate\n  } = _ref;\n  let res = toRFCDateTime(new Date('2019-08-24T14:15:22.123Z'), omitTime, omitDate, false);\n\n  if (res.length < min) {\n    console.warn(`Using minLength = ${min} is incorrect with format \"date-time\"`);\n  }\n\n  if (max && res.length > max) {\n    console.warn(`Using maxLength = ${max} is incorrect with format \"date-time\"`);\n  }\n\n  return res;\n}\n\nfunction dateTimeSample(min, max) {\n  return commonDateTimeSample({\n    min,\n    max,\n    omitTime: false,\n    omitDate: false\n  });\n}\n\nfunction dateSample(min, max) {\n  return commonDateTimeSample({\n    min,\n    max,\n    omitTime: true,\n    omitDate: false\n  });\n}\n\nfunction timeSample(min, max) {\n  return commonDateTimeSample({\n    min,\n    max,\n    omitTime: false,\n    omitDate: true\n  }).slice(1);\n}\n\nfunction defaultSample(min, max) {\n  let res = ensureMinLength('string', min);\n\n  if (max && res.length > max) {\n    res = res.substring(0, max);\n  }\n\n  return res;\n}\n\nfunction ipv4Sample() {\n  return '192.168.0.1';\n}\n\nfunction ipv6Sample() {\n  return '2001:0db8:85a3:0000:0000:8a2e:0370:7334';\n}\n\nfunction hostnameSample() {\n  return 'example.com';\n}\n\nfunction idnHostnameSample() {\n  return 'приклад.укр';\n}\n\nfunction uriSample() {\n  return 'http://example.com';\n}\n\nfunction uriReferenceSample() {\n  return '../dictionary';\n}\n\nfunction uriTemplateSample() {\n  return 'http://example.com/{endpoint}';\n}\n\nfunction iriSample() {\n  return 'http://example.com';\n}\n\nfunction iriReferenceSample() {\n  return '../словник';\n}\n\nfunction uuidSample(_min, _max, propertyName) {\n  return uuid(propertyName || 'id');\n}\n\nfunction jsonPointerSample() {\n  return '/json/pointer';\n}\n\nfunction relativeJsonPointerSample() {\n  return '1/relative/json/pointer';\n}\n\nfunction regexSample() {\n  return '/regex/';\n}\n\nconst stringFormats = {\n  'email': emailSample,\n  'idn-email': idnEmailSample,\n  // https://tools.ietf.org/html/rfc6531#section-3.3\n  'password': passwordSample,\n  'date-time': dateTimeSample,\n  'date': dateSample,\n  'time': timeSample,\n  // full-time in https://tools.ietf.org/html/rfc3339#section-5.6\n  'ipv4': ipv4Sample,\n  'ipv6': ipv6Sample,\n  'hostname': hostnameSample,\n  'idn-hostname': idnHostnameSample,\n  // https://tools.ietf.org/html/rfc5890#section-2.3.2.3\n  'iri': iriSample,\n  // https://tools.ietf.org/html/rfc3987\n  'iri-reference': iriReferenceSample,\n  'uri': uriSample,\n  'uri-reference': uriReferenceSample,\n  // either a URI or relative-reference https://tools.ietf.org/html/rfc3986#section-4.1\n  'uri-template': uriTemplateSample,\n  'uuid': uuidSample,\n  'default': defaultSample,\n  'json-pointer': jsonPointerSample,\n  'relative-json-pointer': relativeJsonPointerSample,\n  // https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n  'regex': regexSample\n};\nexport function sampleString(schema, options, spec, context) {\n  let format = schema.format || 'default';\n  let sampler = stringFormats[format] || defaultSample;\n  let propertyName = context && context.propertyName;\n  return sampler(schema.minLength | 0, schema.maxLength, propertyName);\n}","map":{"version":3,"names":["ensureMinLength","toRFCDateTime","uuid","passwordSymbols","emailSample","idnEmailSample","passwordSample","min","max","res","length","substring","commonDateTimeSample","omitTime","omitDate","Date","console","warn","dateTimeSample","dateSample","timeSample","slice","defaultSample","ipv4Sample","ipv6Sample","hostnameSample","idnHostnameSample","uriSample","uriReferenceSample","uriTemplateSample","iriSample","iriReferenceSample","uuidSample","_min","_max","propertyName","jsonPointerSample","relativeJsonPointerSample","regexSample","stringFormats","sampleString","schema","options","spec","context","format","sampler","minLength","maxLength"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/openapi-sampler/src/samplers/string.js"],"sourcesContent":["'use strict';\n\nimport { ensureMinLength, toRFCDateTime, uuid } from '../utils';\n\nconst passwordSymbols = 'qwerty!@#$%^123456';\n\nfunction emailSample() {\n  return 'user@example.com';\n}\nfunction idnEmailSample() {\n  return 'пошта@укр.нет';\n}\nfunction passwordSample(min, max) {\n  let res = 'pa$$word';\n  if (min > res.length) {\n    res += '_';\n    res += ensureMinLength(passwordSymbols, min - res.length).substring(0, min - res.length);\n  }\n  return res;\n}\n\nfunction commonDateTimeSample({ min, max, omitTime, omitDate }) {\n  let res = toRFCDateTime(new Date('2019-08-24T14:15:22.123Z'), omitTime, omitDate, false);\n  if (res.length < min) {\n    console.warn(`Using minLength = ${min} is incorrect with format \"date-time\"`);\n  }\n  if (max && res.length > max) {\n    console.warn(`Using maxLength = ${max} is incorrect with format \"date-time\"`);\n  }\n  return res;\n}\n\nfunction dateTimeSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: false, omitDate: false });\n}\n\nfunction dateSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: true, omitDate: false });\n}\n\nfunction timeSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: false, omitDate: true }).slice(1);\n}\n\nfunction defaultSample(min, max) {\n  let res = ensureMinLength('string', min);\n  if (max && res.length > max) {\n    res = res.substring(0, max);\n  }\n  return res;\n}\n\nfunction ipv4Sample() {\n  return '192.168.0.1';\n}\n\nfunction ipv6Sample() {\n  return '2001:0db8:85a3:0000:0000:8a2e:0370:7334';\n}\n\nfunction hostnameSample() {\n  return 'example.com';\n}\nfunction idnHostnameSample() {\n  return 'приклад.укр';\n}\nfunction uriSample() {\n  return 'http://example.com';\n}\n\nfunction uriReferenceSample() {\n  return '../dictionary';\n}\n\nfunction uriTemplateSample() {\n  return 'http://example.com/{endpoint}';\n}\n\nfunction iriSample() {\n  return 'http://example.com';\n}\n\nfunction iriReferenceSample() {\n  return '../словник';\n}\n\nfunction uuidSample(_min, _max, propertyName) {\n  return uuid(propertyName || 'id');\n}\n\nfunction jsonPointerSample() {\n  return '/json/pointer';\n}\n\nfunction relativeJsonPointerSample() {\n  return '1/relative/json/pointer';\n}\n\nfunction regexSample() {\n  return '/regex/';\n}\n\nconst stringFormats = {\n  'email': emailSample,\n  'idn-email': idnEmailSample, // https://tools.ietf.org/html/rfc6531#section-3.3\n  'password': passwordSample,\n  'date-time': dateTimeSample,\n  'date': dateSample,\n  'time': timeSample, // full-time in https://tools.ietf.org/html/rfc3339#section-5.6\n  'ipv4': ipv4Sample,\n  'ipv6': ipv6Sample,\n  'hostname': hostnameSample,\n  'idn-hostname': idnHostnameSample, // https://tools.ietf.org/html/rfc5890#section-2.3.2.3\n  'iri': iriSample, // https://tools.ietf.org/html/rfc3987\n  'iri-reference': iriReferenceSample,\n  'uri': uriSample,\n  'uri-reference': uriReferenceSample, // either a URI or relative-reference https://tools.ietf.org/html/rfc3986#section-4.1\n  'uri-template': uriTemplateSample,\n  'uuid': uuidSample,\n  'default': defaultSample,\n  'json-pointer': jsonPointerSample,\n  'relative-json-pointer': relativeJsonPointerSample, // https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n  'regex': regexSample,\n};\n\nexport function sampleString(schema, options, spec, context) {\n  let format = schema.format || 'default';\n  let sampler = stringFormats[format] || defaultSample;\n  let propertyName = context && context.propertyName;\n  return sampler(schema.minLength | 0, schema.maxLength, propertyName);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}