{"ast":null,"code":"import _defineProperty from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import _regeneratorRuntime from\"C:\\\\Users\\\\giato\\\\Downloads\\\\Workspace\\\\.Net\\\\api\\\\doctor-management-fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createEntityAdapter,createSlice}from'@reduxjs/toolkit';import axios from'axios';import ListModel from'../model/ListModel';/**\r\n * Get Board Lists\r\n */export var getLists=createAsyncThunk('scrumboardApp/lists/get',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(boardId){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/scrumboard/boards/\".concat(boardId,\"/lists\"));case 2:response=_context.sent;_context.next=5;return response.data;case 5:data=_context.sent;return _context.abrupt(\"return\",data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());/**\r\n * Create List\r\n */export var newList=createAsyncThunk('scrumboardApp/lists/new',/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(list,_ref2){var dispatch,getState,board,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref2.dispatch,getState=_ref2.getState;board=getState().scrumboardApp.board;_context2.next=4;return axios.post(\"/api/scrumboard/boards/\".concat(board.id,\"/lists\"),ListModel(list));case 4:response=_context2.sent;_context2.next=7;return response.data;case 7:data=_context2.sent;return _context2.abrupt(\"return\",data);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref3.apply(this,arguments);};}());/**\r\n * Update list\r\n */export var updateList=createAsyncThunk('scrumboardApp/lists/update',/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4,_ref5){var id,newData,dispatch,getState,board,response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:id=_ref4.id,newData=_ref4.newData;dispatch=_ref5.dispatch,getState=_ref5.getState;board=getState().scrumboardApp.board;_context3.next=5;return axios.put(\"/api/scrumboard/boards/\".concat(board.id,\"/lists/\").concat(id),newData);case 5:response=_context3.sent;_context3.next=8;return response.data;case 8:data=_context3.sent;return _context3.abrupt(\"return\",data);case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x4,_x5){return _ref6.apply(this,arguments);};}());/**\r\n * Remove list\r\n */export var removeList=createAsyncThunk('scrumboardApp/lists/remove',/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id,_ref7){var dispatch,getState,board,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch=_ref7.dispatch,getState=_ref7.getState;board=getState().scrumboardApp.board;_context4.next=4;return axios.delete(\"/api/scrumboard/boards/\".concat(board.id,\"/lists/\").concat(id));case 4:response=_context4.sent;_context4.next=7;return response.data;case 7:return _context4.abrupt(\"return\",id);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x6,_x7){return _ref8.apply(this,arguments);};}());var listsAdapter=createEntityAdapter({});var _listsAdapter$getSele=listsAdapter.getSelectors(function(state){return state.scrumboardApp.lists;}),selectLists=_listsAdapter$getSele.selectAll,selectListById=_listsAdapter$getSele.selectById;export{selectLists,selectListById};var listsSlice=createSlice({name:'scrumboardApp/lists',initialState:listsAdapter.getInitialState({}),reducers:{resetLists:function resetLists(state,action){}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getLists.fulfilled,listsAdapter.setAll),_defineProperty(_extraReducers,updateList.fulfilled,listsAdapter.setOne),_defineProperty(_extraReducers,removeList.fulfilled,listsAdapter.removeOne),_defineProperty(_extraReducers,newList.fulfilled,listsAdapter.addOne),_extraReducers)});var resetLists=listsSlice.actions.resetLists;export{resetLists};export default listsSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}