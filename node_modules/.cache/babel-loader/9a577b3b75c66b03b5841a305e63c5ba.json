{"ast":null,"code":"import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getLabels = createAsyncThunk('notesApp/labels/getLabels', async () => {\n  const response = await axios.get('/api/notes/labels');\n  const data = await response.data;\n  return data;\n});\nexport const createLabel = createAsyncThunk('notesApp/labels/createLabel', async label => {\n  const response = await axios.post(`/api/notes/labels`, label);\n  const data = await response.data;\n  return data;\n});\nexport const updateLabel = createAsyncThunk('notesApp/labels/updateLabel', async label => {\n  const response = await axios.put(`/api/notes/labels/${label.id}`, label);\n  const data = await response.data;\n  return data;\n});\nexport const removeLabel = createAsyncThunk('notesApp/labels/removeLabel', async id => {\n  const response = await axios.delete(`/api/notes/labels/${id}`);\n  const data = await response.data;\n  return data;\n});\nconst labelsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectLabels,\n  selectEntities: selectLabelsEntities,\n  selectById: selectLabelById\n} = labelsAdapter.getSelectors(state => state.notesApp.labels);\nconst labelsSlice = createSlice({\n  name: 'notesApp/labels',\n  initialState: labelsAdapter.getInitialState({\n    labelsDialogOpen: false\n  }),\n  reducers: {\n    openLabelsDialog: (state, action) => {\n      state.labelsDialogOpen = true;\n    },\n    closeLabelsDialog: (state, action) => {\n      state.labelsDialogOpen = false;\n    }\n  },\n  extraReducers: {\n    [getLabels.fulfilled]: labelsAdapter.setAll,\n    [updateLabel.fulfilled]: labelsAdapter.upsertOne,\n    [removeLabel.fulfilled]: labelsAdapter.removeOne,\n    [createLabel.fulfilled]: labelsAdapter.addOne\n  }\n});\nexport const {\n  openLabelsDialog,\n  closeLabelsDialog\n} = labelsSlice.actions;\nexport const selectLabelsDialogOpen = _ref => {\n  let {\n    notesApp\n  } = _ref;\n  return notesApp.labels.labelsDialogOpen;\n};\nexport default labelsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createEntityAdapter","createSlice","axios","getLabels","response","get","data","createLabel","label","post","updateLabel","put","id","removeLabel","delete","labelsAdapter","selectAll","selectLabels","selectEntities","selectLabelsEntities","selectById","selectLabelById","getSelectors","state","notesApp","labels","labelsSlice","name","initialState","getInitialState","labelsDialogOpen","reducers","openLabelsDialog","action","closeLabelsDialog","extraReducers","fulfilled","setAll","upsertOne","removeOne","addOne","actions","selectLabelsDialogOpen","reducer"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/src/app/main/apps/notes/store/labelsSlice.js"],"sourcesContent":["import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getLabels = createAsyncThunk('notesApp/labels/getLabels', async () => {\r\n  const response = await axios.get('/api/notes/labels');\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const createLabel = createAsyncThunk('notesApp/labels/createLabel', async (label) => {\r\n  const response = await axios.post(`/api/notes/labels`, label);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const updateLabel = createAsyncThunk('notesApp/labels/updateLabel', async (label) => {\r\n  const response = await axios.put(`/api/notes/labels/${label.id}`, label);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nexport const removeLabel = createAsyncThunk('notesApp/labels/removeLabel', async (id) => {\r\n  const response = await axios.delete(`/api/notes/labels/${id}`);\r\n  const data = await response.data;\r\n\r\n  return data;\r\n});\r\n\r\nconst labelsAdapter = createEntityAdapter({});\r\n\r\nexport const {\r\n  selectAll: selectLabels,\r\n  selectEntities: selectLabelsEntities,\r\n  selectById: selectLabelById,\r\n} = labelsAdapter.getSelectors((state) => state.notesApp.labels);\r\n\r\nconst labelsSlice = createSlice({\r\n  name: 'notesApp/labels',\r\n  initialState: labelsAdapter.getInitialState({ labelsDialogOpen: false }),\r\n  reducers: {\r\n    openLabelsDialog: (state, action) => {\r\n      state.labelsDialogOpen = true;\r\n    },\r\n    closeLabelsDialog: (state, action) => {\r\n      state.labelsDialogOpen = false;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getLabels.fulfilled]: labelsAdapter.setAll,\r\n    [updateLabel.fulfilled]: labelsAdapter.upsertOne,\r\n    [removeLabel.fulfilled]: labelsAdapter.removeOne,\r\n    [createLabel.fulfilled]: labelsAdapter.addOne,\r\n  },\r\n});\r\n\r\nexport const { openLabelsDialog, closeLabelsDialog } = labelsSlice.actions;\r\n\r\nexport const selectLabelsDialogOpen = ({ notesApp }) => notesApp.labels.labelsDialogOpen;\r\n\r\nexport default labelsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,2BAAD,EAA8B,YAAY;EACjF,MAAMK,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,mBAAV,CAAvB;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CALwC,CAAlC;AAOP,OAAO,MAAMC,WAAW,GAAGR,gBAAgB,CAAC,6BAAD,EAAgC,MAAOS,KAAP,IAAiB;EAC1F,MAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACO,IAAN,CAAY,mBAAZ,EAAgCD,KAAhC,CAAvB;EACA,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAL0C,CAApC;AAOP,OAAO,MAAMI,WAAW,GAAGX,gBAAgB,CAAC,6BAAD,EAAgC,MAAOS,KAAP,IAAiB;EAC1F,MAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACS,GAAN,CAAW,qBAAoBH,KAAK,CAACI,EAAG,EAAxC,EAA2CJ,KAA3C,CAAvB;EACA,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAL0C,CAApC;AAOP,OAAO,MAAMO,WAAW,GAAGd,gBAAgB,CAAC,6BAAD,EAAgC,MAAOa,EAAP,IAAc;EACvF,MAAMR,QAAQ,GAAG,MAAMF,KAAK,CAACY,MAAN,CAAc,qBAAoBF,EAAG,EAArC,CAAvB;EACA,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;EAEA,OAAOA,IAAP;AACD,CAL0C,CAApC;AAOP,MAAMS,aAAa,GAAGf,mBAAmB,CAAC,EAAD,CAAzC;AAEA,OAAO,MAAM;EACXgB,SAAS,EAAEC,YADA;EAEXC,cAAc,EAAEC,oBAFL;EAGXC,UAAU,EAAEC;AAHD,IAITN,aAAa,CAACO,YAAd,CAA4BC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,MAArD,CAJG;AAMP,MAAMC,WAAW,GAAGzB,WAAW,CAAC;EAC9B0B,IAAI,EAAE,iBADwB;EAE9BC,YAAY,EAAEb,aAAa,CAACc,eAAd,CAA8B;IAAEC,gBAAgB,EAAE;EAApB,CAA9B,CAFgB;EAG9BC,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACT,KAAD,EAAQU,MAAR,KAAmB;MACnCV,KAAK,CAACO,gBAAN,GAAyB,IAAzB;IACD,CAHO;IAIRI,iBAAiB,EAAE,CAACX,KAAD,EAAQU,MAAR,KAAmB;MACpCV,KAAK,CAACO,gBAAN,GAAyB,KAAzB;IACD;EANO,CAHoB;EAW9BK,aAAa,EAAE;IACb,CAAChC,SAAS,CAACiC,SAAX,GAAuBrB,aAAa,CAACsB,MADxB;IAEb,CAAC3B,WAAW,CAAC0B,SAAb,GAAyBrB,aAAa,CAACuB,SAF1B;IAGb,CAACzB,WAAW,CAACuB,SAAb,GAAyBrB,aAAa,CAACwB,SAH1B;IAIb,CAAChC,WAAW,CAAC6B,SAAb,GAAyBrB,aAAa,CAACyB;EAJ1B;AAXe,CAAD,CAA/B;AAmBA,OAAO,MAAM;EAAER,gBAAF;EAAoBE;AAApB,IAA0CR,WAAW,CAACe,OAA5D;AAEP,OAAO,MAAMC,sBAAsB,GAAG;EAAA,IAAC;IAAElB;EAAF,CAAD;EAAA,OAAkBA,QAAQ,CAACC,MAAT,CAAgBK,gBAAlC;AAAA,CAA/B;AAEP,eAAeJ,WAAW,CAACiB,OAA3B"},"metadata":{},"sourceType":"module"}