{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathExcludesPatterns = void 0;\n\nconst PathExcludesPatterns = _ref => {\n  let {\n    patterns\n  } = _ref;\n  return {\n    PathItem(_path, _ref2) {\n      let {\n        report,\n        key,\n        location\n      } = _ref2;\n      if (!patterns) throw new Error(`Parameter \"patterns\" is not provided for \"path-excludes-patterns\" rule`);\n      const pathKey = key.toString();\n\n      if (pathKey.startsWith('/')) {\n        const matches = patterns.filter(pattern => pathKey.match(pattern));\n\n        for (const match of matches) {\n          report({\n            message: `path \\`${pathKey}\\` should not match regex pattern: \\`${match}\\``,\n            location: location.key()\n          });\n        }\n      }\n    }\n\n  };\n};\n\nexports.PathExcludesPatterns = PathExcludesPatterns;","map":{"version":3,"names":["Object","defineProperty","exports","value","PathExcludesPatterns","patterns","PathItem","_path","report","key","location","Error","pathKey","toString","startsWith","matches","filter","pattern","match","message"],"sources":["C:/Users/giato/Downloads/Workspace/.Net/api/doctor-management-fe/node_modules/@redocly/openapi-core/lib/rules/common/path-excludes-patterns.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathExcludesPatterns = void 0;\nconst PathExcludesPatterns = ({ patterns }) => {\n    return {\n        PathItem(_path, { report, key, location }) {\n            if (!patterns)\n                throw new Error(`Parameter \"patterns\" is not provided for \"path-excludes-patterns\" rule`);\n            const pathKey = key.toString();\n            if (pathKey.startsWith('/')) {\n                const matches = patterns.filter((pattern) => pathKey.match(pattern));\n                for (const match of matches) {\n                    report({\n                        message: `path \\`${pathKey}\\` should not match regex pattern: \\`${match}\\``,\n                        location: location.key(),\n                    });\n                }\n            }\n        },\n    };\n};\nexports.PathExcludesPatterns = PathExcludesPatterns;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMA,oBAAoB,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC3C,OAAO;IACHC,QAAQ,CAACC,KAAD,SAAmC;MAAA,IAA3B;QAAEC,MAAF;QAAUC,GAAV;QAAeC;MAAf,CAA2B;MACvC,IAAI,CAACL,QAAL,EACI,MAAM,IAAIM,KAAJ,CAAW,wEAAX,CAAN;MACJ,MAAMC,OAAO,GAAGH,GAAG,CAACI,QAAJ,EAAhB;;MACA,IAAID,OAAO,CAACE,UAAR,CAAmB,GAAnB,CAAJ,EAA6B;QACzB,MAAMC,OAAO,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,OAAD,IAAaL,OAAO,CAACM,KAAR,CAAcD,OAAd,CAA7B,CAAhB;;QACA,KAAK,MAAMC,KAAX,IAAoBH,OAApB,EAA6B;UACzBP,MAAM,CAAC;YACHW,OAAO,EAAG,UAASP,OAAQ,wCAAuCM,KAAM,IADrE;YAEHR,QAAQ,EAAEA,QAAQ,CAACD,GAAT;UAFP,CAAD,CAAN;QAIH;MACJ;IACJ;;EAdE,CAAP;AAgBH,CAjBD;;AAkBAP,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}